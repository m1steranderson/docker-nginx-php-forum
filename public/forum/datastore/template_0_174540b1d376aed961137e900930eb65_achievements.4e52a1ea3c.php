<?php

return <<<'VALUE'
"namespace IPS\\Theme;\nclass class_core_admin_achievements extends \\IPS\\Theme\\Template\n{\n\tpublic $cache_key = '1f7c77872e62046974ceb9e7f69f207b';\n\tfunction awardField( $name, $value ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<input type=\"number\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[points]\" value=\"\nCONTENT;\n\nif ( isset( $value['points'] ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $value['points'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n0\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" class=\"ipsField_short\" min=\"0\">\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'achievements_points_awarded', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'and', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n<select name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[badge]\">\n\t<option value=\"\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'achievements_badge_none', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t\nCONTENT;\n\nforeach ( \\IPS\\core\\Achievements\\Badge::roots() as $badge ):\n$return .= <<<CONTENT\n\n\t\t<option value=\"\nCONTENT;\n$return .= htmlspecialchars( $badge->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( isset( $value['badge'] ) and $value['badge'] == $badge->id ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n$return .= htmlspecialchars( $badge->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/option>\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n<\/select>\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'achievements_badge', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction badgeExport( $exportableBadges ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $exportableBadges ):\n$return .= <<<CONTENT\n\n<div class='acpBlock ipsPad'>\n<div class=\"ipsMessage ipsMessage_info\">\n\t\nCONTENT;\n\n$sprintf = array($exportableBadges); $pluralize = array( $exportableBadges ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'acp_achievements_export_badges_blurb', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf, 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\n<\/div>\n<div class=\"ipsAreaBackground_light ipsClearfix ipsPad ipsType_center\">\n\t<a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=achievements&controller=badges&do=export\", null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" class=\"ipsButton ipsButton_primary\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'acp_achievements_export', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t<\/div>\n<\/div>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n<div class='acpBlock ipsPad'>\n<div class=\"ipsMessage ipsMessage_error\">\n\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'acp_achievements_export_badges_blurb_error', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction memberCount( $url, $count ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class=\"ipsPos_right ipsTree_row_cells ipsType_unbold ipsType_normal\">\n\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsTree_row_cell\">\n\t\t\nCONTENT;\n\n$pluralize = array( $count ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'x_members', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\n\t<\/a>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction milestoneWithSubjectSwitch( $name, $value ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<select name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[0]\">\n\t<option value=\"receiver\" \nCONTENT;\n\nif ( isset( $value[0] ) and $value[0] == 'receiver' ):\n$return .= <<<CONTENT\nselected=\"selected\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'achievement_who_reciever', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t<option value=\"giver\" \nCONTENT;\n\nif ( isset( $value[0] ) and $value[0] == 'giver' ):\n$return .= <<<CONTENT\nselected=\"selected\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'achievement_who_giver', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n<\/select>\n<input type=\"number\" class=\"ipsField_short\" min=\"0\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[1]\" value=\"\nCONTENT;\n\nif ( isset( $value[1] ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $value[1], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'achievement_who_suffix', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction rebuildProgress( $data, $needsBottomSpacer=FALSE ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div data-ipsSticky data-ipsSticky-spacing='60' class=\"ipsPad_half ipsAreaBackground_reset ipsType_center \nCONTENT;\n\nif ( $needsBottomSpacer ):\n$return .= <<<CONTENT\nipsSpacer_bottom\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t<strong class=\"ipsType_large\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'acp_rules_rebuilding_title', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t<p class=\"ipsType_light\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'acp_rules_rebuilding_blurb', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t<div class=\"ipsProgressBar\">\n\t<div class=\"ipsProgressBar_progress\" style=\"width:\nCONTENT;\n\n$return .= htmlspecialchars( number_format( $data['percentage'], 2), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n%\" data-role=\"percentageBar\"><span data-role=\"percentage\">\nCONTENT;\n$return .= htmlspecialchars( $data['percentage'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>% (<span data-role=\"number\">\nCONTENT;\n$return .= htmlspecialchars( $data['processed'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span> \/\nCONTENT;\n$return .= htmlspecialchars( $data['count'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n)<\/div>\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction ruleAwards( $points, $badge, $title ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<ul class=\"ipsList_reset ipsCaterpillar\" data-ipsTooltip data-ipsTooltip-safe title=\"\nCONTENT;\n\nif ( $title ):\n$return .= <<<CONTENT\n<strong>\nCONTENT;\n\n$val = \"{$title}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><br>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( $points and $badge ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$sprintf = array($badge->_title); $pluralize = array( $points ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'achievements_awards_points_and_badge', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf, 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelseif ( $points ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$pluralize = array( $points ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'achievements_awards_points', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelseif ( $badge ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$sprintf = array($badge->_title); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'achievements_awards_badge', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nif ( $points ):\n$return .= <<<CONTENT\n\n\t\t<li class='ipsCaterpillar__item ipsDimension_height:4 ipsDimension_minWidth:4 ipsAreaBackground ipsRadius:full ipsFlex ipsFlex-ai:center ipsFlex-jc:center'>\n\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $points, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t<\/li>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $badge ):\n$return .= <<<CONTENT\n\n\t\t<li class='ipsCaterpillar__item'>{$badge->html('ipsDimension:4', FALSE)}<\/li>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/ul>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction ruleDescription( $conciseAction, $conditions ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<strong>\nCONTENT;\n$return .= htmlspecialchars( $conciseAction, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/strong>\n\nCONTENT;\n\nforeach ( $conditions as $condition ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n$return .= htmlspecialchars( $condition, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction ruleDescriptionBadge( $type, $value, $hoverValues = NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<span class=\"ipsAchievementsBadge ipsAchievementsBadge--\nCONTENT;\n$return .= htmlspecialchars( $type, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $hoverValues ):\n$return .= <<<CONTENT\ndata-ipsTooltip data-ipsTooltip-safe title=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( '<br>', $hoverValues ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\nCONTENT;\n$return .= htmlspecialchars( $value, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n<\/span>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction rulesForm( $id, $action, $elements, $hiddenValues, $actionButtons, $uploadField, $class='', $attributes=array(), $sidebar=NULL, $form=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n\n<div class='cRulesForm ipsPos_center ipsMargin_top:double'>\n\t\nCONTENT;\n\nif ( isset( $hiddenValues['rule_enabled'] ) and ! $hiddenValues['rule_enabled'] ):\n$return .= <<<CONTENT\n\n\t\t<div class=\"ipsMessage ipsMessage_general ipsMargin_bottom\">\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'acp_rule_is_paused', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t<form accept-charset=\"utf-8\" action=\"\nCONTENT;\n$return .= htmlspecialchars( $action, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" method=\"post\" data-controller=\"core.admin.members.achievementRuleForm\" class='ipsBox ipsBox_shadowed '>\n\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_submitted\" value=\"1\">\n\t\t\nCONTENT;\n\nforeach ( $hiddenValues as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( \\is_array($v) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nforeach ( $v as $_k => $_v ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $_k != 'rule_enabled' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[\nCONTENT;\n$return .= htmlspecialchars( $_k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $_v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\n\t\t<div class='ipsPadding' id='acpPageHeader'>\n\t\t\t<h1 class='ipsType_pageTitle ipsType_break'>\n\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Request::i()->id ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'edit_achievement_rule', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'new_achievement_rule', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/h1>\n\t\t\t<p class='ipsMargin:none ipsType_medium'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'achievement_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t<\/div>\n\t\t<div class='ipsAreaBackground_light ipsBorder_vertical ipsPadding sm:ipsPadding:half ipsPos_relative cRulesForm__container'>\n\t\t\t\n\t\t\t\nCONTENT;\n\n$ruleSelect = $elements['']['achievement_rule_action'];\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$options = $ruleSelect->options['options']; \n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$toggles = $ruleSelect->options['toggles']; \n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$ruleSelect->options['toggles'] = array();\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$parts = array();\n$return .= <<<CONTENT\n\n\n\t\t\t\nCONTENT;\n\n\/\/ First, just store the elements in groups so we can build the HTML later\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nforeach ( $options as $option => $extension ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nforeach ( $elements[''] as $k => $element ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( \\in_array( $k, $toggles[ $option ] )  ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n\/\/ Find related filters\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( \\substr( $k, 0, 19 ) === 'achievement_filter_' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\n$parts[ $option ]['filter'][$k]['element'] = $element;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\n$subFilterPrefix = \"achievement_subfilter_\" . \\substr( $k, 19 ) . \"_\";\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\nCONTENT;\n\n\/\/ Find related subfilters\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $elements[''] as $j => $subElement ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\substr( $j, 0, \\strlen( $subFilterPrefix ) ) === $subFilterPrefix ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$parts[ $option ]['filter'][$k]['subFilters'][$j] = $subElement;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\t\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n\/\/ Find award fields \n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( \\substr( $k, -14 ) === '_award_subject' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\n$parts[ $option ]['awardSubject'] = $element;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nelseif ( \\substr( $k, -12 ) === '_award_other' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\n$parts[ $option ]['awardOther'] = $element;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n                        \nCONTENT;\n\n\/\/ Find award translatable fields \n$return .= <<<CONTENT\n\n                        \nCONTENT;\n\nif ( \\substr( $k, -20 ) === '_award_subject_badge' ):\n$return .= <<<CONTENT\n\n                            \nCONTENT;\n\n$parts[ $option ]['awardSubjectTranslatable'] = $element;\n$return .= <<<CONTENT\n\n                        \nCONTENT;\n\nelseif ( \\substr( $k, -18 ) === '_award_other_badge' ):\n$return .= <<<CONTENT\n\n                            \nCONTENT;\n\n$parts[ $option ]['awardOtherTranslatable'] = $element;\n$return .= <<<CONTENT\n\n                        \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\n\t\t\t\nCONTENT;\n\n\/\/ Now we can build all the HTML\n$return .= <<<CONTENT\n\n\t\t\t<div class=\"cRulesForm__condition ipsBox ipsBox_shadowed ipsPos_relative ipsPadding ipsMargin_bottom ipsFlex ipsFlex-ai:start sm:ipsFlex-fd:column ipsFieldRow_fullWidth\">\n\t\t\t\t<h2 class='cRulesForm__condition__title ipsRadius ipsType_center ipsType_medium ipsType_semiBold ipsType_veryLight ipsMargin_vertical:none ipsMargin_right sm:ipsMargin_bottom ipsFlex-flex:00'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'achievement_rule_action', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t\t\t<div>{$elements['']['achievement_rule_action']->html()}<\/div>\n\t\t\t<\/div>\n\n\t\t\t\nCONTENT;\n\nforeach ( $options as $option => $extension ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div id='rule_\nCONTENT;\n$return .= htmlspecialchars( $option, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-role=\"ruleWrap\" style='display: none'>\n\t\t\t\t\t\nCONTENT;\n\nif ( \\count( $parts[ $option ]['filter']) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<div class='cRulesForm__conditionButtons ipsFlex ipsFlex-ai:center ipsFlex-fw:wrap sm:ipsFlex-fd:column sm:ipsFlex-ai:start sm:ipsGap_row:2 ipsGap:2 ipsGap_row:0' data-role=\"conditionButtons\">\n\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $parts[ $option ]['filter'] as $k => $filter ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"achievements\", \\IPS\\Request::i()->app )->rulesForm_addFilterButton( $k, $filter['element'], $form );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/div>\n\n\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $parts[ $option ]['filter'] as $k => $filter ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"achievements\", \\IPS\\Request::i()->app )->rulesForm_filter( $filter['element'] );\n$return .= <<<CONTENT\n\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $filter['subFilters'] ) && \\count( $filter['subFilters']) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<div class='cRulesForm__conditionButtons ipsFlex ipsFlex-ai:center ipsFlex-fw:wrap sm:ipsFlex-fd:column sm:ipsFlex-ai:start sm:ipsGap_row:2 ipsGap:2 ipsGap_row:0' data-role=\"conditionButtons\">\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $filter['subFilters'] as $j => $subFilter ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"achievements\", \\IPS\\Request::i()->app )->rulesForm_addFilterButton( $j, $subFilter, $form );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/div>\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $filter['subFilters'] as $j => $subFilter ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"achievements\", \\IPS\\Request::i()->app )->rulesForm_filter( $subFilter );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\t\t\t\t\n\n\t\t\t\t\t<div class=\"cRulesForm__condition ipsBox ipsBox_shadowed ipsPos_relative ipsPadding ipsMargin_top ipsFlex ipsFlex-ai:start sm:ipsFlex-fd:column\">\n\t\t\t\t\t\t<h2 class='cRulesForm__condition__title ipsRadius ipsType_center ipsType_medium ipsType_semiBold ipsType_veryLight ipsMargin_vertical:none ipsMargin_right sm:ipsMargin_bottom ipsFlex-flex:00'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'achievement_rule_award', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t\t\t\t\t<div class='ipsFlex-flex:11'>\n\t\t\t\t\t\t\t\nCONTENT;\n\n$awardSubject = $parts[ $option ]['awardSubject'];\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\n$awardOther = $parts[ $option ]['awardOther'] ?? NULL;\n$return .= <<<CONTENT\n\n                            \nCONTENT;\n\n$awardSubjectTranslatable = $parts[ $option ]['awardSubjectTranslatable'];\n$return .= <<<CONTENT\n\n                            \nCONTENT;\n\n$awardOtherTranslatable = $parts[ $option ]['awardOtherTranslatable'] ?? NULL;\n$return .= <<<CONTENT\n\n\n\t\t\t\t\t\t\t<div id=\"\nCONTENT;\n$return .= htmlspecialchars( $awardSubject->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $awardSubject->label ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<p class='ipsType_reset ipsType_bold cRulesForm__condition__toDesc'>\nCONTENT;\n$return .= htmlspecialchars( $awardSubject->label, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t{$awardSubject->html()}\n\t\t\t\t\t\t\t<\/div>\n                            <div id=\"\nCONTENT;\n$return .= htmlspecialchars( $awardSubjectTranslatable->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class='ipsPadding_top' style='display: none'>\n                                <p class='ipsType_reset cRulesForm__condition__toDesc'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'Achievement_reason_badge_awarded', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n                                {$awardSubjectTranslatable->html()}\n                            <\/div>\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $awardOther !== NULL ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<div id=\"\nCONTENT;\n$return .= htmlspecialchars( $awardOther->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class='ipsBorder_top ipsMargin_top ipsPadding_top'>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $awardOther->label ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<p class='ipsType_reset ipsType_bold cRulesForm__condition__toDesc'>\nCONTENT;\n$return .= htmlspecialchars( $awardOther->label, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t{$awardOther->html()}\n\t\t\t\t\t\t\t\t<\/div>\n                                <div id=\"\nCONTENT;\n$return .= htmlspecialchars( $awardOtherTranslatable->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class='ipsPadding_top' style='display: none'>\n                                    <p class='ipsType_reset cRulesForm__condition__toDesc'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'Achievement_reason_badge_awarded', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n                                    {$awardOtherTranslatable->html()}\n                                <\/div>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\t\t\t\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t\t<div class='ipsPadding ipsFlex ipsFlex-jc:end'>\n\t\t\t<button type=\"submit\" class='ipsButton ipsButton_primary ipsButton_medium'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'save_rule', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/button>\n\t\t<\/div>\n\t<\/form>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction rulesForm_addFilterButton( $k, $element, $form ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<div data-role=\"toggleFilter\">\n\t<div id=\"\nCONTENT;\n$return .= htmlspecialchars( $element->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" style=\"visibility: hidden; position: absolute\">\n\t\t<input type=\"checkbox\" id=\"\nCONTENT;\n$return .= htmlspecialchars( $element->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_filterCheckbox\" name=\"activeFilters[\nCONTENT;\n$return .= htmlspecialchars( $element->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]\" value=\"1\" data-control=\"toggle\" data-togglesOn=\"\nCONTENT;\n$return .= htmlspecialchars( $element->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_filter\" data-togglesOff=\"\nCONTENT;\n$return .= htmlspecialchars( $element->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_button\" data-filter=\"\nCONTENT;\n$return .= htmlspecialchars( $element->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_filter\" \nCONTENT;\n\nif ( \\in_array( $k, $form->_activeFilters ) ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t<\/div>\n\t<a href='javascript:void(0)' type=\"button\" class='cRulesForm__conditionButton ipsRadius ipsType_small' data-action=\"filterReveal\" data-filter=\"\nCONTENT;\n$return .= htmlspecialchars( $element->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_filterCheckbox\" id=\"\nCONTENT;\n$return .= htmlspecialchars( $element->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_button\">\n\t\t<span class='cRulesForm__conditionButton__icon ipsFlex-inline ipsFlex-ai:center ipsFlex-jc:center'><i class='fa fa-plus'><\/i><\/span> \nCONTENT;\n\nif ( $element->label ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $element->label, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$val = \"{$element->name}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/a>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction rulesForm_filter( $element ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div data-role=\"filterField\" class='cRulesForm_conditionWrap' id=\"\nCONTENT;\n$return .= htmlspecialchars( $element->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_filter\" style='display: none;'>\n\t<div class=\"cRulesForm__condition cRulesForm__condition--subCondition ipsBox ipsBox_shadowed ipsPos_relative ipsPadding ipsMargin_top ipsFlex ipsFlex-ai:start sm:ipsFlex-fd:column\">\n\t\t<h2 class='cRulesForm__condition__title ipsRadius ipsType_center ipsType_medium ipsType_semiBold ipsType_veryLight ipsMargin_vertical:none ipsMargin_right sm:ipsMargin_bottom ipsFlex-flex:00'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'achievement_filter', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t<div class='ipsFlex ipsFlex-ai:center ipsFlex-flex:11 ipsGap:2 ipsGap_row:0'>\n\t\t\t<div>\nCONTENT;\n$return .= htmlspecialchars( $element->prefix, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/div>\n\t\t\t<div>{$element->html()}<\/div>\n\t\t\t<button type=\"button\" data-action=\"filterCollapse\" data-filter=\"\nCONTENT;\n$return .= htmlspecialchars( $element->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_filterCheckbox\" data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'remove_condition', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' class='cRulesForm__condition__close ipsClose ipsClose_small'><\/button>\n\t\t<\/div>\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction rulesList( $rules, $pagination, $rootButtons ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div data-baseurl=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=achievements&controller=rules\", null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" data-controller=\"core.global.core.table\">\n\t<!--<div class=\"ipsBox ipsBox_shadowed ipsPad ipsSpacer_bottom ipsClearfix\">\n\t\t<ul class=\"ipsList_inline\">\n\t\t\t<li><strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'achievement_rules_filters', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/li>\n\t\t\t\nCONTENT;\n\nforeach ( [ 'points', 'badges', 'milestone' ] as $filter ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li>\n\t\t\t\t\t<span class=\"ipsCustomInput\">\n\t\t\t\t\t\t<input type=\"checkbox\" id=\"filter_\nCONTENT;\n$return .= htmlspecialchars( $filter, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" name=\"filter_\nCONTENT;\n$return .= htmlspecialchars( $filter, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-action=\"filter\" checked>\n\t\t\t\t\t\t<span><\/span>\n\t\t\t\t\t<\/span>\n\t\t\t\t\t<label for=\"filter_\nCONTENT;\n$return .= htmlspecialchars( $filter, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$val = \"achievement_rules_filters_{$filter}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t<\/div>-->\n\t\nCONTENT;\n\nif ( $data = \\IPS\\core\\Achievements\\Rule::getRebuildProgress() ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"achievements\", \\IPS\\Request::i()->app )->rebuildProgress( $data );\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<div class='ipsClearfix'>\n\t\t<div data-role=\"tablePagination\" class=\"ipsSpacer_bottom \nCONTENT;\n\nif ( !$pagination ):\n$return .= <<<CONTENT\nipsHide\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">{$pagination}<\/div>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->buttons( $rootButtons );\n$return .= <<<CONTENT\n\n\t<\/div>\n\t<div class=\"acpBlock\">\n\t\t<div class=\"ipsTree_wrapper\">\n            \nCONTENT;\n\nif ( empty( $rules ) ):\n$return .= <<<CONTENT\n\n            <div class='ipsType_light ipsPad'>\n                \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_results', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n            <\/div>\n            \nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t<div class=\"ipsTree_rows\">\n\t\t\t\t<ol class=\"ipsTree\" data-role=\"tableRows\">\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"achievements\", \\IPS\\Request::i()->app )->rulesListRows( $rules );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/ol>\n\t\t\t<\/div>\n            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n\t<div data-role=\"tablePagination\" class='ipsSpacer_top \nCONTENT;\n\nif ( !$pagination ):\n$return .= <<<CONTENT\nipsHide\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>{$pagination}<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction rulesListRows( $rules ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nforeach ( $rules as $rule ):\n$return .= <<<CONTENT\n\n    \nCONTENT;\n\n$canUse = $rule->extension()->canUse();\n$return .= <<<CONTENT\n\n\t<li data-role=\"node\">\n\t\t<div class=\"ipsTree_row ipsType_normal\">\n\t\t\t<div class=\"ipsTree_rowData ipsClearfix \nCONTENT;\n\nif ( !$rule->enabled or !$canUse ):\n$return .= <<<CONTENT\nipsFaded\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t\t\t\t\nCONTENT;\n\nif ( !$rule->enabled ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'acp_rule_paused', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelseif ( !$canUse ):\n$return .= <<<CONTENT\n\n                    \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'acp_rule_disabled', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n                \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t{$rule->extension()->ruleDescription( $rule )}\n                \nCONTENT;\n\nif ( !$canUse ):\n$return .= <<<CONTENT\n\n                <div class=\"ipsType_small\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'acp_rule_disabled_reason', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n                \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\t<div class=\"ipsTree_row_cells \nCONTENT;\n\nif ( !$rule->enabled ):\n$return .= <<<CONTENT\nipsFaded\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t\t\t\t<!-- \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'achievements_awards', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n -->\n\t\t\t\t<div class='ipsFlex-inline ipsFlex-ai:center ipsMargin_right:double'>\n\t\t\t\t\t\nCONTENT;\n\nif ( ( $rule->points_subject or $rule->badgeSubject() ) and ( $rule->points_other or $rule->badgeOther() ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"achievements\", \\IPS\\Request::i()->app )->ruleAwards( $rule->points_subject, $rule->badgeSubject(), $rule->extension()->awardOptions( $rule->filters )['subject'] );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<span class='ipsMargin_horizontal:half'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'and', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"achievements\", \\IPS\\Request::i()->app )->ruleAwards( $rule->points_other, $rule->badgeOther(), $rule->extension()->awardOptions( $rule->filters )['other'] );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nelseif ( $rule->points_subject or $rule->badgeSubject() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"achievements\", \\IPS\\Request::i()->app )->ruleAwards( $rule->points_subject, $rule->badgeSubject(), $rule->extension()->awardOptions( $rule->filters )['subject'] );\n$return .= <<<CONTENT\n\n                    \nCONTENT;\n\nelseif ( $rule->points_other or $rule->badgeOther() ):\n$return .= <<<CONTENT\n\n                        \nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"achievements\", \\IPS\\Request::i()->app )->ruleAwards( $rule->points_other, $rule->badgeOther(), $rule->extension()->awardOptions( $rule->filters )['subject'] );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"achievements\", \\IPS\\Request::i()->app )->ruleAwards( $rule->points_other, NULL, NULL );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<div class=\"ipsTree_controls\">\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->controlStrip( $rule->getButtons( \\IPS\\Http\\Url::internal('app=core&module=achievements&controller=rules') ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/li>\n\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction statsBadgeCount( $count, $groupId, $startTime, $endTime ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=stats&controller=badges&do=showBadges&member_group_id={$groupId}&badgeDateStart={$startTime}&badgeDateEnd={$endTime}\", null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-size=\"narrow\" data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stats_badges_count', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stats_badge_tooltip', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-ipsTooltip>\nCONTENT;\n$return .= htmlspecialchars( $count, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction statsBadgeModal( $results ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class=\"ipsPad\">\n\t<table class=\"ipsTable ipsTable_responsive ipsTable_zebra \" data-role=\"table\">\n\t\t<thead>\n\t\t\t<tr class=\"ipsAreaBackground\">\n\t\t\t\t<th>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stats_badge_mgroup_badge', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/th>\n\t\t\t\t<th>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stats_badge_mgroup_count', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/th>\n\t\t\t<\/tr>\n\t\t<\/thead>\n\t\t<tbody>\n\nCONTENT;\n\nforeach ( $results as $row ):\n$return .= <<<CONTENT\n\n\t\t<tr class=\"ipsClearfix\">\n\t\t\t<td class=\" ipsTable_wrap ipsTable_primary \">\n\t\t\t\t{$row['badge']->html('ipsDimension:3')} \nCONTENT;\n$return .= htmlspecialchars( $row['badge']->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t<\/td>\n\t\t\t<td>\nCONTENT;\n$return .= htmlspecialchars( $row['count'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/td>\n\t\t<\/tr>\n\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n<\/tbody>\n<\/table>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction statsBadgeWrapper( $form, $table ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class=''>\n\t<div class='ipsBox'>\n\t\t<h1 class='ipsBox_titleBar'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stats_badges_title', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\t\t<div>\n\t\t\t{$form}\n\t\t<\/div>\n\t<\/div>\n<\/div>\n\n\n<div class='ipsSpacer_top ipsSpacer_double'>\n\t{$table}\n<\/div>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction statsMemberBadgeCount( $count, $memberId, $startTime, $endTime ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=stats&controller=badges&do=showMemberBadges&member_id={$memberId}&badgeDateStart={$startTime}&badgeDateEnd={$endTime}\", null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-size=\"narrow\" data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stats_badges_count', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stats_badge_tooltip', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-ipsTooltip>\nCONTENT;\n$return .= htmlspecialchars( $count, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction statsMemberBadgeModal( $results ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class=\"ipsPad\">\n\t<table class=\"ipsTable ipsTable_responsive ipsTable_zebra \" data-role=\"table\">\n\t\t<thead>\n\t\t\t<tr class=\"ipsAreaBackground\">\n\t\t\t\t<th>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stats_badge_member_badge', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/th>\n\t\t\t\t<th>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stats_badge_member_date', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/th>\n\t\t\t<\/tr>\n\t\t<\/thead>\n\t\t<tbody>\n\nCONTENT;\n\nforeach ( $results as $row ):\n$return .= <<<CONTENT\n\n\t\t<tr class=\"ipsClearfix\">\n\t\t\t<td class=\" ipsTable_wrap ipsTable_primary \">\n\t\t\t\t{$row['badge']->html('ipsDimension:3')} \nCONTENT;\n$return .= htmlspecialchars( $row['badge']->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t<\/td>\n\t\t\t<td>\nCONTENT;\n\n$val = ( $row['datetime'] instanceof \\IPS\\DateTime ) ? $row['datetime'] : \\IPS\\DateTime::ts( $row['datetime'] );$return .= $val->html();\n$return .= <<<CONTENT\n<\/td>\n\t\t<\/tr>\n\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n<\/tbody>\n<\/table>\nCONTENT;\n\n\t\treturn $return;\n}}"
VALUE;
