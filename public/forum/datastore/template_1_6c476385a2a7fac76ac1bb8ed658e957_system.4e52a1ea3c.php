<?php

return <<<'VALUE'
"namespace IPS\\Theme;\nclass class_core_front_system extends \\IPS\\Theme\\Template\n{\n\tpublic $cache_key = '9a31bead714a37eaad3463cd04f1621d';\n\tfunction announcement( $announcement ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( \\IPS\\Request::i()->isAjax() ):\n$return .= <<<CONTENT\n\n<div>\n\t<div class='ipsPadding ipsPhotoPanel ipsPhotoPanel_tiny ipsClearfix'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $announcement->author(), 'tiny' );\n$return .= <<<CONTENT\n\n\t\t<div>\n\t\t\t<p class='ipsType_reset ipsType_large ipsType_blendLinks'>\n\t\t\t\t\nCONTENT;\n\n$htmlsprintf = array($announcement->author()->link()); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'byline_nodate', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'htmlsprintf' => $htmlsprintf ) );\n$return .= <<<CONTENT\n\n\t            \nCONTENT;\n\nif ( $announcement->start ):\n$return .= <<<CONTENT\n\n\t                <br>\n\t                <span class='ipsType_light ipsType_medium'>\nCONTENT;\n\n$val = ( $announcement->start instanceof \\IPS\\DateTime ) ? $announcement->start : \\IPS\\DateTime::ts( $announcement->start );$return .= (string) $val->localeDate();\n$return .= <<<CONTENT\n<\/span>\n\t            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<div class=\"ipsPadding\">\n\t\t<div class='ipsType_pageHeader'>\n\t\t\t<h1 class='ipsType_pageTitle ipsType_largeTitle ipsContained_container'><span class='ipsType_break ipsContained'>\nCONTENT;\n$return .= htmlspecialchars( $announcement->mapped( 'title' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span><\/h1>\n\t\t\t\nCONTENT;\n\nif ( !$announcement->active ):\n$return .= <<<CONTENT\n\n\t\t\t\t<p class='ipsType_reset ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'announcement_not_active', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t\t<div class='ipsPhotoPanel ipsPhotoPanel_tiny ipsClearfix'>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $announcement->author(), 'tiny' );\n$return .= <<<CONTENT\n\n\t\t\t<div>\n\t\t\t\t<p class='ipsType_reset ipsType_large ipsType_blendLinks'>\n\t\t\t\t\t\nCONTENT;\n\n$htmlsprintf = array($announcement->author()->link()); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'byline_nodate', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'htmlsprintf' => $htmlsprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $announcement->start ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<br>\n\t\t\t\t\t\t<span class='ipsType_light ipsType_medium'>\nCONTENT;\n\n$val = ( $announcement->start instanceof \\IPS\\DateTime ) ? $announcement->start : \\IPS\\DateTime::ts( $announcement->start );$return .= (string) $val->localeDate();\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/p>\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/div>\n\t<br>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<article class='ipsBox ipsPad'>\n\t\t<section class='ipsType_richText ipsType_normal' data-controller='core.front.core.lightboxedImages'>\n\t\t\t{$announcement->mapped( 'content' )}\n\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->modPermission('can_manage_announcements') and ( $announcement->canEdit() or $announcement->canDelete() ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t<hr class='ipsHr'>\n\t\t\t\t<a href='#elAnnouncementActions\nCONTENT;\n$return .= htmlspecialchars( $announcement->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu' id='elAnnouncementActions\nCONTENT;\n$return .= htmlspecialchars( $announcement->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_light ipsButton_verySmall' data-ipsMenu>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'announce_actions', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <i class='fa fa-caret-down'><\/i><\/a>\n\t\t\t\t<ul id='elAnnouncementActions\nCONTENT;\n$return .= htmlspecialchars( $announcement->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu' class='ipsMenu ipsMenu_auto ipsHide'>\n\t\t\t\t\t\nCONTENT;\n\nif ( $announcement->canEdit() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $announcement->url( 'create' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-modal='true' data-ipsDialog-destructOnClose='true' data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'edit_announcement', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-action='ipsMenu_ping'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'edit', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $announcement->canDelete() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $announcement->url( 'delete' )->csrf(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-confirm  title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'delete', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'delete', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $announcement->url( 'status' )->csrf(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\nif ( $announcement->active ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'announce_mark_inactive', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'announce_mark_active', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\nCONTENT;\n\nif ( $announcement->active ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'announce_mark_inactive', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'announce_mark_active', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t<\/ul>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/section>\n\t<\/article>\n\n\t\nCONTENT;\n\nif ( \\IPS\\Request::i()->isAjax() ):\n$return .= <<<CONTENT\n\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction banned( $message, $warnings, $banEnd ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<section class='ipsType_center ipsPad ipsBox'>\n\t<br>\n\t<i class='ipsType_huge fa fa-lock'><\/i>\n\t<h1 class='ipsType_veryLarge'>\nCONTENT;\n\nif ( $banEnd instanceof \\IPS\\DateTime ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'suspended', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'banned', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/h1>\n\t<p class='ipsType_large'>\n\t\t\nCONTENT;\n\n$val = \"{$message}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t<\/p>\n<\/section>\n\n\nCONTENT;\n\nif ( $warnings ):\n$return .= <<<CONTENT\n\n\t<h2 class='ipsType_sectionTitle'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'warnings', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t{$warnings}\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction completeProfile( $form ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<section class='ipsPadding'>\n\t<br>\n\t<h1 class='ipsType_veryLarge ipsType_center ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'need_more_info', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\t<p class='ipsType_large ipsType_center ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'need_more_info_text', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t<br>\n\t<div class='ipsBox ipsPadding'>\n\t\t{$form}\n\t<\/div>\n<\/section>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction completeValidation( $member, $id, $action, $elements, $hiddenValues, $actionButtons, $uploadField, $class='', $attributes=array(), $sidebar=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<form accept-charset='utf-8' method=\"post\" action=\"\nCONTENT;\n$return .= htmlspecialchars( $action, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class='ipsType_center' data-ipsForm data-ipsFormSubmit>\n\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_submitted\" value=\"1\">\n\t\nCONTENT;\n\nforeach ( $hiddenValues as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\n\t<div class='ipsType_center ipsBox ipsPad'>\n\t\t<h1 class='ipsType_veryLarge ipsType_reset'>\nCONTENT;\n\n$sprintf = array($member->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'registration_validate_heading', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/h1>\n\t\t<p class='ipsType_normal ipsType_large'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'registration_validate_explain', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t<button type='submit' class='ipsButton ipsButton_veryLarge ipsButton_primary'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'validate_my_account', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/button>\n\t<\/div>\n<\/form>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction completeWizardTemplate( $stepNames, $activeStep, $output, $baseUrl, $showSteps ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<div data-ipsWizard class='ipsWizard'>\n\t<div data-role=\"wizardStepbar\">\n\t\t\nCONTENT;\n\n$completion = \\intval( (string) \\IPS\\Member::loggedIn()->profileCompletionPercentage() );\n$return .= <<<CONTENT\n\n\t\t<div class=\"ipsProgressBar ipsProgressBar_fullWidth ipsSpacer_bottom\">\n\t\t\t<div class='ipsProgressBar_progress' style='width: \nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Member::loggedIn()->profileCompletionPercentage(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n%'>\n\t\t\t\t\nCONTENT;\n\n$sprintf = array($completion . '%'); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profile_completion_percent', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/div>\n\t<div data-role=\"wizardContent\" class=\"ipsBox\">\n\t\t{$output}\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction contact( $form ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( !\\IPS\\Request::i()->isAjax() ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('contact') );\n$return .= <<<CONTENT\n\n\t<div class='ipsBox_alt'>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<div class='ipsPad'>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<div class='ipsType_normal'>\n\t\t\t{$form}\n\t\t<\/div>\n\t<\/div>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction contactDone(  ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<br><br>\n<div class='ipsBox_alt'>\n\t<p class='ipsType_reset ipsType_center ipsType_huge'>\n\t\t<i class='fa fa-envelope'><\/i>\n\t<\/p>\n\n\t<h1 class='ipsType_veryLarge ipsType_center'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'contact_sent', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\n\t<div class='ipsType_large ipsType_center ipsType_richText'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'contact_sent_blurb', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t<\/div>\n\t<br>\n\t<p class='ipsType_center'>\n\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"\/\", null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_normal ipsButton_small'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'go_community_home', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t<\/p>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction cookies(  ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$prefix = \\IPS\\COOKIE_PREFIX;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( !\\IPS\\Request::i()->isAjax() ):\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('cookies_about') );\nendif;\n$return .= <<<CONTENT\n\n<div class='ipsBox_alt'>\n\t<div class='ipsType_normal ipsType_richText ipsPad'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'cookies_about_header', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t<\/div>\n\t<h3 class=\"ipsType_large\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'cookies_standard', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t<div class='ipsType_normal ipsType_richText ipsPad'>\n\t\t<strong class=\"ipsType_medium\">\nCONTENT;\n$return .= htmlspecialchars( $prefix, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\nIPSSessionFront<\/strong>\n\t\t<div>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'cookie_session_front', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n\t\t<br>\n\t\t<strong class=\"ipsType_medium\">\nCONTENT;\n$return .= htmlspecialchars( $prefix, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\nmember_id<\/strong>\n\t\t<div>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'cookie_member_id', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n\t\t<br>\n        <strong class=\"ipsType_medium\">\nCONTENT;\n$return .= htmlspecialchars( $prefix, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\nloggedIn<\/strong>\n        <div>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'cookie_loggedIn', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n        <br>\n\t\t<strong class=\"ipsType_medium\">\nCONTENT;\n$return .= htmlspecialchars( $prefix, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\nlogin_key<\/strong>\n\t\t<div>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'cookie_login_key', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n        <br>\n        <strong class=\"ipsType_medium\">\nCONTENT;\n$return .= htmlspecialchars( $prefix, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\ndevice_key<\/strong>\n        <div>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'cookie_device_key', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n\t<\/div>\n\t<h3 class=\"ipsType_large\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'cookies_third_party', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t<div class='ipsType_normal ipsType_richText ipsPad'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'cookies_third_party_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\t\n\t<\/div>\n\n\t<h3 class=\"ipsType_large\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'cookies_change_header', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t<div class='ipsType_normal ipsType_richText ipsPad'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'cookies_change_text', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\t\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction coppa( $form, $postBeforeRegister ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<section class='ipsPad'>\n\t<br>\n\t\nCONTENT;\n\nif ( $postBeforeRegister ):\n$return .= <<<CONTENT\n\n\t\t<h1 class='ipsType_veryLarge ipsType_center ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'post_before_register_headline', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\t\t<p class='ipsType_reset ipsType_large ipsType_center ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'post_before_register_subtext', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t<h1 class='ipsType_veryLarge ipsType_center ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_up', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\t\t<p class='ipsType_large ipsType_center ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'existing_user', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=login\", null, \"login\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_in_short', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/p>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<br>\n\n\t<div data-role='registerForm' class='ipsBox ipsPad'>\n\t\t<section class='ipsType_center'>\n\t\t\t<p class='ipsType_large ipsType_reset'><strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_verify', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/p>\n\t\t\t<p class='ipsType_normal ipsType_light ipsType_reset'>\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_verification_only', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( \\IPS\\Settings::i()->privacy_type != \"none\" ):\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n\nif ( \\IPS\\Settings::i()->privacy_type == \"internal\" ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=privacy\", null, \"privacy\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->privacy_link;\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'privacy', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>.\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t\t<br><br>\n\n\t\t\t{$form->customTemplate( array( \\IPS\\Theme::i()->getTemplate( 'system', 'core', 'front' ), 'coppaForm' ) )}\n\t\t<\/section>\n\t<\/div>\n<\/section>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction coppaConsent(  ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class=\"ipsPrint\">\n\t<h1>\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->board_name;\n$return .= <<<CONTENT\n<\/h1>\n\t<h2>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\n\t\nCONTENT;\n\n$sprintf = array(\\IPS\\Settings::i()->board_name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form_intro', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\n\t<table>\n\t\t<tr>\n\t\t\t<th>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form_child_name', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <\/th>\n\t\t\t<th>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form_child_email', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <\/th>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td class=\"ipsPrint_doubleHeight\">&nbsp;<\/td>\n\t\t\t<td class=\"ipsPrint_doubleHeight\">&nbsp;<\/td>\n\t\t<\/tr>\n\t<\/table>\n\t\n\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form_disclaimer', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\n\t<div><\/div>\n\t<div><\/div>\n\n\t<table>\n\t\t<tr>\n\t\t\t<th>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form_name', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <\/th>\n\t\t\t<th>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form_relation', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <\/th>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td class=\"ipsPrint_doubleHeight\">&nbsp;<\/td>\n\t\t\t<td class=\"ipsPrint_doubleHeight\">&nbsp;<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<th>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form_email', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <\/th>\n\t\t\t<th>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form_phone', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <\/th>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td class=\"ipsPrint_doubleHeight\">&nbsp;<\/td>\n\t\t\t<td class=\"ipsPrint_doubleHeight\">&nbsp;<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<th colspan=\"2\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form_sig', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <\/th>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td colspan=\"2\" class=\"ipsPrint_tripleHeight\">&nbsp;<\/td>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<th colspan=\"2\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form_date', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <\/th>\n\t\t<\/tr>\n\t\t<tr>\n\t\t\t<td colspan=\"2\" class=\"ipsPrint_doubleHeight\">&nbsp;<\/td>\n\t\t<\/tr>\n\t<\/table>\n\n\t<div><\/div>\n\n\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->privacy_type != \"none\" ):\n$return .= <<<CONTENT\n\n\t\t<p>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form_privacy', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( \\IPS\\Settings::i()->privacy_type == \"internal\" ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=privacy\", null, \"privacy\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->privacy_link;\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/p>\n\t\t<div><\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->coppa_address ):\n$return .= <<<CONTENT\n\n\t\t<p>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form_mail', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n\n$return .= \\IPS\\GeoLocation::parseForOutput( \\IPS\\Settings::i()->coppa_address );\n$return .= <<<CONTENT\n<\/p>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->coppa_fax ):\n$return .= <<<CONTENT\n\n\t\t<p>\nCONTENT;\n\nif ( \\IPS\\Settings::i()->coppa_address and \\IPS\\Settings::i()->coppa_fax ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_form_fax', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n\n$return .= \\IPS\\Settings::i()->coppa_fax;\n$return .= <<<CONTENT\n<\/p>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction coppaForm( $id, $action, $elements, $hiddenValues, $actionButtons, $uploadField, $class='', $attributes=array(), $sidebar=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<form accept-charset='utf-8' method=\"post\" action=\"\nCONTENT;\n$return .= htmlspecialchars( $action, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" id='elCoppaForm' class='ipsType_center' data-ipsForm>\n\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_submitted\" value=\"1\">\n\t\nCONTENT;\n\nforeach ( $hiddenValues as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\n\t\nCONTENT;\n\nforeach ( $elements as $collection ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nforeach ( $collection as $input ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $input instanceof \\IPS\\Helpers\\Form\\Date ):\n$return .= <<<CONTENT\n\n\t\t\t\t<input type=\"date\" class='ipsField_short ipsField_primary' required placeholder=\"\nCONTENT;\n\n$val = \"{$input->name}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" name='\nCONTENT;\n$return .= htmlspecialchars( $input->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' id='\nCONTENT;\n$return .= htmlspecialchars( $input->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t&nbsp;&nbsp;<button type='submit' class='ipsButton ipsButton_large ipsButton_primary'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'continue', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/button>\n<\/form>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction finishRegistration( $harryPotter ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<section class='ipsPadding'>\n\t<h1 class='ipsType_veryLarge ipsType_center ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'complete_your_profile', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\t<br>\n\t{$harryPotter}\n<\/section>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction followForm( $id, $action, $elements, $hiddenValues, $actionButtons, $uploadField, $class='', $attributes=array(), $sidebar=NULL, $form=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<form \nCONTENT;\n\nif ( \\IPS\\Request::i()->isAjax()  ):\n$return .= <<<CONTENT\ndata-controller='core.front.core.followForm'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n accept-charset='utf-8' class=\"ipsForm \nCONTENT;\n$return .= htmlspecialchars( $class, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" action=\"\nCONTENT;\n$return .= htmlspecialchars( $action, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" method=\"post\" \nCONTENT;\n\nif ( $uploadField ):\n$return .= <<<CONTENT\nenctype=\"multipart\/form-data\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nforeach ( $attributes as $k => $v ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n data-ipsForm >\n\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_submitted\" value=\"1\">\n\t\nCONTENT;\n\nforeach ( $hiddenValues as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $uploadField ):\n$return .= <<<CONTENT\n\n\t\t<input type=\"hidden\" name=\"MAX_FILE_SIZE\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $uploadField, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t<input type=\"hidden\" name=\"plupload\" value=\"\nCONTENT;\n\n$return .= htmlspecialchars( md5( mt_rand() ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<div>\n\t\t<h2 class='ipsType_sectionTitle'>\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Output::i()->title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/h2>\n\t\t<ul class='ipsPadding ipsList_reset'>\n\t\t\t\nCONTENT;\n\nforeach ( $elements as $collection ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nforeach ( $collection as $input ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( \\is_string( $input ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t{$input}\n\t\t\t\t\t\t<hr class='ipsHr'>\n\t\t\t\t\t\nCONTENT;\n\nelseif ( $input instanceof \\IPS\\Helpers\\Form\\Radio ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class=\"ipsFieldRow\">\n\t\t\t\t\t\t\t<strong class='ipsType_normal'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'follow_send_me', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\t{$input->html($form)}\n\t\t\t\t\t\t\t<hr class='ipsHr'>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nelseif ( $input instanceof \\IPS\\Helpers\\Form\\Checkbox ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t{$input->html($form)}\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t{$input->rowHtml($form)}\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t<\/div>\n\t<div class=\"ipsToolList ipsToolList_horizontal ipsBorder_top ipsPadding\">\n\t\t{$actionButtons[0]} \nCONTENT;\n\nif ( isset( $actionButtons[1] ) ):\n$return .= <<<CONTENT\n{$actionButtons[1]}\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/form>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction followedContent( $types, $currentAppModule, $currentType, $table ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( !\\IPS\\Request::i()->isAjax() ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('menu_followed_content') );\n$return .= <<<CONTENT\n\n<div class='ipsBox_alt'>\n\t<div data-role=\"profileContent\">\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<div class=\"ipsColumns ipsColumns_collapsePhone\">\n\t\t\t<div class=\"ipsColumn ipsColumn_wide\">\n\t\t\t\t<div class=\"ipsSideMenu ipsBox ipsPad\" data-ipsTabBar data-ipsTabBar-contentArea='#elFollowedContent' data-ipsTabBar-itemselector=\".ipsSideMenu_item\" data-ipsTabBar-activeClass=\"ipsSideMenu_itemActive\" data-ipsSideMenu>\n\t\t\t\t\t<h3 class=\"ipsSideMenu_mainTitle ipsAreaBackground_light ipsType_medium\">\n\t\t\t\t\t\t<a href=\"#user_content\" class=\"ipsPad_double\" data-action=\"openSideMenu\"><i class=\"fa fa-bars\"><\/i> &nbsp;\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'user_content_type', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n&nbsp;<i class=\"fa fa-caret-down\"><\/i><\/a>\n\t\t\t\t\t<\/h3>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $types as $app => $_types ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $app != \"core\" ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<h4 class='ipsSideMenu_subTitle'>\nCONTENT;\n\n$val = \"module__{$app}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h4>\n\t\t\t\t\t\t\t\t<ul class=\"ipsSideMenu_list\">\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $_types as $key => $class ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li><a href=\"\nCONTENT;\n$return .= htmlspecialchars( $table->baseUrl->setQueryString( array( 'type' => $key, 'change_section' => 1 ) )->setPage( 'page', 1 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsSideMenu_item \nCONTENT;\n\nif ( $currentType == $key ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\nCONTENT;\n\nif ( is_subclass_of( $class, 'IPS\\Content\\Item' ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$val = \"{$class::$title}_pl\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$val = \"{$class::$nodeTitle}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/a><\/li>\t\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<h4 class='ipsSideMenu_subTitle'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'other', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h4>\n\t\t\t\t\t\t<ul class='ipsSideMenu_list'>\n\t\t\t\t\t\t\t<li><a href=\"\nCONTENT;\n$return .= htmlspecialchars( $table->baseUrl->setQueryString( array( 'type' => 'core_member', 'change_section' => 1 ) )->setPage( 'page', 1 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsSideMenu_item \nCONTENT;\n\nif ( $currentType == 'core_member' ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'members', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t<\/div>\t\t\t\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<div class=\"ipsColumn ipsColumn_fluid\" id='elFollowedContent'>\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"system\", \"core\" )->followedContentSection( $types, $currentAppModule, $currentType, (string) $table );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t<\/div>\n\nCONTENT;\n\nif ( !\\IPS\\Request::i()->isAjax() ):\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction followedContentMemberRow( $table, $headers, $rows ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nforeach ( $rows as $row ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$loadedMember = \\IPS\\Member::load( $row->member_id );\n$return .= <<<CONTENT\n\n\t<li class='ipsDataItem' data-controller='core.front.system.manageFollowed' data-followID='\nCONTENT;\n$return .= htmlspecialchars( $row->_followData['follow_area'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-\nCONTENT;\n$return .= htmlspecialchars( $row->_followData['follow_rel_id'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t<div class='ipsDataItem_icon'>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $loadedMember, 'small' );\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t\t<div class='ipsDataItem_main'>\n\t\t\t<h3 class='ipsType_reset ipsType_large ipsType_unbold'>{$loadedMember->link( NULL, FALSE )}<\/h3> \nCONTENT;\n\nif ( $loadedMember->isOnline() ):\n$return .= <<<CONTENT\n<i class=\"fa fa-circle ipsOnlineStatus_online\" data-ipsTooltip title='\nCONTENT;\n\n$sprintf = array($row->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'online_now', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n'><\/i>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<span class='ipsType_normal'>\nCONTENT;\n\n$return .= \\IPS\\Member\\Group::load( $row->member_group_id )->formattedName;\n$return .= <<<CONTENT\n<\/span>\n\t\t\t<ul class='ipsList_inline ipsType_light'>\n\t\t\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'members_member_posts', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n: \nCONTENT;\n$return .= htmlspecialchars( $loadedMember->member_posts, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'members_joined', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n: \nCONTENT;\n\n$val = ( $loadedMember->joined instanceof \\IPS\\DateTime ) ? $loadedMember->joined : \\IPS\\DateTime::ts( $loadedMember->joined );$return .= $val->html();\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t\nCONTENT;\n\nif ( $loadedMember->last_activity ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'members_last_visit', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n: \nCONTENT;\n\n$val = ( $loadedMember->last_activity instanceof \\IPS\\DateTime ) ? $loadedMember->last_activity : \\IPS\\DateTime::ts( $loadedMember->last_activity );$return .= $val->html();\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/ul>\n\t\t<\/div>\n\t\t<div class='ipsDataItem_generic ipsDataItem_size1 ipsType_center ipsType_large'>\n\t\t\t<span class='ipsBadge ipsBadge_icon ipsBadge_new \nCONTENT;\n\nif ( !$row->_followData['follow_is_anon'] ):\n$return .= <<<CONTENT\nipsHide\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' data-role='followAnonymous' data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'follow_is_anon', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-eye-slash'><\/i><\/span>\n\t\t<\/div>\n\n\t\t<div class='ipsDataItem_generic ipsDataItem_size6'>\n\t\t\t<ul class='ipsList_reset'>\n\t\t\t\t<li title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'follow_when', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-role='followDate'><i class='fa fa-clock-o'><\/i> \nCONTENT;\n\n$val = ( $row->_followData['follow_added'] instanceof \\IPS\\DateTime ) ? $row->_followData['follow_added'] : \\IPS\\DateTime::ts( $row->_followData['follow_added'] );$return .= $val->html();\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t<li title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'follow_how', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-role='followFrequency'>\n\t\t\t\t\t\nCONTENT;\n\nif ( $row->_followData['follow_notify_freq'] == 'none' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<i class='fa fa-bell-slash-o'><\/i>\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<i class='fa fa-bell'><\/i>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\n$val = \"follow_freq_{$row->_followData['follow_notify_freq']}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/li>\n\t\t\t<\/ul>\n\t\t<\/div>\n\n\t\t<div class='ipsDataItem_generic ipsDataItem_size6 ipsType_center'>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"system\", \"core\" )->manageFollow( $row->_followData['follow_app'], $row->_followData['follow_area'], $row->_followData['follow_rel_id'] );\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\n\t\t\nCONTENT;\n\nif ( $table->canModerate() ):\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsDataItem_modCheck'>\n\t\t\t\t<span class='ipsCustomInput'>\n\t\t\t\t\t<input type='checkbox' data-role='moderation' name=\"moderate[\nCONTENT;\n$return .= htmlspecialchars( $row->member_id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]\" data-actions=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ' ', $table->multimodActions( $row ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-state=''>\n\t\t\t\t\t<span><\/span>\n\t\t\t\t<\/span>\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/li>\n\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction followedContentSection( $types, $currentAppModule, $currentType, $table ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsBox cFollowedContent'>\n\t<h2 class='ipsType_sectionTitle ipsType_reset'>\nCONTENT;\n\nif ( is_subclass_of( $types[ $currentAppModule ][ $currentType ], 'IPS\\Content\\Item' ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::loggedIn()->language()->addToStack( $types[ $currentAppModule ][ $currentType ]::$title . '_pl' )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stuff_i_follow', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelseif ( $types[ $currentAppModule ][ $currentType ] == \"\\IPS\\Member\" ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'members_i_follow', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::loggedIn()->language()->addToStack( $types[ $currentAppModule ][ $currentType ]::$nodeTitle )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stuff_i_follow', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/h2>\n\t{$table}\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction followers( $url, $pagination, $followers, $anonymous, $removeAllUrl ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div data-ipsInfScroll data-ipsInfScroll-scrollScope=\"#elFollowerList\" data-ipsInfScroll-container=\"#elFollowerListContainer\" data-ipsInfScroll-url=\"\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-ipsInfScroll-pageParam=\"followerPage\" data-ipsInfScroll-pageBreakTpl=\"\">\n\t<div class=\"ipsJS_hide\">{$pagination}<\/div>\n\t<div class='ipsFollowerList ipsPad ipsBox_alt ipsScrollbar' id=\"elFollowerList\">\n\t\t<ul class=\"ipsDataList ipsList_reset\" id='elFollowerListContainer'>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"system\", \\IPS\\Request::i()->app )->followersRows( $followers );\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t\t\nCONTENT;\n\nif ( $anonymous ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $followers !== NULL and \\count( $followers ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div class=\"ipsPad_half ipsType_center ipsType_light\">\nCONTENT;\n\n$pluralize = array( $anonymous ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'and_x_others', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n<\/div>\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<div class=\"ipsPad_half ipsType_center ipsType_light\">\nCONTENT;\n\n$pluralize = array( $anonymous ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'x_anonymous_members', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n<\/div>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->modPermission('can_remove_followers') ):\n$return .= <<<CONTENT\n\n\t\t<ul class=\"ipsPad ipsToolList ipsToolList_horizontal ipsList_reset ipsClearfix ipsAreaBackground\">\n\t\t\t<li>\n\t\t\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $removeAllUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-confirm data-confirmmessage='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'remove_followers_confirm', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' class=\"ipsButton ipsButton_medium ipsButton_fullWidth ipsButton_negative\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'remove_followers', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t<\/li>\n\t\t<\/ul>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction followersRows( $followers ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nforeach ( $followers as $follower ):\n$return .= <<<CONTENT\n\n\t<li class='ipsDataItem ipsClearfix'>\n\t\t<div class='ipsDataItem_icon ipsPos_top'>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( \\IPS\\Member::load( $follower['follow_member_id'] ), 'tiny' );\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t\t<div class='ipsDataItem_main'>\n\t\t\t<strong class='ipsDataItem_title'>\nCONTENT;\n\n$link = \\IPS\\Member::load( $follower['follow_member_id'] )->link();\n$return .= <<<CONTENT\n{$link}<\/strong><br>\n\t\t\t<span class='ipsType_light'>\nCONTENT;\n\n$val = ( $follower['follow_added'] instanceof \\IPS\\DateTime ) ? $follower['follow_added'] : \\IPS\\DateTime::ts( $follower['follow_added'] );$return .= $val->html();\n$return .= <<<CONTENT\n<\/span>\n\t\t<\/div>\n\t<\/li>\n\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction guidelines( $guidelines ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( !\\IPS\\Request::i()->isAjax() ):\n$return .= <<<CONTENT\n\n\t<div class='ipsPageHeader sm:ipsPadding:half ipsClearfix ipsMargin_bottom sm:ipsMargin_bottom:half ipsType_center'>\n\t\t<h1 class='ipsType_veryLarge'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'guidelines', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<div class='ipsType_normal ipsType_richText ipsPadding ipsBox ipsResponsive_pull'>\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\", 'global' )->richText( \\IPS\\Member::loggedIn()->language()->addToStack('guidelines_value'), array('ipsType_normal') );\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction ignore( $form, $table, $id=0 ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('ignored_users'), \\IPS\\Member::loggedIn()->language()->addToStack('ignored_users_blurb') );\n$return .= <<<CONTENT\n\n<div data-controller='core.front.ignore.new' data-id=\"\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t<div class='ipsBox ipsPadding ipsResponsive_pull ipsMargin_bottom'>\n\t\t<h2 class='ipsType_sectionHead'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ignored_users_add', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t<p class='ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ignored_users_add_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t<br>\n\t\t{$form}\n\t<\/div>\n\t\n\t<div class='ipsResponsive_pull'>\n\t\t{$table}\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction ignoreEditForm( $id, $action, $elements, $hiddenValues, $actionButtons, $uploadField, $class='', $attributes=array(), $sidebar=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<form accept-charset='utf-8' id=\"elIgnoreForm\" class=\"ipsForm \nCONTENT;\n$return .= htmlspecialchars( $class, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" action=\"\nCONTENT;\n$return .= htmlspecialchars( $action, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" method=\"post\" \nCONTENT;\n\nif ( $uploadField ):\n$return .= <<<CONTENT\nenctype=\"multipart\/form-data\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nforeach ( $attributes as $k => $v ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n data-ipsForm data-controller='core.front.ignore.edit'>\n\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_submitted\" value=\"1\">\n\t\nCONTENT;\n\nforeach ( $hiddenValues as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<ul class=\"ipsForm ipsForm_vertical ipsPad\">\n\t\t\nCONTENT;\n\nforeach ( $elements as $collection ):\n$return .= <<<CONTENT\n\n\t\t\t<li class='ipsFieldRow ipsFieldRow_fullWidth'>\n\t\t\t\t<ul class='ipsFieldRow_content ipsList_reset'>\n\t\t\t\t\t\nCONTENT;\n\nforeach ( $collection as $input ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $input instanceof \\IPS\\Helpers\\Form\\Checkbox ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li class='ipsFieldRow_inlineCheckbox'>\n\t\t\t\t\t\t\t\t{$input->html()}\n\t\t\t\t\t\t\t\t<label for='check_\nCONTENT;\n$return .= htmlspecialchars( $input->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$val = \"{$input->name}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/ul>\n\t\t\t<\/li>\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<\/ul>\n\t<div class='ipsBorder_top ipsPadding ipsType_right'>\n\t\t\nCONTENT;\n\nforeach ( $actionButtons as $button ):\n$return .= <<<CONTENT\n\n\t\t\t{$button}\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/form>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction ignoreForm( $id, $action, $elements, $hiddenValues, $actionButtons, $uploadField, $class='', $attributes=array(), $sidebar=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<form accept-charset='utf-8' id=\"elIgnoreForm\" class=\"ipsForm \nCONTENT;\n$return .= htmlspecialchars( $class, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" action=\"\nCONTENT;\n$return .= htmlspecialchars( $action, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" method=\"post\" \nCONTENT;\n\nif ( $uploadField ):\n$return .= <<<CONTENT\nenctype=\"multipart\/form-data\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nforeach ( $attributes as $k => $v ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n data-ipsForm>\n\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_submitted\" value=\"1\">\n\t\nCONTENT;\n\nforeach ( $hiddenValues as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<ul class=\"ipsForm ipsForm_vertical\">\n\t\t\nCONTENT;\n\nforeach ( $elements as $collection ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nforeach ( $collection as $input ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( !( $input instanceof \\IPS\\Helpers\\Form\\Checkbox ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li class='ipsFieldRow ipsFieldRow_noLabel ipsFieldRow_fullWidth'>\n\t\t\t\t\t\t<div class='ipsFieldRow_content'>\n\t\t\t\t\t\t\t{$input->html()}\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $input->error ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t\t<span class=\"ipsType_warning\">\nCONTENT;\n\n$val = \"{$input->error}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/li>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t<li class='ipsFieldRow ipsFieldRow_fullWidth' id='elIgnoreTypes'>\n\t\t\t\t<strong class='ipsFieldRow_title'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ignored_users_ignore', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t<ul class='ipsFieldRow_content ipsList_reset'>\n\t\t\t\t\t\nCONTENT;\n\nforeach ( $collection as $input ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $input instanceof \\IPS\\Helpers\\Form\\Checkbox ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li class='ipsFieldRow_inlineCheckbox'>\n\t\t\t\t\t\t\t\t{$input->html()}\n\t\t\t\t\t\t\t\t<label for='check_\nCONTENT;\n$return .= htmlspecialchars( $input->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$val = \"{$input->name}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/ul>\n\t\t\t<\/li>\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<li class='ipsFieldRow' id='elIgnoreSubmitRow'>\n\t\t\t<div class='ipsFieldRow_content'>\n\t\t\t\t\nCONTENT;\n\nforeach ( $actionButtons as $button ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t{$button}\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t<\/li>\n\t<\/ul>\n\t<div id='elIgnoreLoading'><\/div>\n<\/form>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction ignoreTable( $table, $headers, $rows, $quickSearch ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<div class='ipsBox' data-baseurl='\nCONTENT;\n$return .= htmlspecialchars( $table->baseUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-resort='\nCONTENT;\n$return .= htmlspecialchars( $table->resortKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-controller='core.global.core.table' id='elTable_\nCONTENT;\n$return .= htmlspecialchars( $table->uniqueId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\nCONTENT;\n\nif ( $table->title ):\n$return .= <<<CONTENT\n\n\t\t<h2 class='ipsType_sectionTitle ipsType_reset ipsClear'>\nCONTENT;\n\n$val = \"{$table->title}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<div class=\"ipsButtonBar ipsPad_half ipsClearfix ipsClear\">\n\t\t<ul class=\"ipsButtonRow ipsPos_right ipsClearfix\">\n\t\t\t\nCONTENT;\n\nif ( !empty( $table->filters ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"#elFilterByMenu_menu\" data-role=\"tableFilterMenu\" id=\"elFilterByMenu_\nCONTENT;\n$return .= htmlspecialchars( $table->uniqueId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-ipsMenu data-ipsMenu-activeClass=\"ipsButtonRow_active\" data-ipsMenu-selectable=\"radio\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'filter_by', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <i class=\"fa fa-caret-down\"><\/i><\/a>\n\t\t\t\t\t<ul class='ipsMenu ipsMenu_auto ipsMenu_withStem ipsMenu_selectable ipsHide' id='elFilterByMenu_\nCONTENT;\n$return .= htmlspecialchars( $table->uniqueId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu'>\n\t\t\t\t\t\t<li data-ipsMenuValue='' class='ipsMenu_item \nCONTENT;\n\nif ( !$table->filter ):\n$return .= <<<CONTENT\nipsMenu_itemChecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $table->baseUrl->setQueryString( array( 'sortby' => $table->sortBy, 'sortdirection' => $table->sortDirection, 'filter' => '', 'group' => \\IPS\\Request::i()->group ) )->setPage( 'page', 1 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='\nCONTENT;\n\nif ( !array_key_exists( $table->filter, $table->filters ) ):\n$return .= <<<CONTENT\nipsButtonRow_active\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'all', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $table->filters as $k => $q ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li data-ipsMenuValue='\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsMenu_item \nCONTENT;\n\nif ( $k === $table->filter ):\n$return .= <<<CONTENT\nipsMenu_itemChecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $table->baseUrl->setQueryString( array( 'filter' => $k, 'sortby' => $table->sortBy, 'sortdirection' => $table->sortDirection, 'group' => \\IPS\\Request::i()->group ) )->setPage( 'page', 1 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='cIgnoreType_\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$val = \"{$table->langPrefix}{$k}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/ul>\n\t\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t\t<div data-role=\"tablePagination\" \nCONTENT;\n\nif ( $table->pages <= 1 ):\n$return .= <<<CONTENT\nclass='ipsHide'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\", 'global' )->pagination( $table->baseUrl, $table->pages, $table->page, $table->limit );\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n\n\t<ol class='ipsDataList ipsGrid ipsGrid_collapsePhone ipsClear' id='elIgnoreUsers' data-role='tableRows'>\n\t\t\nCONTENT;\n\n$return .= $table->rowsTemplate[0]->{$table->rowsTemplate[1]}( $table, $headers, $rows );\n$return .= <<<CONTENT\n\n\t<\/ol>\n \n\t<div class=\"ipsButtonBar ipsPad_half ipsClearfix ipsClear \nCONTENT;\n\nif ( $table->pages <= 1 ):\n$return .= <<<CONTENT\nipsHide\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" data-role=\"tablePagination\">\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\", 'global' )->pagination( $table->baseUrl, $table->pages, $table->page, $table->limit );\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction ignoreTableRows( $table, $headers, $rows ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( empty($rows) ):\n$return .= <<<CONTENT\n\n\t<li class='ipsDataItem'>\n\t\t<div class='ipsPad ipsType_light ipsType_center'><br><br>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_results', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n\t<\/li>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nforeach ( $rows as $r ):\n$return .= <<<CONTENT\n\n\t\t<li class='ipsDataItem ipsGrid_span6 ipsFaded_withHover' id='elIgnoreRow\nCONTENT;\n$return .= htmlspecialchars( $r['ignore_ignore_id'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-role=\"ignoreRow\" data-ignoreUserID='\nCONTENT;\n$return .= htmlspecialchars( $r['ignore_ignore_id'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-controller='core.front.ignore.existing'>\n\t\t\t<p class='ipsType_reset ipsDataItem_icon'>\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( \\IPS\\Member::load( $r['ignore_ignore_id'] ), 'tiny' );\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t\t<div class='ipsDataItem_main'>\n\t\t\t\t<h4 class='ipsDataItem_title'><strong data-role=\"ignoreRowName\">\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Member::load( $r['ignore_ignore_id'] )->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/strong><\/h4>\n\t\t\t\t<ul class='ipsList_inline'>\n\t\t\t\t\t\nCONTENT;\n\nforeach ( \\IPS\\core\\Ignore::types() as $t ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $r[\"ignore_{$t}\"] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li class='ipsType_light'><i class='fa fa-check'><\/i> \nCONTENT;\n\n$val = \"ignore_$t\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li class='ipsFaded'>\n\t\t\t\t\t\t<a href='#elUserIgnore\nCONTENT;\n$return .= htmlspecialchars( $r['ignore_ignore_id'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu' id='elUserIgnore\nCONTENT;\n$return .= htmlspecialchars( $r['ignore_ignore_id'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsType_large ipsPos_middle ipsType_blendLinks' data-ipsMenu data-ipsMenu-appendTo='#elIgnoreRow\nCONTENT;\n$return .= htmlspecialchars( $r['ignore_ignore_id'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action='ignoreMenu'>\n\t\t\t\t\t\t\t<i class='fa fa-cog'><\/i> <i class='fa fa-caret-down'><\/i>\n\t\t\t\t\t\t<\/a>\n\t\t\t\t\t<\/li>\n\t\t\t\t<\/ul>\n\n\t\t\t\t<ul class='ipsMenu ipsJS_hide' id='elUserIgnore\nCONTENT;\n$return .= htmlspecialchars( $r['ignore_ignore_id'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu'>\n\t\t\t\t\t<li class='ipsMenu_item' data-ipsMenuValue='edit'>\n\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=ignore&do=edit&id={$r['ignore_ignore_id']}\", null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-remoteSubmit data-ipsDialog-size='narrow' data-ipsDialog-title='\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::load( $r['ignore_ignore_id'] )->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'edit_ignore_for', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_ignored_content', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t<\/li>\n\t\t\t\t\t<li class='ipsMenu_item' data-ipsMenuValue='remove'>\n\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=ignore&do=remove&id={$r['ignore_ignore_id']}\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stop_ignoring_user', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t<\/li>\n\t\t\t\t<\/ul>\n\t\t\t<\/div>\n\t\t<\/li>\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction invite( $links, $url ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<div class='ipsPad'>\n\t<h4 class='ipsType_sectionHead'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'block_invite', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h4>\n\t<hr class='ipsHr'>\n\t<h5 class='ipsType_normal ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'link_to_site', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h5>\n\n\t<input type='text' value='\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsField_fullWidth'>\n\n\t\nCONTENT;\n\nif ( \\count( $links )  ):\n$return .= <<<CONTENT\n\n\t<h5 class='ipsType_normal ipsType_reset ipsSpacer_top'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'share_externally', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h5>\n\t<ul class='ipsList_inline ipsList_noSpacing ipsClearfix'>\n\t\t\nCONTENT;\n\nforeach ( $links as $link  ):\n$return .= <<<CONTENT\n\n\t\t<li>{$link}<\/li>\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<\/ul>\n\t<hr class='ipsHr'>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<button class='ipsHide ipsButton ipsButton_small ipsButton_light ipsButton_fullWidth ipsMargin_top:half' data-controller='core.front.core.webshare' data-role='webShare' data-webShareTitle='\nCONTENT;\n\n$sprintf = array(\\IPS\\Settings::i()->board_name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'block_invite_text', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n' data-webShareText='\nCONTENT;\n\n$sprintf = array(\\IPS\\Settings::i()->board_name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'block_invite_text', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n' data-webShareUrl='\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\nif ( \\count( $links ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'more_share_options', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'share', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/button>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction login( $login, $ref, $error ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<form accept-charset='utf-8' method='post' action='\nCONTENT;\n$return .= htmlspecialchars( $login->url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsBox_alt'>\n\t<input type=\"hidden\" name=\"csrfKey\" value=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Session::i()->csrfKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nif ( $ref ):\n$return .= <<<CONTENT\n\n\t\t<input type=\"hidden\" name=\"ref\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $ref, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$usernamePasswordMethods = $login->usernamePasswordMethods();\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$buttonMethods = $login->buttonMethods();\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $usernamePasswordMethods and $buttonMethods ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $error ):\n$return .= <<<CONTENT\n\n\t\t\t<div class=\"ipsMessage ipsMessage_error\">\nCONTENT;\n\n$val = \"{$error}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<div class='ipsColumns ipsColumns_collapsePhone'>\n\t\t\t<div class='ipsColumn ipsColumn_fluid'>\n\t\t\t\t<div class='\nCONTENT;\n\nif ( !\\IPS\\Request::i()->isAjax() ):\n$return .= <<<CONTENT\nipsBox ipsResponsive_pull\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n ipsPadding'>\n\t\t\t\t\t\nCONTENT;\n\nif ( !\\IPS\\Request::i()->isAjax() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<h1 class='ipsType_reset ipsType_pageTitle'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_in_short', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Login::registrationType() != 'disabled' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<p class='ipsType_reset ipsType_large ipsType_light'>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'dont_have_an_account', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Login::registrationType() == 'redirect' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Settings::i()->allow_reg_target, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' target=\"_blank\" rel=\"noopener\">\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=register\", null, \"register\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( \\IPS\\Login::registrationType() == 'normal' ):\n$return .= <<<CONTENT\ndata-ipsDialog data-ipsDialog-size='narrow' data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_up', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_up', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\t<hr class='ipsHr ipsMargin_vertical'>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"system\", \"core\" )->loginForm( $login );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<div class='ipsColumn ipsColumn_veryWide'>\n\t\t\t\t<div class='\nCONTENT;\n\nif ( !\\IPS\\Request::i()->isAjax() ):\n$return .= <<<CONTENT\nipsBox ipsResponsive_pull\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n ipsPadding'>\n\t\t\t\t\t<h2 class='ipsType_sectionHead'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_in_faster', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t\t\t\t\nCONTENT;\n\nif ( \\count( $buttonMethods ) > 1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<p class='ipsType_normal ipsType_reset ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_in_with_these', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<div class='ipsGap:2 ipsMargin_top:half'>\n\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $buttonMethods as $method ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<div class='cLogin_social ipsType_center'>\n\t\t\t\t\t\t\t\t{$method->button()}\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t<\/div>\n\t\nCONTENT;\n\nelseif ( $usernamePasswordMethods ):\n$return .= <<<CONTENT\n\n\t\t<div class='cLogin_single ipsPos_center'>\n\t\t\nCONTENT;\n\nif ( $error ):\n$return .= <<<CONTENT\n\n\t\t\t<p class=\"ipsMessage ipsMessage_error\">\nCONTENT;\n\n$val = \"{$error}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<div class=\"\nCONTENT;\n\nif ( !\\IPS\\Request::i()->isAjax() ):\n$return .= <<<CONTENT\nipsBox ipsResponsive_pull\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n ipsPadding\">\n\t\t\t\t\nCONTENT;\n\nif ( !\\IPS\\Request::i()->isAjax() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<h1 class='ipsType_reset ipsType_pageTitle'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_in_short', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Login::registrationType() != 'disabled' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<p class='ipsType_reset ipsType_large ipsType_light'>\n\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'dont_have_an_account', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Login::registrationType() == 'redirect' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Settings::i()->allow_reg_target, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' target=\"_blank\" rel=\"noopener\">\n\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=register\", null, \"register\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( \\IPS\\Login::registrationType() == 'normal' ):\n$return .= <<<CONTENT\ndata-ipsDialog data-ipsDialog-size='narrow' data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_up', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_up', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t<hr class='ipsHr ipsMargin_vertical'>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"system\", \"core\" )->loginForm( $login );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t<\/div>\n\t\nCONTENT;\n\nelseif ( $buttonMethods ):\n$return .= <<<CONTENT\n\n\t\t<div class=\"cLogin_single ipsPos_center\">\n\t\t\t\nCONTENT;\n\nif ( $error ):\n$return .= <<<CONTENT\n\n\t\t\t\t<p class=\"ipsMessage ipsMessage_error\">\nCONTENT;\n\n$val = \"{$error}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsGap:2 ipsMargin_top:half'>\n\t\t\t\t\nCONTENT;\n\nforeach ( $buttonMethods as $method ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<div class='ipsType_center'>\n\t\t\t\t\t\t{$method->button()}\n\t\t\t\t\t<\/div>\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/form>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction loginForm( $login ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<ul class='ipsForm'>\n\t<li class=\"ipsFieldRow ipsFieldRow_fullWidth ipsClearfix\">\n\t\t\nCONTENT;\n\n$authType = $login->authType();\n$return .= <<<CONTENT\n\n\t\t<label class=\"ipsFieldRow_label\" for=\"auth\">\n\t\t\t\nCONTENT;\n\nif ( $authType === \\IPS\\Login::AUTH_TYPE_USERNAME ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'username', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nelseif ( $authType === \\IPS\\Login::AUTH_TYPE_EMAIL ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'email_address', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'username_or_email', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<span class=\"ipsFieldRow_required\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'required', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t<\/label>\n\t\t<div class=\"ipsFieldRow_content\">\n\t\t\t\nCONTENT;\n\nif ( $authType === \\IPS\\Login::AUTH_TYPE_USERNAME ):\n$return .= <<<CONTENT\n\n\t\t\t\t<input type=\"text\" placeholder=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'username', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" name=\"auth\" id=\"auth\" \nCONTENT;\n\nif ( isset( \\IPS\\Request::i()->auth ) ):\n$return .= <<<CONTENT\nvalue=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Request::i()->auth, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n autocomplete=\"username\">\n\t\t\t\nCONTENT;\n\nelseif ( $authType === \\IPS\\Login::AUTH_TYPE_EMAIL ):\n$return .= <<<CONTENT\n\n\t\t\t\t<input type=\"email\" placeholder=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'email_address', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" name=\"auth\" id=\"auth\" \nCONTENT;\n\nif ( isset( \\IPS\\Request::i()->auth ) ):\n$return .= <<<CONTENT\nvalue=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Request::i()->auth, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n autocomplete=\"email\">\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<input type=\"text\" placeholder=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'username_or_email', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" name=\"auth\" id=\"auth\" \nCONTENT;\n\nif ( isset( \\IPS\\Request::i()->auth ) ):\n$return .= <<<CONTENT\nvalue=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Request::i()->auth, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n autocomplete=\"email\">\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/li>\n\t<li class=\"ipsFieldRow ipsFieldRow_fullWidth ipsClearfix\">\n\t\t<label class=\"ipsFieldRow_label\" for=\"password\">\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'password', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t<span class=\"ipsFieldRow_required\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'required', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t<\/label>\n\t\t<div class=\"ipsFieldRow_content\">\n\t\t\t<input type=\"password\" placeholder=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'password', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" name=\"password\" id=\"password\" \nCONTENT;\n\nif ( isset( \\IPS\\Request::i()->password ) ):\n$return .= <<<CONTENT\nvalue=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Request::i()->password, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n autocomplete=\"current-password\">\n\t\t<\/div>\n\t<\/li>\n\t<li class=\"ipsFieldRow ipsFieldRow_checkbox ipsClearfix\">\n\t\t<span class=\"ipsCustomInput\">\n\t\t\t<input type=\"checkbox\" name=\"remember_me\" id=\"remember_me_checkbox\" value=\"1\" checked aria-checked=\"true\">\n\t\t\t<span><\/span>\n\t\t<\/span>\n\t\t<div class=\"ipsFieldRow_content\">\n\t\t\t<label class=\"ipsFieldRow_label\" for=\"remember_me_checkbox\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'remember_me', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t\t\t<span class=\"ipsFieldRow_desc\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'remember_me_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t<\/div>\n\t<\/li>\n\t<li class=\"ipsFieldRow ipsFieldRow_fullWidth\">\n\t\t<button type=\"submit\" name=\"_processLogin\" value=\"usernamepassword\" class=\"ipsButton ipsButton_primary ipsButton_small\" id=\"elSignIn_submit\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'login', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/button>\n\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->allow_forgot_password != 'disabled' ):\n$return .= <<<CONTENT\n\n\t\t\t<p class=\"ipsType_right ipsType_small\">\n\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->allow_forgot_password == 'redirect' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Settings::i()->allow_forgot_password_target, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' target=\"_blank\" rel=\"noopener\">\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=lostpass\", null, \"lostpassword\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( \\IPS\\Helpers\\Form\\Captcha::supportsModal() ):\n$return .= <<<CONTENT\ndata-ipsDialog data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'forgotten_password', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'forgotten_password', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t<\/p>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/li>\n<\/ul>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction lostPass( $form ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( !\\IPS\\Request::i()->isAjax() ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('lost_password') );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<div class='ipsBox ipsPadding'>\n\t{$form}\n<\/div>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction lostPassConfirm( $message ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('lost_password') );\n$return .= <<<CONTENT\n\n<div class='ipsLayout_contentSection ipsBox ipsPadding'>\n\t\nCONTENT;\n\n$val = \"{$message}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n<\/div>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction manageFollow( $app, $area, $id ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<div data-followApp='\nCONTENT;\n$return .= htmlspecialchars( $app, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-followArea='\nCONTENT;\n$return .= htmlspecialchars( $area, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-followID='\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-buttonType='manage' data-controller='core.front.core.followButton'>\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"system\", \"core\" )->manageFollowButton( $app, $area, $id );\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction manageFollowButton( $app, $area, $id ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->member_id ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->following( $app, $area, $id ) ):\n$return .= <<<CONTENT\n\n\t\t<div class=\"ipsFollow\" data-role=\"followButton\">\n\t\t\t<a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=notifications&do=follow&follow_app={$app}&follow_area={$area}&follow_id={$id}\", null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'following_this_content', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" class='ipsButton ipsButton_light ipsButton_fullWidth ipsButton_verySmall' data-ipsHover data-ipsHover-cache='false' data-ipsHover-onClick>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'follow_change_preference', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <i class='fa fa-caret-down'><\/i><\/a>\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction mergeSocialAccount( $handler, $existingAccount, $login, $error ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class=\"ipsSpacer_both\">\n\t<h1 class='ipsType_veryLarge ipsType_center'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'link_your_accounts', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\t<p class='ipsType_large ipsType_center ipsType_light'>\nCONTENT;\n\n$sprintf = array($handler->_title); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'link_your_accounts_blurb', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/p>\n<\/div>\n<div class='ipsBox ipsPadding'>\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"system\", \\IPS\\Request::i()->app )->reauthenticate( $login, $error );\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction mfaAccountRecovery( $message ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('mfa_account_recovery') );\n$return .= <<<CONTENT\n\n<div class='ipsLayout_contentSection'>\n\t\nCONTENT;\n\n$val = \"{$message}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n<\/div>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction mfaKnownDeviceInfo( $url ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div id='elTwoFactorAuthentication' class='ipsModal' data-controller='core.global.core.2fa'>\n\t<div>\n\t\t<h1 class='ipsType_center ipsType_pageTitle ipsSpacer_top'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'mfa_account_recovery', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\t\t<p class='ipsType_medium ipsType_richText ipsType_center c2FA_info'>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'mfa_recovery_known_device_details', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t<\/p>\n\t\t<div class=\"ipsPad\">\n\t\t\t<ul class=\"ipsList_reset\">\n\t\t\t\t<li class=\"ipsSpacer_bottom ipsSpacer_half\">\n\t\t\t\t\t<a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=login&do=logout\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"logout\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" class=\"ipsButton ipsButton_primary ipsButton_fullWidth ipsButton_medium\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_out', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t<\/li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $url->setQueryString( array( '_mfa' => 'alt', '_mfaMethod' => '' ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_link ipsButton_medium ipsButton_fullWidth'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'mfa_try_another_method', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <i class='fa fa-angle-right'><\/i><\/a>\n\t\t\t\t<\/li>\n\t\t\t<\/ul>\n\t\t<\/div>\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction myAttachments( $files, $used ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class=\"ipsPageHeader ipsClearfix\">\n\t<h1 class=\"ipsType_pageTitle\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'my_attachments', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n<\/div>\n\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->group['g_attach_max'] > 0 ):\n$return .= <<<CONTENT\n\n\t<div class='ipsAreaBackground_light ipsPad'>\n\t\t<p>\nCONTENT;\n\n$sprintf = array(\\IPS\\Output\\Plugin\\Filesize::humanReadableFilesize( $used ), \\IPS\\Output\\Plugin\\Filesize::humanReadableFilesize( \\IPS\\Member::loggedIn()->group['g_attach_max'] * 1024 )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'my_attachments_blurb', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/p>\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( empty($files) ):\n$return .= <<<CONTENT\n\n\t<div class='ipsPad ipsAreaBackground_light'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'my_attachments_empty', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t<\/div>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<div class=\"ipsGrid ipsAttachment_fileList\">\n\t\t\nCONTENT;\n\nforeach ( $files as $url => $file ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$id = mb_substr( $url, mb_strrpos( $url, '=' ) + 1 );\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsDataItem ipsAttach ipsAttach_done'>\n\t\t\t\t<div class='ipsDataItem_generic ipsDataItem_size1 ipsResponsive_hidePhone ipsResponsive_block ipsType_center'>\n\t\t\t\t\t\nCONTENT;\n\nif ( \\in_array( mb_strtolower( mb_substr( $file->filename, mb_strrpos( $file->filename, '.' ) + 1 ) ), \\IPS\\Image::supportedExtensions() ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $file, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"><img src=\"\nCONTENT;\n$return .= htmlspecialchars( $file, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" alt='' class='ipsImage' data-ipsLightbox data-ipsLightbox-group=\"myAttachments\"><\/a>\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<i class='fa fa-\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\File::getIconFromName( $file->originalFilename ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n ipsType_large'><\/i>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t\t<div class='ipsDataItem_main' data-action='selectFile'>\n\t\t\t\t\t<h2 class='ipsDataItem_title ipsType_reset ipsType_medium ipsAttach_title ipsTruncate ipsTruncate_line'>\nCONTENT;\n$return .= htmlspecialchars( $file->originalFilename, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/h2>\n\t\t\t\t\t<p class='ipsDataItem_meta ipsType_light'>\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Output\\Plugin\\Filesize::humanReadableFilesize( $file->filesize() );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/p>\n\t\t\t\t<\/div>\n\t\t\t\t<div class='ipsDataItem_generic ipsDataItem_size6 ipsType_right'>\n\t\t\t\t\t<ul class='ipsButton_split'>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=attachments&do=view&id={$id}\", null, \"attachments\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_verySmall ipsButton_light' data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'my_attachments_view', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-search'><\/i><\/a>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t<\/ul>\n\t\t\t\t<\/div>\t\t\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction noResults(  ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<p class='ipsType_center ipsType_large ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_results', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction notAdminValidated(  ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<section class='ipsType_center ipsPadding ipsBox'>\n\t<br>\n\t<i class='ipsType_huge fa fa-lock'><\/i>\n\t<h1 class='ipsType_veryLarge'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_admin_validation', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\n\t<p class='ipsType_large'>\n\t\t\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::loggedIn()->email); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_admin_validation_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t<\/p>\n\t\nCONTENT;\n\n$guest = new \\IPS\\Member;\n$return .= <<<CONTENT\n\n\t<p class='ipsType_normal'>\n\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=login&do=logout\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"logout\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_primary'>\nCONTENT;\n\nif ( $guest->group['g_view_board'] ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_continue_as_guest', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_out', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/a>\n\t<\/p>\n\t<hr class='ipsHr'>\n\t<ul class='ipsToolList ipsToolList_horizontal ipsPos_center'>\n\t\t<li><a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=register&do=cancel\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"register\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_light ipsButton_verySmall' data-confirm data-confirmMessage='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_cancel', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-confirmSubMessage='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_cancel_confirm', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_cancel', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t<\/ul>\n<\/section>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction notCoppaValidated(  ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<section class='ipsType_center ipsPadding ipsBox'>\n\t<h1 class='ipsType_veryLarge ipsType_center'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_consent_required', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\t<br>\n\n\t<div data-role='registerForm'>\n\t\t<p class='ipsType_large'>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_consent_required_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t<\/p>\n\t\t<br><br>\n\n\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=register&do=coppaForm\", null, \"register\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_primary ipsButton_large'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'coppa_print_form', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t<\/div>\n<\/section>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction notValidated( $validating=array() ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<section class='ipsType_center ipsBox ipsPadding'>\n\t<br><br>\n\t<i class='ipsType_huge fa fa-envelope'><\/i>\n\t<h1 class='ipsType_veryLarge'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_confirm_email', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\n\t<p class='ipsType_large'>\n\t\t\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::loggedIn()->email); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_confirm_email_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t<\/p>\n\t<p class='ipsType_large'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_confirm_email_must', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t<\/p>\n\t<hr class='ipsHr'>\n\t<p class='ipsType_normal'>\n\t\t<ul class='ipsToolList ipsToolList_horizontal ipsPos_center'>\n\t\t\t<li><a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=register&do=resend\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"register\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_light ipsButton_verySmall'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_resend_email', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t<li><a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=register&do=changeEmail\", null, \"register\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-size='narrow' data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_change_email', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsDialog-modal='true' class='ipsButton ipsButton_light ipsButton_verySmall'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_change_email', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t<li><a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=login&do=logout\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"logout\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_light ipsButton_verySmall'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_out', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\nCONTENT;\n\nif ( $validating['new_reg'] AND !\\IPS\\Member::loggedIn()->members_bitoptions['created_externally'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li><a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=register&do=cancel\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"register\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_light ipsButton_verySmall' data-confirm data-confirmMessage='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_cancel', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-confirmSubMessage='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_cancel_confirm', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_cancel', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t<\/p>\n<\/section>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction notificationSettingsIndex( $categories ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('notification_options') );\n$return .= <<<CONTENT\n\n<div class=\"ipsBox ipsResponsive_pull ipsSpacer_both\">\n\t<h2 class=\"ipsType_sectionTitle ipsType_reset\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'what_notifications_you_receive', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t<div class='ipsAreaBackground_light ipsPadding:half'>\n\t\t<ul class=\"ipsList_reset cNotificationTypes\" >\n\t\t\t\nCONTENT;\n\nforeach ( $categories as $k => $enabled ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"system\", \\IPS\\Request::i()->app )->notificationSettingsIndexRow( $k, $enabled );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t<\/div>\n<\/div>\n<div class=\"ipsBox ipsResponsive_pull ipsSpacer_both ipsSpacer_double\">\n\t<h2 class=\"ipsType_sectionTitle ipsType_reset\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'where_you_receive_notifications', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t<div class=\"ipsGrid ipsGrid_collapsePhone\">\n\t\t<div class=\"ipsGrid_span4 ipsPadding\">\n\t\t\t<div class=\"cNotificationMethodIcon\">\n\t\t\t\t<img src=\"\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->resource( \"notification_settings\/notification_bell.svg\", \"\", '', false );\n$return .= <<<CONTENT\n\">\n\t\t\t<\/div>\n\t\t\t<div class=\"cNotificationMethodDetails\">\n\t\t\t\t<p class=\"ipsType_reset ipsType_large\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_notifications_inline', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t<p class=\"ipsType_light\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_notifications_inline_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t<\/div>\n\t\t<\/div>\n\t\t\nCONTENT;\n\nif ( \\IPS\\Notification::webPushEnabled() || \\count( \\IPS\\Member::loggedIn()->getPwaAuths() ) ):\n$return .= <<<CONTENT\n\n\t\t\t<div class=\"ipsGrid_span4 ipsPadding\">\n\t\t\t\t<div class=\"cNotificationMethodIcon\">\n\t\t\t\t\t<img src=\"\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->resource( \"notification_settings\/push.svg\", \"\", '', false );\n$return .= <<<CONTENT\n\">\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"cNotificationMethodDetails\">\n\t\t\t\t\t<p class=\"ipsType_reset ipsType_large\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_notifications_push', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\t<p class=\"ipsType_light\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_notifications_push_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t<ul class='ipsList_reset'>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Notification::webPushEnabled() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li class='ipsBorder_top ipsPadding_vertical:half' data-action=\"enablePush\" style='display: none'>\n\t\t\t\t\t\t\t\t<a href='#' title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_notifications_push_enable', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_notifications_push_enable', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <i class='fa fa-angle-right'><\/i> <\/a>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Notification::webPushEnabled() && \\count( \\IPS\\Member::loggedIn()->getPwaAuths() )  ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li class='ipsBorder_top ipsPadding_vertical:half'>\n\t\t\t\t\t\t\t\t<a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=notifications&do=disable&type=push\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" data-confirm data-confirmIcon=\"false\" data-confirmMessage=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_notifications_push_stop_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-confirmSubMessage=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_notifications_push_stop_desc_sub', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_notifications_push_stop', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <i class='fa fa-angle-right'><\/i><\/a>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/ul>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<div class=\"ipsGrid_span4 ipsPadding\">\n\t\t\t<div class=\"cNotificationMethodIcon\">\n\t\t\t\t<img src=\"\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->resource( \"notification_settings\/email.svg\", \"\", '', false );\n$return .= <<<CONTENT\n\">\n\t\t\t<\/div>\n\t\t\t<div class=\"cNotificationMethodDetails\">\n\t\t\t\t<p class=\"ipsType_reset ipsType_large\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_notifications_email', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t<p class=\"ipsType_light\">\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::loggedIn()->email); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_notifications_email_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t<ul class='ipsList_reset'>\n\t\t\t\t\t<li class='ipsBorder_top ipsPadding_vertical:half'>\n\t\t\t\t\t\t<a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=notifications&do=disable&type=email\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" data-confirm>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_notifications_email_stop', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <i class='fa fa-angle-right'><\/i><\/a>\n\t\t\t\t\t<\/li>\n\t\t\t\t<\/ul>\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n\nCONTENT;\n\nif ( \\IPS\\core\\Stream\\Subscription::hasSubscribedStreams()  ):\n$return .= <<<CONTENT\n\n<div class=\"ipsBox\">\n    <h2 class='ipsType_sectionTitle ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stream_subscriptions', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\n        \nCONTENT;\n\nforeach ( \\IPS\\core\\Stream\\Subscription::getSubscribedStreams() as $stream  ):\n$return .= <<<CONTENT\n\n    <div class='ipsGrid '>\n        <div class='ipsGrid_span8 ipsPadding'>\n            <a href=\"\nCONTENT;\n$return .= htmlspecialchars( $stream->stream->url(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= htmlspecialchars( $stream->stream->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n        <\/div>\n        <div class='ipsGrid_span4 ipsPadding'>\n           <a href=\"\nCONTENT;\n$return .= htmlspecialchars( $stream->stream->url()->setQueryString('do','unsubscribe')->csrf(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-confirm data-confirmSubMessage=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stream_unsubscribe_confirm', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" >\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stream_unsubscribe', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n        <\/div>\n    <\/div>\n        \nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\n<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction notificationSettingsIndexRow( $k, $enabled ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<li class=\"cNotificationTypes__row ipsAreaBackground_reset ipsPos_relative ipsLoading_tiny\">\n\t<a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=notifications&do=options&type={$k}\", null, \"notifications_options\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" class=\"ipsFlex ipsFlex-ai:center sm:ipsFlex-ai:start ipsFlex-jc:between ipsType_blendLinks ipsPadding\" data-action=\"showNotificationSettings\">\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"system\", \\IPS\\Request::i()->app )->notificationSettingsIndexRowDetails( $k, $enabled );\n$return .= <<<CONTENT\n\n\t<\/a>\n\t<div data-role=\"notificationSettingsWindow\" class=\"ipsHide ipsPadding\">\n\t\t\n\t<\/div>\n<\/li>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction notificationSettingsIndexRowDetails( $k, $enabled ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<div class='ipsFlex-flex:10'>\n\t<h3 class=\"ipsType_reset ipsType_large ipsType_bold ipsType_darkText cNotificationTypes__row__title\">\n\t\t\nCONTENT;\n\n$val = \"notifications__$k\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t<\/h3>\n\n\t\nCONTENT;\n\nif ( \\count( $enabled ) ):\n$return .= <<<CONTENT\n\n\t\t<ul class='ipsList_reset ipsFlex ipsFlex-ai:center sm:ipsFlex-fd:column sm:ipsFlex-ai:start ipsGap:4 sm:ipsGap:1 cNotificationTypes__row__types'>\n\t\t\t\nCONTENT;\n\nforeach ( $enabled as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $v['icon'] !== 'envelope-o' and $v['icon'] !== 'bell-o' and $v['icon'] !== 'mobile' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li \nCONTENT;\n\nif ( isset( $v['description'] ) ):\n$return .= <<<CONTENT\ntitle=\"\nCONTENT;\n\n$val = \"{$v['description']}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-ipsTooltip\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\t<i class=\"fa fa-fw fa-\nCONTENT;\n$return .= htmlspecialchars( $v['icon'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"><\/i> \nCONTENT;\n$return .= htmlspecialchars( $v['title'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/li>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $v['icon'] === 'bell-o' or $v['icon'] === 'mobile' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<i class=\"fa fa-fw fa-\nCONTENT;\n$return .= htmlspecialchars( $v['icon'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"><\/i> \nCONTENT;\n$return .= htmlspecialchars( $v['title'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/li>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $v['icon'] === 'envelope-o' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<i class=\"fa fa-fw fa-\nCONTENT;\n$return .= htmlspecialchars( $v['icon'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"><\/i> \nCONTENT;\n$return .= htmlspecialchars( $v['title'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/li>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t<p class='ipsType_reset ipsType_light'>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'notifications_none_selected', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t<\/p>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\n<div class=\"cNotificationSettings_expand ipsType_center\">\n\t<i class=\"fa fa-angle-down\"><\/i>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction notificationSettingsType( $title, $form, $ajax=FALSE ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $ajax ):\n$return .= <<<CONTENT\n\n\t<div class=\"ipsClearfix\">\n\t\t<a href=\"#\" class=\"ipsDialog_close\" data-action=\"closeNotificationSettings\">\u00d7<\/a>\n\t\t<h3 class=\"ipsType_reset ipsType_large ipsType_bold ipsType_darkText cNotificationTypes__row__title\">\n\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t<\/h3>\n\t<\/div>\n\t<div class=\"ipsSpacer_top\">\n\t\t{$form}\n\t<\/div>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->pageHeader( $title );\n$return .= <<<CONTENT\n\n\t<div class=\"ipsBox ipsPadding\">\n\t\t{$form}\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction notifications( $table ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsPageHeader ipsClearfix ipsSpacer_bottom'>\n\t<h1 class='ipsType_pageTitle'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'notifications', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\t<div class=\"ipsPos_right\">\n\t\t<a class=\"ipsButton ipsButton_link\" href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=notifications&do=options\", null, \"notifications_options\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\"><i class=\"fa fa-cog\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'notification_options', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t<a class=\"ipsButton ipsButton_link\" href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=notifications&format=rss\", null, \"notifications_rss\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\"><i class=\"fa fa-rss\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rss', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t<\/div>\n<\/div>\n<div class='ipsBox'>\n\t{$table}\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction notificationsAjax( $notifications ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( empty( $notifications ) ):\n$return .= <<<CONTENT\n\n\t<li class='ipsDataItem ipsDataItem_unread'>\n\t\t<div class='ipsPad ipsType_light ipsType_center ipsType_normal'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_results_notifications', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n\t<\/li>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nforeach ( $notifications as $notification ):\n$return .= <<<CONTENT\n\n\t\t<li class='ipsDataItem \nCONTENT;\n\nif ( !$notification['notification']->read_time ):\n$return .= <<<CONTENT\nipsDataItem_unread\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t<div class='ipsDataItem_icon'>\n\t\t\t\t\nCONTENT;\n\nif ( isset( $notification['data']['author'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $notification['data']['author'], 'mini' );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\t<div class='ipsDataItem_main'>\n\t\t\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $notification['data']['url'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t<span class='ipsDataItem_title ipsType_break'>\nCONTENT;\n$return .= htmlspecialchars( $notification['data']['title'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t<br>\n\t\t\t\t\t<span class=\"ipsType_light\">\nCONTENT;\n\n$val = ( $notification['notification']->updated_time instanceof \\IPS\\DateTime ) ? $notification['notification']->updated_time : \\IPS\\DateTime::ts( $notification['notification']->updated_time );$return .= $val->html();\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t<\/a>\n\t\t\t<\/div>\n\t\t<\/li>\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction notificationsRows( $table, $headers, $rows ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( \\count( $rows ) ):\n$return .= <<<CONTENT\n \n\t\nCONTENT;\n\nforeach ( $rows as $notification ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( isset( $notification['data']['title'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t<li class='ipsDataItem \nCONTENT;\n\nif ( $notification['data']['unread'] ):\n$return .= <<<CONTENT\nipsDataItem_unread\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n ipsClearfix'>\n\t\t\t\t<div class='ipsDataItem_icon'>\n\t\t\t\t\t\nCONTENT;\n\nif ( isset( $notification['data']['author'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $notification['data']['author'], 'tiny' );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t\t<div class='ipsDataItem_main'>\n\t\t\t\t\t\nCONTENT;\n\nif ( !$notification['data']['unread'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<span class=\"ipsItemStatus ipsItemStatus_small ipsItemStatus_read\">\n\t\t\t\t\t\t\t<i class=\"fa fa-circle\"><\/i>\n\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $notification['data']['url'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class='ipsDataItem_title'>\nCONTENT;\n$return .= htmlspecialchars( $notification['data']['title'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\nCONTENT;\n\nif ( !$notification['data']['unread'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/strong>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<br>\n\t\t\t\t\t<span class=\"ipsType_light\">\nCONTENT;\n\n$val = ( $notification['notification']->updated_time instanceof \\IPS\\DateTime ) ? $notification['notification']->updated_time : \\IPS\\DateTime::ts( $notification['notification']->updated_time );$return .= $val->html();\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t<\/div>\n\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction notificationsTable( $table, $headers, $rows, $quickSearch ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsPageHeader ipsClearfix ipsSpacer_bottom'>\n\t<h1 class='ipsType_pageTitle'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'notifications', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\t<div class=\"ipsPos_right\">\n\t\t<a class=\"ipsButton ipsButton_light ipsButton_verySmall\" href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=notifications&do=options\", null, \"notifications_options\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\"><i class=\"fa fa-cog\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'notification_options', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t<\/div>\n<\/div>\n\n<div class='ipsBox'>\n\t<div class=\"ipsButtonBar ipsPad_half ipsClearfix ipsClear \nCONTENT;\n\nif ( $table->pages <= 1 ):\n$return .= <<<CONTENT\nipsHide\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" data-role=\"tablePagination\">\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\", 'global' )->pagination( $table->baseUrl, $table->pages, $table->page, $table->limit, TRUE, $table->getPaginationKey() );\n$return .= <<<CONTENT\n\n\t<\/div>\n\n\t\nCONTENT;\n\nif ( \\is_array( $rows ) AND \\count( $rows ) ):\n$return .= <<<CONTENT\n\n\t\t<ol class='ipsDataList ipsClear cForumTopicTable \nCONTENT;\n\nforeach ( $table->classes as $class ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $class, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n' id='elTable_\nCONTENT;\n$return .= htmlspecialchars( $table->uniqueId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-role=\"tableRows\">\n\t\t\t\nCONTENT;\n\n$return .= $table->rowsTemplate[0]->{$table->rowsTemplate[1]}( $table, $headers, $rows );\n$return .= <<<CONTENT\n\n\t\t<\/ol>\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t<div class='ipsType_center ipsPadding:half'>\n\t\t\t<p class='ipsType_large'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'notifications_none', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\n\t<div class=\"ipsButtonBar ipsPad_half ipsClearfix ipsClear \nCONTENT;\n\nif ( $table->pages <= 1 ):\n$return .= <<<CONTENT\nipsHide\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" data-role=\"tablePagination\">\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\", 'global' )->pagination( $table->baseUrl, $table->pages, $table->page, $table->limit, TRUE, $table->getPaginationKey() );\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction offline( $message ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div id='ipsLayout_mainArea'>\n\t<div class='ipsBox_alt'>\n\t\t<br>\n\t\t<h1 class='ipsType_pageTitle'>\nCONTENT;\n\n$sprintf = array(\\IPS\\Settings::i()->board_name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'offline_unavailable', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/h1>\n\t\t<br>\n\t\t<div class='ipsRichText ipsType_normal'>\n\t\t\t{$message}\n\t\t<\/div>\n\t\t<br>\n\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->member_id ):\n$return .= <<<CONTENT\n\n\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=login&do=logout\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"logout\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_medium ipsButton_primary'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_out', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=login\", null, \"login\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_medium ipsButton_primary'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'login', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction pixabay( $uploader ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div data-controller='core.global.stockart.pixabay' data-uploader=\"\nCONTENT;\n$return .= htmlspecialchars( $uploader, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t<div class='ipsPixabay_content' data-role='pixabayResults'>\n\t\t<div data-role='pixabayLoading'>\n\t\t\t\n\t\t<\/div>\n\t\t<div class='ipsPixabay_moar' data-role='pixabayMore' data-offset='0'>\n\t\t\t<div data-role='pixabayMoreLoading' class='ipsType_light ipsHide ipsSpacer_bottom'><i class='fa fa-circle-o-notch fa-spin fa-fw'><\/i>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'loading', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n\t\t<\/div>\n\t<\/div>\n\t<div class='ipsMenu_footerBar'>\n\t\t<input type='text' data-role='pixabaySearch' class='ipsField_fullWidth' placeholder='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'search', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\n\t\t<a href=\"https:\/\/pixabay.com\/\" target='_blank' rel=\"noopener external nofollow\" class=\"ipsPixabay_attribution\"><svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 640 123.87\"><g><path d=\"M523.513 40.165c-3.478-2.46-6.005-4.955-6.005-8.033H498.17c0 5.539-2.527 8.033-5.645 8.033h-5.164v56.236h100.42V40.165h-64.63zm-6.006 16.067h-18.096V48.2h20.084v6.464zm33.991 31.276c-11.457 0-20.779-9.201-20.779-20.513s9.322-20.04 20.78-20.04c11.456 0 20.777 8.729 20.777 20.04s-9.32 20.513-20.778 20.513zm11.17-20.513c0 6.08-5.01 11.028-11.169 11.028-6.159 0-11.17-4.947-11.17-11.028 0-6.08 5.011-11.027 11.17-11.027 6.158 0 11.17 4.947 11.17 11.027zm77.334-34.48l-25 63.735-19.185-7.693V77.695l13.323 5.452 17.592-44.844-65.92-25.205-6.11 19.034h-11L554.95-.003l85.053 32.52z\"\/><g><path d=\"M33.952 28.507c16.562-.38 32.107 13.09 33.856 29.606C69.9 72.627 61.362 87.7 47.98 93.592 39.874 97.616 30.72 96.38 22 96.585h-8.518v27.29H-.011c.03-21.057-.054-42.116.042-63.174.441-15.684 13.287-29.735 28.795-31.823a34.551 34.551 0 015.126-.372zm0 54.582c9.733.244 18.861-7.35 20.314-16.992 1.94-9.706-4.252-20.135-13.717-23.046-9.141-3.244-20.14 1.027-24.604 9.66-3.464 5.897-2.233 12.87-2.463 19.369v11.01h20.47zM74.334 28.177h13.34v68.08h-13.34v-68.08zM127.764 71.16h.486l18.963 25.284h16.531l-25.77-35.008 22.853-33.063h-16.532L128.25 51.71h-.486l-16.046-23.338H95.187l22.852 33.063-25.77 35.008h16.532z\"\/><path d=\"M193.953 28.177c13.511-.267 26.471 8.585 31.472 21.082 2.61 5.804 2.574 12.234 2.49 18.465v28.532c-12.04-.041-24.085.083-36.124-.065-13.842-.675-26.5-10.768-30.462-24.013-3.633-11.515-.614-24.886 7.936-33.485 6.388-6.608 15.465-10.604 24.687-10.516zm20.47 54.586c-.058-7.57.121-15.147-.1-22.711-.798-10.142-10.192-18.639-20.37-18.378-9.678-.234-18.8 7.274-20.315 16.854-1.773 9.194 3.505 19.212 12.279 22.643 5.404 2.357 11.373 1.385 17.085 1.592h11.42zM268.523 28.507c15.98-.394 30.91 12.179 33.455 27.916 2.887 14.915-5.539 31.029-19.427 37.169-13.573 6.406-31.026 2.278-40.36-9.46-5.784-6.815-8.277-15.875-7.784-24.709V1.216H247.9v27.29c6.874.001 13.75-.001 20.623.002zm0 54.582c10.248.274 19.616-8.33 20.367-18.525 1.285-10.133-6.226-20.324-16.256-22.166-5.546-.759-11.18-.248-16.766-.398H247.9c.087 7.691-.184 15.397.155 23.078 1.072 10.161 10.261 18.21 20.468 18.011zM341.648 28.177c13.513-.267 26.472 8.586 31.473 21.082 2.61 5.804 2.574 12.234 2.49 18.465v28.532c-12.04-.041-24.085.083-36.124-.065-13.841-.675-26.499-10.768-30.462-24.013-3.632-11.515-.614-24.886 7.936-33.485 6.388-6.608 15.465-10.604 24.687-10.516zm20.47 54.586c-.057-7.57.122-15.147-.099-22.711-.798-10.142-10.192-18.639-20.371-18.378-9.677-.234-18.8 7.274-20.314 16.854-1.773 9.194 3.505 19.212 12.279 22.643 5.404 2.357 11.373 1.385 17.085 1.592h11.42zM449.87 28.342c-.028 21.007.055 42.017-.041 63.022-.49 16.533-14.697 31.392-31.284 32.256-3.151.166-6.308.065-9.463.093V110.22c5.758-.029 11.918.556 17.017-2.705 6.37-3.573 10.418-10.779 10.274-18.066-11.96 9.644-30.502 9.143-42.133-.811-8.474-6.841-13.105-17.846-12.45-28.675v-31.62h13.492c.062 12.019-.127 24.046.1 36.059.732 9.893 9.554 18.266 19.468 18.502 10.047.772 19.717-7.03 21.216-16.969.605-5.946.176-11.952.305-17.924V28.343h13.497z\"\/><\/g><\/g><\/svg><\/a>\n\t<\/div>\n<\/div>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction privacy( $subprocessors ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( !\\IPS\\Request::i()->isAjax() ):\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('privacy') );\nendif;\n$return .= <<<CONTENT\n\n<div class='ipsBox_alt ipsType_normal ipsType_richText ipsPad'>\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\", 'global' )->richText( \\IPS\\Member::loggedIn()->language()->addToStack('privacy_text_value'), array('ipsType_normal') );\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->site_address and \\IPS\\Settings::i()->site_address != \"null\" ):\n$return .= <<<CONTENT\n\n\t\t<p>\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->board_name;\n$return .= <<<CONTENT\n, \nCONTENT;\n\n$return .= \\IPS\\GeoLocation::parseForOutput( \\IPS\\Settings::i()->site_address );\n$return .= <<<CONTENT\n<\/p>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $subprocessors and \\count($subprocessors) ):\n$return .= <<<CONTENT\n\n\t<div>\n\t\t<h3 class=\"ipsType_large\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'pp_third_parties', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t\nCONTENT;\n\nforeach ( $subprocessors as $processor ):\n$return .= <<<CONTENT\n\n\t\t\t<div class=\"ipsPadding_bottom\">\n\t\t\t\t<strong>\nCONTENT;\n$return .= htmlspecialchars( $processor['title'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t<div>\nCONTENT;\n$return .= htmlspecialchars( $processor['description'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/div>\n\t\t\t\t<div><a href=\"\nCONTENT;\n$return .= htmlspecialchars( $processor['privacyUrl'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'pp_privacy_policy', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/div>\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction profileCompleteSocial( $step, $socialButton, $action ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\t{$socialButton}\n\n\t\nCONTENT;\n\nif ( !$step->required OR $step->completed() ):\n$return .= <<<CONTENT\n\n\t\t<ul class=\"ipsPad ipsToolList ipsToolList_horizontal ipsList_reset ipsClearfix ipsAreaBackground\">\n\t\t\t<li><a href=\"\nCONTENT;\n$return .= htmlspecialchars( $action->setQueryString('_moveToStep', $step->getNextStep()), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-action=\"wizardLink\" class=\"ipsButton ipsButton_link ipsJS_none\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profile_complete_skip_step', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t<\/ul>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction reauthenticate( $login, $error, $blurb=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<form accept-charset='utf-8' method='post' action='\nCONTENT;\n$return .= htmlspecialchars( $login->url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t<input type=\"hidden\" name=\"csrfKey\" value=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Session::i()->csrfKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\n$usernamePasswordMethods = $login->usernamePasswordMethods();\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$buttonMethods = $login->buttonMethods();\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $blurb ):\n$return .= <<<CONTENT\n\n\t\t<p class='ipsType_normal ipsType_reset ipsSpacer_bottom'>\n\t\t\t\nCONTENT;\n\n$val = \"{$blurb}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t<\/p>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $error ):\n$return .= <<<CONTENT\n\n\t\t<div class=\"ipsMessage ipsMessage_error\">\nCONTENT;\n\n$val = \"{$error}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $usernamePasswordMethods and $buttonMethods ):\n$return .= <<<CONTENT\n\n\t\t<div class='ipsColumns ipsColumns_collapsePhone'>\n\t\t\t<div class='ipsColumn ipsColumn_fluid'>\n\t\t\t\t<p class='ipsType_normal ipsType_reset ipsSpacer_bottom'>\n\t\t\t\t\t\nCONTENT;\n\nif ( $blurb ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reauthenticate_password_blurb2', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reauthenticate_password_blurb', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/p>\n\t\t\t\t<ul class='ipsForm'>\n\t\t\t\t\t<li class=\"ipsFieldRow ipsFieldRow_fullWidth ipsClearfix\">\n\t\t\t\t\t\t<div class=\"ipsFieldRow_content\">\n\t\t\t\t\t\t\t<input type=\"password\" placeholder=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'password', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" name=\"password\" id=\"password\" \nCONTENT;\n\nif ( isset( \\IPS\\Request::i()->password ) ):\n$return .= <<<CONTENT\nvalue=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Request::i()->password, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n autocomplete=\"current-password\">\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/li>\n\t\t\t\t\t<li class=\"ipsFieldRow ipsFieldRow_fullWidth\">\n\t\t\t\t\t\t<button type=\"submit\" name=\"_processLogin\" value=\"usernamepassword\" class=\"ipsButton ipsButton_primary ipsButton_small\" id=\"elSignIn_submit\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reauthenticate', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/button>\n\t\t\t\t\t<\/li>\n\t\t\t\t<\/ul>\n\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->allow_forgot_password != 'disabled' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<p class=\"ipsType_right ipsType_small\">\n\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->allow_forgot_password == 'redirect' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Settings::i()->allow_forgot_password_target, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' target=\"_blank\" rel=\"noopener\">\n\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=lostpass\", null, \"lostpassword\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( \\IPS\\Helpers\\Form\\Captcha::supportsModal() ):\n$return .= <<<CONTENT\ndata-ipsDialog data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'forgotten_password', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'forgotten_password', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t<\/p>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\t<div class='ipsColumn ipsColumn_veryWide'>\n\t\t\t\t<p class='ipsType_normal ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reauthenticate_alt_blurb', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t<div class='ipsGap:2 ipsMargin_top:half'>\n\t\t\t\t\t\nCONTENT;\n\nforeach ( $buttonMethods as $method ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<div class='ipsType_center'>\n\t\t\t\t\t\t\t{$method->button()}\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t<\/div>\n\t\nCONTENT;\n\nelseif ( $usernamePasswordMethods ):\n$return .= <<<CONTENT\n\n\t\t<p class='ipsType_normal ipsType_reset ipsSpacer_bottom'>\n\t\t\t\nCONTENT;\n\nif ( $blurb ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reauthenticate_password_blurb2', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reauthenticate_password_blurb', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/p>\n\t\t<ul class='ipsForm'>\n\t\t\t<li class=\"ipsFieldRow ipsClearfix\">\n\t\t\t\t<div class=\"ipsFieldRow_content\">\n\t\t\t\t\t<input type=\"password\" placeholder=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'password', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" name=\"password\" id=\"password\" \nCONTENT;\n\nif ( isset( \\IPS\\Request::i()->password ) ):\n$return .= <<<CONTENT\nvalue=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Request::i()->password, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t<\/div>\n\t\t\t<\/li>\n\t\t\t<li class=\"ipsFieldRow\">\n\t\t\t\t<button type=\"submit\" name=\"_processLogin\" value=\"usernamepassword\" class=\"ipsButton ipsButton_primary ipsButton_small\" id=\"elSignIn_submit\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reauthenticate', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/button>\n\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->allow_forgot_password != 'disabled' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t&nbsp;&nbsp;&nbsp;\n\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->allow_forgot_password == 'redirect' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Settings::i()->allow_forgot_password_target, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' target=\"_blank\" rel=\"noopener\" class=\"ipsType_small\">\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=lostpass\", null, \"lostpassword\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'forgotten_password', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' class=\"ipsType_small\">\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'forgotten_password', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/li>\n\t\t<\/ul>\n\t\nCONTENT;\n\nelseif ( $buttonMethods ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( !$blurb ):\n$return .= <<<CONTENT\n\n\t\t\t<p class='ipsType_normal ipsType_reset ipsSpacer_bottom'>\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reauthenticate_button_blurb', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<div class='ipsGap:2 ipsMargin_top:half'>\n\t\t\t\nCONTENT;\n\nforeach ( $buttonMethods as $method ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div class='ipsType_center'>\n\t\t\t\t\t{$method->button()}\n\t\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\n<\/form>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction reconfirmTerms( $terms, $privacy, $form, $subprocessors ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<div class=\"ipsBox\">\n\t<div class=\"ipsPadding\">\n\n\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->joined->getTimestamp() < ( time() - 60 ) ):\n$return .= <<<CONTENT\n\n\t\t\t<div class=\"ipsType_large ipsSpacer_bottom\">\n\t\t\t\t\nCONTENT;\n\nif ( $terms and $privacy ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reconfirm_terms_and_policy_blurb', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelseif ( $terms ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reconfirm_terms_blurb', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reconfirm_privacy_blurb', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\nCONTENT;\n\nif ( $terms ):\n$return .= <<<CONTENT\n\n\t\t\t<div class=\"ipsSpacer_bottom\">\n\t\t\t\t<h2 class=\"ipsType_sectionHead\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_terms', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t\t\t<div class='ipsType_normal ipsType_richText ipsPadding'>\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_rules_value', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\n\t\t\nCONTENT;\n\nif ( $privacy ):\n$return .= <<<CONTENT\n\n\t\t\t<div class=\"ipsSpacer_bottom\">\n\t\t\t\t<h2 class=\"ipsType_sectionHead\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'privacy', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t\t\t<div class='ipsType_normal ipsType_richText ipsPadding'>\n\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->privacy_type == 'external' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->privacy_link;\n$return .= <<<CONTENT\n' rel='external'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'view_privacy_policy', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\", 'global' )->richText( \\IPS\\Member::loggedIn()->language()->addToStack('privacy_text_value'), array('ipsType_normal') );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->site_address and \\IPS\\Settings::i()->site_address != \"null\" ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<p>\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->board_name;\n$return .= <<<CONTENT\n, \nCONTENT;\n\n$return .= \\IPS\\GeoLocation::parseForOutput( \\IPS\\Settings::i()->site_address );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $subprocessors and \\count($subprocessors) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h3 class=\"ipsType_large\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'pp_third_parties', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $subprocessors as $processor ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<div class=\"ipsPadding_bottom\">\n\t\t\t\t\t\t\t\t<strong>\nCONTENT;\n$return .= htmlspecialchars( $processor['title'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\t\t<div>\nCONTENT;\n$return .= htmlspecialchars( $processor['description'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/div>\n\t\t\t\t\t\t\t\t<div><a href=\"\nCONTENT;\n$return .= htmlspecialchars( $processor['privacyUrl'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'pp_privacy_policy', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/div>\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/div>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n\t<div class=\"ipsAreaBackground ipsPadding ipsType_center\">\n\t\t{$form}\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction referralTable( $table, $headers, $rows, $quickSearch ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='cReferal_members' data-baseurl='\nCONTENT;\n$return .= htmlspecialchars( $table->baseUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-resort='\nCONTENT;\n$return .= htmlspecialchars( $table->resortKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-controller='core.global.core.table\nCONTENT;\n\nif ( $table->canModerate() ):\n$return .= <<<CONTENT\n,core.front.core.moderation\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\nCONTENT;\n\nif ( $table->title ):\n$return .= <<<CONTENT\n\n\t\t<h2 class='ipsType_sectionTitle ipsType_reset ipsClear'>\nCONTENT;\n\n$val = \"{$table->title}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( \\count( $rows ) ):\n$return .= <<<CONTENT\n\n\t\t<ol class='ipsList_inline ipsClearfix ipsSpacer_top ipsSpacer_half' id='elTable_\nCONTENT;\n$return .= htmlspecialchars( $table->uniqueId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-role=\"tableRows\">\n\t\t\t\nCONTENT;\n\n$return .= $table->rowsTemplate[0]->{$table->rowsTemplate[1]}( $table, $headers, $rows );\n$return .= <<<CONTENT\n\n\t\t<\/ol>\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'referral_no_referrals', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction referralsRows( $table, $headers, $rows ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( \\count( $rows ) ):\n$return .= <<<CONTENT\n \n\t\nCONTENT;\n\nforeach ( $rows as $row ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\n$member = \\IPS\\Member::load( $row['member_id'] );\n$return .= <<<CONTENT\n\n\t\t<li class='ipsPhotoPanel ipsPhotoPanel_tiny'>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $member, 'tiny' );\n$return .= <<<CONTENT\n\t\n\t\t\t<div>\n\t\t\t\t<strong>\n\t\t\t\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $member->url(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Member::load( $row['member_id'] )->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t<\/strong>\n\t\t\t\t<br>\n\t\t\t\t<span class='ipsType_light ipsType_small'>\nCONTENT;\n\n$val = ( $row['joined'] instanceof \\IPS\\DateTime ) ? $row['joined'] : \\IPS\\DateTime::ts( $row['joined'] );$return .= $val->html();\n$return .= <<<CONTENT\n<\/span>\n\t\t\t<\/div>\n\t\t<\/li>\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction register( $form, $login, $postBeforeRegister ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<section class='ipsBox_alt ipsPad'>\n\t<div data-role='registerForm'>\n\t\t<div class='ipsColumns ipsColumns_collapseTablet'>\n\t\t\t\nCONTENT;\n\n$buttonMethods = $login->buttonMethods();\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $buttonMethods ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div class='ipsColumn ipsColumn_fluid'>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<div class='ipsBox \nCONTENT;\n\nif ( !$buttonMethods ):\n$return .= <<<CONTENT\ncRegister_noSocial ipsPos_center\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t<div class='ipsPadding ipsBorder_bottom'>\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $postBeforeRegister ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<h1 class='ipsType_pageTitle ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'post_before_register_headline', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( !\\IPS\\Request::i()->hidereminder ):\n$return .= <<<CONTENT\n<p class='ipsType_reset ipsType_large ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'post_before_register_subtext', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<h1 class='ipsType_pageTitle ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_up', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\t\t\t\t\t\t\t\t<p class='ipsType_reset ipsType_large ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'existing_user', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n$return .= htmlspecialchars( $login->url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_in_short', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/p>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t{$form}\n\t\t\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nif ( $buttonMethods ):\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t\t<div class='ipsColumn ipsColumn_wide' id='elRegisterSocial'>\n\t\t\t\t\t<div class='ipsBox ipsPad'>\n\t\t\t\t\t\t<h2 class='ipsType_sectionHead'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_start_faster', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t\t\t\t\t<p class='ipsType_normal ipsType_reset ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reg_connect', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\t<br>\n\t\t\t\t\t\t<form accept-charset='utf-8' method='post' action='\nCONTENT;\n$return .= htmlspecialchars( $login->url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t<input type=\"hidden\" name=\"csrfKey\" value=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Session::i()->csrfKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\t\t<div class='ipsGap:2'>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $buttonMethods as $method ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<div class='ipsType_center'>\n\t\t\t\t\t\t\t\t\t\t{$method->button()}\n\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/form>\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n<\/section>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction registerSetPassword( $form,$member ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('set_password_title', NULL, array( 'sprintf' => array( $member->name ) ) ) );\n$return .= <<<CONTENT\n\n<div class='ipsLayout_contentSection ipsBox ipsPad'>\n\t{$form}\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction registerWrapper( $content ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<div id='elRegisterForm' class='ipsPos_center ipsPad' data-controller='core.front.system.register'>\n\t{$content}\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction reportForm( $form ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('report') );\n$return .= <<<CONTENT\n\n<div class=\"ipsLayout_contentSection ipsBox ipsPad\">\n\t{$form}\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction reportedAlready( $index, $report, $content ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class=\"ipsPad ipsType_center\">\n\t<div class=\"ipsType_large\">\nCONTENT;\n\n$htmlsprintf = array(\\IPS\\DateTime::ts( $report['date_reported'] )->html()); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'automoderation_already_reported', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'htmlsprintf' => $htmlsprintf ) );\n$return .= <<<CONTENT\n<\/div>\n\t<div class=\"ipsPad\">\n\t\t<a data-confirm href=\"\nCONTENT;\n$return .= htmlspecialchars( $content->url()->setQueryString( array( 'do' => 'deleteReport', 'cid' => $report['id'] ) )->csrf(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class='ipsButton ipsButton_primary'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'automoderation_already_reported_delete', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction resetPass( $form ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('lost_password') );\n$return .= <<<CONTENT\n\n<div class='ipsLayout_contentSection ipsBox ipsPad'>\n\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reset_pass_instructions', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t<br>\n\t<br>\n\t{$form}\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction searchResult( $indexData, $articles, $authorData, $itemData, $unread, $objectUrl, $itemUrl, $containerUrl, $containerTitle, $repCount, $showRepUrl, $snippet, $iPostedIn, $view, $canIgnoreComments=FALSE, $reactions=array() ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<li class='ipsStreamItem ipsStreamItem_contentBlock ipsStreamItem_\nCONTENT;\n$return .= htmlspecialchars( $view, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n ipsAreaBackground_reset ipsPad \nCONTENT;\n\nif ( isset( $indexData['index_class']::$searchResultClassName ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $indexData['index_class']::$searchResultClassName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $indexData['index_hidden'] ):\n$return .= <<<CONTENT\nipsModerated\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' data-role='activityItem' data-timestamp='\nCONTENT;\n$return .= htmlspecialchars( $indexData['index_date_created'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t<div class='ipsStreamItem_container ipsClearfix'>\n\t\t\nCONTENT;\n\nif ( \\in_array( 'IPS\\Content\\Comment', class_parents( $indexData['index_class'] ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$itemClass = $indexData['index_class']::$itemClass;\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsStreamItem_header ipsPhotoPanel ipsPhotoPanel_mini'>\n\t\t\t\t\nCONTENT;\n\nif ( $indexData['index_title'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<span class='ipsStreamItem_contentType' data-ipsTooltip title='\nCONTENT;\n\n$val = \"{$itemClass::$title}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-\nCONTENT;\n$return .= htmlspecialchars( $itemClass::$icon, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><\/i><\/span>\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\t\t\t\t\n\t\t\t\t\t<span class='ipsStreamItem_contentType' data-ipsTooltip title='\nCONTENT;\n\n$val = \"{$indexData['index_class']::$title}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-\nCONTENT;\n$return .= htmlspecialchars( $indexData['index_class']::$icon, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><\/i><\/span>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhotoFromData( $authorData['member_id'], $authorData['name'], $authorData['members_seo_name'], \\IPS\\Member::photoUrl( $authorData ), ( $view !== 'condensed' ) ? 'mini' : 'tiny' );\n$return .= <<<CONTENT\n\n\t\t\t\t<div class='\nCONTENT;\n\nif ( $unread ):\n$return .= <<<CONTENT\nipsStreamItem_unread\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\nCONTENT;\n\nif ( $view == 'condensed' && $snippet ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<div class='ipsPhotoPanel ipsPhotoPanel_small'>\n\t\t\t\t\t\t\t{$snippet}\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<h2 class='ipsType_reset ipsStreamItem_title ipsContained_container \nCONTENT;\n\nif ( !$indexData['index_title'] or $view == 'condensed' ):\n$return .= <<<CONTENT\nipsStreamItem_titleSmall\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $unread ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->member_id ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $objectUrl->stripQueryString( array( 'comment' => 'comment', 'review' => 'review' ) )->setQueryString( 'do', 'getNewComment' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $objectUrl->stripQueryString( array( 'comment' => 'comment', 'review' => 'review' ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' data-linkType=\"star\" \nCONTENT;\n\nif ( $iPostedIn ):\n$return .= <<<CONTENT\ndata-iPostedIn\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'first_unread_post', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsTooltip>\n\t\t\t\t\t\t\t\t\t<span class='ipsItemStatus \nCONTENT;\n\nif ( $iPostedIn ):\n$return .= <<<CONTENT\nipsItemStatus_posted\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'><i class=\"fa fa-\nCONTENT;\n\nif ( $iPostedIn ):\n$return .= <<<CONTENT\nstar\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\ncircle\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\"><\/i><\/span>\n\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nelseif ( $iPostedIn ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span><span class='ipsItemStatus ipsItemStatus_read ipsItemStatus_posted'><i class=\"fa fa-star\"><\/i><\/span><\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $indexData['index_prefix'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<span>\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->prefix( rawurlencode($indexData['index_prefix']), $indexData['index_prefix'] );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<span class='ipsType_break ipsContained'>\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $objectUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-linkType=\"link\" data-searchable>\nCONTENT;\n\nif ( ! empty( $itemData['extra']['solved'] )  ):\n$return .= <<<CONTENT\n<span class=\"ipsBadge ipsBadge_icon ipsBadge_small ipsBadge_positive\" data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'this_is_solved', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-check'><\/i><\/span>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $itemData[ $itemClass::$databasePrefix . $itemClass::$databaseColumnMap['title'] ], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $indexData['index_hidden'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $indexData['index_hidden'] === -1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<span><span class=\"ipsBadge ipsBadge_icon ipsBadge_small ipsBadge_warning\" data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'hidden', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-eye-slash'><\/i><\/span><\/span>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nelseif ( $indexData['index_hidden'] === 1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<span><span class=\"ipsBadge ipsBadge_icon ipsBadge_small ipsBadge_warning\" data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'pending_approval', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-warning'><\/i><\/span><\/span>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/h2>\n\t\t\t\t\t\nCONTENT;\n\nif ( $view != 'condensed' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<p class='ipsType_reset ipsStreamItem_status ipsType_blendLinks'>\n\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( $itemClass::searchResultSummaryLanguage( $authorData, $articles, $indexData, $itemData ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n$return .= htmlspecialchars( $containerUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>{$containerTitle}<\/a>\n\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<ul class='ipsList_inline ipsStreamItem_stats ipsType_light ipsType_blendLinks'>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a rel=\"nofollow\" href='\nCONTENT;\n\nif ( $indexData['index_title'] ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $objectUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( \\in_array( 'IPS\\Content\\Review', class_parents( $indexData['index_class'] ) ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $objectUrl->setQueryString( array( 'do' => 'findReview', 'review' => $indexData['index_object_id'] ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $objectUrl->setQueryString( array( 'do' => 'findComment', 'comment' => $indexData['index_object_id'] ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' class='ipsType_blendLinks'><i class='fa fa-clock-o'><\/i> \nCONTENT;\n\n$val = ( $indexData['index_date_created'] instanceof \\IPS\\DateTime ) ? $indexData['index_date_created'] : \\IPS\\DateTime::ts( $indexData['index_date_created'] );$return .= $val->html();\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $itemClass::$databaseColumnMap['num_comments'] ) and isset( $itemData[ $itemClass::$databasePrefix . $itemClass::$databaseColumnMap['num_comments'] ] ) and $itemData[ $itemClass::$databasePrefix . $itemClass::$databaseColumnMap['num_comments'] ] > ( $itemClass::$firstCommentRequired ? 1 : 0 ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n\nif ( $indexData['index_title'] ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $objectUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( \\in_array( 'IPS\\Content\\Review', class_parents( $indexData['index_class'] ) ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $objectUrl->setQueryString( array( 'do' => 'findReview', 'review' => $indexData['index_object_id'] ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $objectUrl->setQueryString( array( 'do' => 'findComment', 'comment' => $indexData['index_object_id'] ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' class='ipsType_blendLinks'>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $itemClass::$firstCommentRequired ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<i class='fa fa-comment'><\/i> \nCONTENT;\n\n$return .= htmlspecialchars( $itemData[ $itemClass::$databasePrefix . $itemClass::$databaseColumnMap['num_comments'] ]-1, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<i class='fa fa-comment'><\/i> \nCONTENT;\n\n$return .= htmlspecialchars( $itemData[ $itemClass::$databasePrefix . $itemClass::$databaseColumnMap['num_comments'] ], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $itemClass::$databaseColumnMap['num_reviews'] ) and isset( $itemData[ $itemClass::$databasePrefix . $itemClass::$databaseColumnMap['num_reviews'] ] ) and $itemData[ $itemClass::$databasePrefix . $itemClass::$databaseColumnMap['num_reviews'] ] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $itemUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n#reviews' class='ipsType_blendLinks'><i class='fa fa-star-half-o'><\/i> \nCONTENT;\n$return .= htmlspecialchars( $itemData[ $itemClass::$databasePrefix . $itemClass::$databaseColumnMap['num_reviews'] ], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/ul>\n\n\t\t\t\t\t\t<p class='ipsStreamItem_status ipsType_reset ipsType_blendLinks'>\n\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( $itemClass::searchResultSummaryLanguage( $authorData, $articles, $indexData, $itemData ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n$return .= htmlspecialchars( $containerUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>{$containerTitle}<\/a>\n\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( isset( $indexData['index_tags'] ) and $view == 'condensed' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<span>\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->tags( explode( ',', $indexData['index_tags'] ), true, true );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\n\t\t\t\t\t\nCONTENT;\n\nif ( $view == 'condensed' && $snippet ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nif ( $view !== 'condensed' ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div class='ipsStreamItem_snippet ipsType_break'>\n\t\t\t\t\t\nCONTENT;\n\nif ( $canIgnoreComments and isset( $itemData['author'] ) and \\IPS\\Member::loggedIn()->member_id and isset( $authorData['member_id'] ) and isset ( $authorData['member_group_id'] ) and \\IPS\\Member::loggedIn()->isIgnoring( $authorData, 'topics' ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<div class='ipsComment_ignored ipsType_light' id='elIgnoreComment_\nCONTENT;\n$return .= htmlspecialchars( $indexData['index_object_id'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ignoreCommentID='elComment_\nCONTENT;\n$return .= htmlspecialchars( $indexData['index_object_id'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ignoreUserID='\nCONTENT;\n$return .= htmlspecialchars( $authorData['member_id'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array($authorData['name']); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ignoring_content', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n <a href='#elIgnoreComment_\nCONTENT;\n$return .= htmlspecialchars( $indexData['index_object_id'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu' data-ipsMenu data-ipsMenu-menuID='elIgnoreComment_\nCONTENT;\n$return .= htmlspecialchars( $indexData['index_object_id'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu' data-ipsMenu-appendTo='#elIgnoreComment_\nCONTENT;\n$return .= htmlspecialchars( $indexData['index_object_id'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action=\"ignoreOptions\" title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'see_post_ignore_options', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' class='ipsType_blendLinks'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'options', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <i class='fa fa-caret-down'><\/i><\/a>\n\t\t\t\t\t\t<ul class='ipsMenu ipsHide' id='elIgnoreComment_\nCONTENT;\n$return .= htmlspecialchars( $indexData['index_object_id'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu'>\n\t\t\t\t\t\t\t<li class='ipsMenu_item ipsJS_show' data-ipsMenuValue='showPost'><a href='#'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'show_this_post', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t<li class='ipsMenu_sep ipsJS_show'><hr><\/li>\n\t\t\t\t\t\t\t<li class='ipsMenu_item' data-ipsMenuValue='stopIgnoring'><a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=ignore&do=remove&id={$authorData['member_id']}\", null, \"ignore\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$sprintf = array($authorData['name']); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stop_ignoring_posts_by', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=ignore\", null, \"ignore\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_ignore_preferences', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t<\/div>\n\t\t\t\t\t<div id='elComment_\nCONTENT;\n$return .= htmlspecialchars( $indexData['index_object_id'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class=\"ipsHide\">\n\t\t\t\t\t\t{$snippet}\n\t\t\t\t\t<\/div>\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t \t{$snippet}\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t\t<ul class='ipsList_inline ipsStreamItem_meta ipsGap:1'>\n\t\t\t\t\t<li class='ipsType_light ipsType_medium'>\n\t\t\t\t\t\t<a rel=\"nofollow\" href='\nCONTENT;\n\nif ( $indexData['index_title'] ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $objectUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( \\in_array( 'IPS\\Content\\Review', class_parents( $indexData['index_class'] ) ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $objectUrl->setQueryString( array( 'do' => 'findReview', 'review' => $indexData['index_object_id'] ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $objectUrl->setQueryString( array( 'do' => 'findComment', 'comment' => $indexData['index_object_id'] ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' class='ipsType_blendLinks'><i class='fa fa-clock-o'><\/i> \nCONTENT;\n\n$val = ( $indexData['index_date_created'] instanceof \\IPS\\DateTime ) ? $indexData['index_date_created'] : \\IPS\\DateTime::ts( $indexData['index_date_created'] );$return .= $val->html();\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nif ( isset( $itemClass::$databaseColumnMap['num_comments'] ) and isset( $itemData[ $itemClass::$databasePrefix . $itemClass::$databaseColumnMap['num_comments'] ] ) and $itemData[ $itemClass::$databasePrefix . $itemClass::$databaseColumnMap['num_comments'] ] > ( $itemClass::$firstCommentRequired ? 1 : 0 ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class='ipsType_light ipsType_medium'>\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n\nif ( $indexData['index_title'] ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $objectUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( \\in_array( 'IPS\\Content\\Review', class_parents( $indexData['index_class'] ) ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $objectUrl->setQueryString( array( 'do' => 'findReview', 'review' => $indexData['index_object_id'] ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $objectUrl->setQueryString( array( 'do' => 'findComment', 'comment' => $indexData['index_object_id'] ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' class='ipsType_blendLinks'>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $itemClass::$firstCommentRequired ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<i class='fa fa-comment'><\/i> \nCONTENT;\n\n$pluralize = array( $itemData[ $itemClass::$databasePrefix . $itemClass::$databaseColumnMap['num_comments'] ] - 1 ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'num_replies', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<i class='fa fa-comment'><\/i> \nCONTENT;\n\n$pluralize = array( $itemData[ $itemClass::$databasePrefix . $itemClass::$databaseColumnMap['num_comments'] ] ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'num_comments', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\IPS::classUsesTrait( $indexData['index_class'], 'IPS\\Content\\Reactable' ) and \\IPS\\Settings::i()->reputation_enabled and \\count( $reactions ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( \\in_array( 'IPS\\Content\\Review', class_parents( $indexData['index_class'] ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"search\", \"core\" )->searchReaction( $reactions, $itemUrl->setQueryString('do', 'showReactionsReview')->setQueryString('review', $indexData['index_object_id']), $repCount );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"search\", \"core\" )->searchReaction( $reactions, $itemUrl->setQueryString('do', 'showReactionsComment')->setQueryString('comment', $indexData['index_object_id']), $repCount );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( isset( $indexData['index_tags'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->tags( explode( ',', $indexData['index_tags'] ), true );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/ul>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$itemClass = $indexData['index_class'];\n$return .= <<<CONTENT\n\n\n\t\t\t<div class='ipsStreamItem_header \nCONTENT;\n\nif ( isset( $itemClass::$databaseColumnMap['author'] ) ):\n$return .= <<<CONTENT\nipsPhotoPanel ipsPhotoPanel_mini\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t<span class='ipsStreamItem_contentType \nCONTENT;\n\nif ( !isset( $itemClass::$databaseColumnMap['author'] ) ):\n$return .= <<<CONTENT\nipsResponsive_hidePhone\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' data-ipsTooltip title='\nCONTENT;\n\n$val = \"{$indexData['index_class']::$title}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'ucfirst' => TRUE ) );\n$return .= <<<CONTENT\n'><i class='fa fa-\nCONTENT;\n$return .= htmlspecialchars( $indexData['index_class']::$icon, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><\/i><\/span>\n\t\t\t\t\nCONTENT;\n\nif ( isset( $itemClass::$databaseColumnMap['author'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhotoFromData( $authorData['member_id'], $authorData['name'], $authorData['members_seo_name'], \\IPS\\Member::photoUrl( $authorData ), ( $view !== 'condensed' ) ? 'mini' : 'tiny' );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<div class='\nCONTENT;\n\nif ( $unread ):\n$return .= <<<CONTENT\nipsStreamItem_unread\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\nCONTENT;\n\nif ( $view == 'condensed' && $snippet ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<div class='ipsPhotoPanel ipsPhotoPanel_small'>\n\t\t\t\t\t\t\t{$snippet}\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<h2 class='ipsType_reset ipsContained_container ipsStreamItem_title ipsType_break \nCONTENT;\n\nif ( $view == 'condensed' ):\n$return .= <<<CONTENT\nipsStreamItem_titleSmall\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $unread ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span><a href='\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->member_id ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $objectUrl->setQueryString( 'do', 'getNewComment' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $objectUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'first_unread_post', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-linkType=\"star\" \nCONTENT;\n\nif ( $iPostedIn ):\n$return .= <<<CONTENT\ndata-iPostedIn\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-ipsTooltip>\n\t\t\t\t\t\t\t\t<span class='ipsItemStatus \nCONTENT;\n\nif ( $iPostedIn ):\n$return .= <<<CONTENT\nipsItemStatus_posted\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'><i class=\"fa fa-\nCONTENT;\n\nif ( $iPostedIn ):\n$return .= <<<CONTENT\nstar\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\ncircle\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\"><\/i><\/span>\n\t\t\t\t\t\t\t<\/a><\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nelseif ( $iPostedIn ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class='ipsItemStatus ipsItemStatus_read ipsItemStatus_posted'><i class=\"fa fa-star\"><\/i><\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $indexData['index_prefix'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span>\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->prefix( rawurlencode($indexData['index_prefix']), $indexData['index_prefix'] );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<span class='ipsContained ipsType_break'><a href='\nCONTENT;\n$return .= htmlspecialchars( $itemUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-linkType=\"link\" data-searchable>\nCONTENT;\n\nif ( ! empty( $itemData['extra']['solved'] )  ):\n$return .= <<<CONTENT\n<span class=\"ipsBadge ipsBadge_icon ipsBadge_small ipsBadge_positive\" data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'this_is_solved', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-check'><\/i><\/span>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $indexData['index_title'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n                        \nCONTENT;\n\nif ( $indexData['index_hidden'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span><span class=\"ipsBadge ipsBadge_icon ipsBadge_warning ipsBadge_medium \" data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'hidden', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-eye-slash'><\/i><\/span><\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                        <\/span>\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $indexData['index_tags'] ) and $view == 'condensed' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->tags( explode( ',', $indexData['index_tags'] ), true, true );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/h2>\n\t\t\t\t\t\nCONTENT;\n\nif ( $view != 'condensed' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $containerTitle ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<p class='ipsType_reset ipsStreamItem_status ipsType_blendLinks'>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( $itemClass::searchResultSummaryLanguage( $authorData, $articles, $indexData, $itemData ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n$return .= htmlspecialchars( $containerUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>{$containerTitle}<\/a>\n\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<ul class='ipsList_inline ipsStreamItem_stats ipsType_light ipsType_blendLinks'>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $objectUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsType_blendLinks' rel=\"nofollow\"><i class='fa fa-clock-o'><\/i> \nCONTENT;\n\n$val = ( $indexData['index_date_created'] instanceof \\IPS\\DateTime ) ? $indexData['index_date_created'] : \\IPS\\DateTime::ts( $indexData['index_date_created'] );$return .= $val->html();\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $indexData['index_class']::$databaseColumnMap['num_comments'] ) and isset( $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_comments'] ] ) and $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_comments'] ] > ( $indexData['index_class']::$firstCommentRequired ? 1 : 0 ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n\nif ( $indexData['index_title'] ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $objectUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( \\in_array( 'IPS\\Content\\Review', class_parents( $indexData['index_class'] ) ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $objectUrl->setQueryString( array( 'do' => 'findReview', 'review' => $indexData['index_object_id'] ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $objectUrl->setQueryString( array( 'do' => 'findComment', 'comment' => $indexData['index_object_id'] ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' class='ipsType_blendLinks'>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $indexData['index_class']::$firstCommentRequired ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<i class='fa fa-comment'><\/i> \nCONTENT;\n\n$return .= htmlspecialchars( $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_comments'] ] - 1, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<i class='fa fa-comment'><\/i> \nCONTENT;\n\n$return .= htmlspecialchars( $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_comments'] ], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $indexData['index_class']::$databaseColumnMap['num_reviews'] ) and isset( $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_reviews'] ] ) and $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_reviews'] ] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $itemUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n#reviews' class='ipsType_blendLinks'><i class='fa fa-star-half-o'><\/i> \nCONTENT;\n\n$return .= htmlspecialchars( $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_reviews'] ], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $containerTitle ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<p class='ipsStreamItem_status ipsType_reset ipsType_blendLinks'>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( $itemClass::searchResultSummaryLanguage( $authorData, $articles, $indexData, $itemData ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n$return .= htmlspecialchars( $containerUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>{$containerTitle}<\/a>\n\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\n\t\t\t\t\t\nCONTENT;\n\nif ( $view == 'condensed' && $snippet ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nif ( $view !== 'condensed' ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div class='ipsStreamItem_snippet ipsType_break'>\n\t\t\t\t\t{$snippet}\n\t\t\t\t<\/div>\n\t\t\t\t<ul class='ipsList_inline ipsStreamItem_meta ipsGap:1'>\n\t\t\t\t\t\nCONTENT;\n\nif ( isset( $indexData['index_class']::$databaseColumnMap['date'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class='ipsType_light ipsType_medium'>\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $objectUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' rel=\"nofollow\" class='ipsType_blendLinks'><i class='fa fa-clock-o'><\/i> \nCONTENT;\n\n$val = ( $indexData['index_date_created'] instanceof \\IPS\\DateTime ) ? $indexData['index_date_created'] : \\IPS\\DateTime::ts( $indexData['index_date_created'] );$return .= $val->html();\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( isset( $indexData['index_class']::$databaseColumnMap['num_comments'] ) and isset( $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_comments'] ] ) and $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_comments'] ] > ( $indexData['index_class']::$firstCommentRequired ? 1 : 0 ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class='ipsType_light ipsType_medium'>\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n\nif ( $indexData['index_title'] ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $objectUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( \\in_array( 'IPS\\Content\\Review', class_parents( $indexData['index_class'] ) ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $objectUrl->setQueryString( array( 'do' => 'findReview', 'review' => $indexData['index_object_id'] ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $objectUrl->setQueryString( array( 'do' => 'findComment', 'comment' => $indexData['index_object_id'] ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' class='ipsType_blendLinks'>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $indexData['index_class']::$firstCommentRequired ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<i class='fa fa-comment'><\/i> \nCONTENT;\n\n$pluralize = array( $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_comments'] ] - 1 ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'num_replies', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<i class='fa fa-comment'><\/i> \nCONTENT;\n\n$pluralize = array( $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_comments'] ] ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'num_comments', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( isset( $indexData['index_class']::$databaseColumnMap['num_reviews'] ) and isset( $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_reviews'] ] ) and $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_reviews'] ] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class='ipsType_light ipsType_medium'>\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $itemUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n#reviews' class='ipsType_blendLinks'><i class='fa fa-star-half-o'><\/i> \nCONTENT;\n\n$pluralize = array( $itemData[ $indexData['index_class']::$databasePrefix . $indexData['index_class']::$databaseColumnMap['num_reviews'] ] ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'num_reviews', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\IPS::classUsesTrait( $indexData['index_class'], 'IPS\\Content\\Reactable' ) and \\IPS\\Settings::i()->reputation_enabled and \\count( $reactions ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"search\", \"core\" )->searchReaction( $reactions, $itemUrl->setQueryString('do', 'showReactions'), $repCount );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( isset( $indexData['index_tags'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->tags( explode( ',', $indexData['index_tags'] ), true );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/ul>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/li>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction searchResultSnippet( $indexData ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( trim( $indexData['index_content'] ) !== '' ):\n$return .= <<<CONTENT\n\n\t<div class='ipsType_richText ipsContained ipsType_medium'>\n\t\t<div \nCONTENT;\n\nif ( !( \\IPS\\Dispatcher::i()->application->directory == 'core' and \\IPS\\Dispatcher::i()->module and \\IPS\\Dispatcher::i()->module->key == 'search' ) ):\n$return .= <<<CONTENT\ndata-ipsTruncate data-ipsTruncate-type='remove' data-ipsTruncate-size='3 lines' data-ipsTruncate-watch='false'\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\ndata-searchable data-findTerm\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Content\\Search\\Result::preDisplay( $indexData['index_content'] );\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settings( $tab, $output, $canChangeEmail, $canChangePassword, $canChangeUsername, $canChangeSignature, $loginMethods,  $canConfigureMfa=FALSE, $showApps=FALSE ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('settings'), \\IPS\\Member::loggedIn()->language()->addToStack('settings_blurb') );\n$return .= <<<CONTENT\n\n<div id='elSettingsTabs' data-ipsTabBar data-ipsTabBar-contentArea='#elProfileTabContent' data-ipsTabBar-itemSelector='[data-ipsSideMenu] .ipsSideMenu_item' data-ipsTabBar-activeClass='ipsSideMenu_itemActive'>\n\t<div class='ipsColumns ipsColumns_collapsePhone'>\n\t\t<div class='ipsColumn ipsColumn_wide'>\n\t\t\t<div class='ipsBox ipsPadding sm:ipsPadding:half ipsResponsive_pull sm:ipsMargin_bottom'>\n\t\t\t\t<div class='ipsSideMenu' data-ipsSideMenu>\n\t\t\t\t\t<h3 class=\"ipsSideMenu_mainTitle ipsAreaBackground_light ipsType_medium\">\n\t\t\t\t\t\t<a href=\"#modcp_menu\" class=\"ipsPad_double\" data-action=\"openSideMenu\">\n\t\t\t\t\t\t\t<i class=\"fa fa-bars\"><\/i> &nbsp;\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'settings_area', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n&nbsp;<i class=\"fa fa-caret-down\"><\/i>\n\t\t\t\t\t\t<\/a>\n\t\t\t\t\t<\/h3>\n\t\t\t\t\t<ul class=\"ipsSideMenu_list\">\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings\", null, \"settings\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' id='setting_overview' class='ipsType_normal ipsSideMenu_item \nCONTENT;\n\nif ( $tab === 'overview' ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'overview', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" role=\"tab\" aria-selected=\"\nCONTENT;\n\nif ( $tab === 'overview' ):\n$return .= <<<CONTENT\ntrue\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nfalse\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\t\t\t<i class='fa fa-tachometer'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'overview', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $canChangeEmail ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=email\", null, \"settings_email\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' id='setting_email' class='ipsType_normal ipsSideMenu_item \nCONTENT;\n\nif ( $tab === 'email' ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'email_address', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" role=\"tab\" aria-selected=\"\nCONTENT;\n\nif ( $tab === 'email' ):\n$return .= <<<CONTENT\ntrue\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nfalse\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\t\t\t\t<i class='fa fa-envelope-o'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'email_address', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $canChangePassword ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=password\", null, \"settings_password\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' id='setting_password' class='ipsType_normal ipsSideMenu_item \nCONTENT;\n\nif ( $tab === 'password' ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'password', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" role=\"tab\" aria-selected=\"\nCONTENT;\n\nif ( $tab === 'password' ):\n$return .= <<<CONTENT\ntrue\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nfalse\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\t\t\t\t<i class='fa fa-key'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'password', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $canConfigureMfa ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=mfa\", null, \"settings_mfa\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' id='setting_mfa' class='ipsType_normal ipsSideMenu_item \nCONTENT;\n\nif ( $tab === 'mfa' ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ucp_mfa', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" role=\"tab\" aria-selected=\"\nCONTENT;\n\nif ( $tab === 'mfa' ):\n$return .= <<<CONTENT\ntrue\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nfalse\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\t\t\t\t<i class='fa fa-lock'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ucp_mfa', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->device_management ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=devices\", null, \"settings_devices\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' id='setting_devices' class='ipsType_normal ipsSideMenu_item \nCONTENT;\n\nif ( $tab === 'devices' ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ucp_devices', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" role=\"tab\" aria-selected=\"\nCONTENT;\n\nif ( $tab === 'devices' ):\n$return .= <<<CONTENT\ntrue\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nfalse\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\t\t\t\t<i class='fa fa-laptop'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ucp_devices', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $canChangeUsername ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=username\", null, \"settings_username\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' id='setting_username' class='ipsType_normal ipsSideMenu_item \nCONTENT;\n\nif ( $tab === 'username' ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'username', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" role=\"tab\" aria-selected=\"\nCONTENT;\n\nif ( $tab === 'username' ):\n$return .= <<<CONTENT\ntrue\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nfalse\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\t\t\t\t<i class='fa fa-user'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'username', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=links\", null, \"settings_links\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' id='setting_links' class='ipsType_normal ipsSideMenu_item \nCONTENT;\n\nif ( $tab === 'links' ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profile_settings_cvb', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" role=\"tab\" aria-selected=\"\nCONTENT;\n\nif ( $tab === 'links' ):\n$return .= <<<CONTENT\ntrue\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nfalse\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\t\t<i class='fa fa-link'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profile_settings_cvb', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $canChangeSignature ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=signature\", null, \"settings_signature\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' id='setting_signature' class='ipsType_normal ipsSideMenu_item \nCONTENT;\n\nif ( $tab === 'signature' ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'signature', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" role=\"tab\" aria-selected=\"\nCONTENT;\n\nif ( $tab === 'signature' ):\n$return .= <<<CONTENT\ntrue\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nfalse\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\t\t\t\t<i class='fa fa-pencil'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'signature', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->ref_on ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=referrals\", null, \"settings_referrals\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' id='setting_referrals' class='ipsType_normal ipsSideMenu_item \nCONTENT;\n\nif ( $tab === 'referrals' ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'referrals', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" role=\"tab\" aria-selected=\"\nCONTENT;\n\nif ( $tab === 'referrals' ):\n$return .= <<<CONTENT\ntrue\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nfalse\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\t\t\t<i class='fa fa-users'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'referrals', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $loginMethods as $method ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $method->showInUcp( \\IPS\\Member::loggedIn() ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=login&service={$method->id}\", null, \"settings_login\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' id='setting_login_\nCONTENT;\n$return .= htmlspecialchars( $method->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsType_normal ipsSideMenu_item \nCONTENT;\n\nif ( $tab === \"login_{$method->id}\" ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n$return .= htmlspecialchars( $method->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" role=\"tab\" aria-selected=\"\nCONTENT;\n\nif ( $tab === \"login_{$method->id}\" ):\n$return .= <<<CONTENT\ntrue\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nfalse\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$icon = $method->logoForUcp();\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\is_string( $icon ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<i class='fa fa-\nCONTENT;\n$return .= htmlspecialchars( $icon, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><\/i>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"cLoginServiceIcon\">\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $icon ):\n$return .= <<<CONTENT\n<img src=\"\nCONTENT;\n$return .= htmlspecialchars( $icon, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$val = \"{$method->_title}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $showApps ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=apps\", null, \"settings_apps\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' id='setting_apps' class='ipsType_normal ipsSideMenu_item \nCONTENT;\n\nif ( $tab === \"apps\" ):\n$return .= <<<CONTENT\nipsSideMenu_itemActive\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_apps', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" role=\"tab\" aria-selected=\"\nCONTENT;\n\nif ( $tab === \"apps\" ):\n$return .= <<<CONTENT\ntrue\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nfalse\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\t\t\t\t<i class='fa fa-cubes'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_apps', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/ul>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t<\/div>\n\t\t<div class='ipsColumn ipsColumn_fluid'>\n\t\t\t<section id='elProfileTabContent' class='ipsBox ipsResponsive_pull'>\n\t\t\t\t<div id=\"ipsTabs_elSettingsTabs_setting_\nCONTENT;\n$return .= htmlspecialchars( $tab, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_panel\" class=\"ipsTabs_panel\" aria-labelledby=\"setting_overview\" aria-hidden=\"false\">\n\t\t\t\t\t{$output}\n\t\t\t\t<\/div>\n\t\t\t<\/section>\n\t\t<\/div>\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settingsApps( $apps ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsAreaBackground_light ipsPadding ipsBorder_bottom'>\n\t<h2 class=\"ipsType_pageTitle\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_apps', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n<\/div>\n\n<div class='ipsPadding'>\n\t<p class=\"ipsType_normal ipsSpacer_bottom ipsSpacer_double\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_apps_info', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\nCONTENT;\n\nif ( \\count( $apps ) ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nforeach ( $apps as $app ):\n$return .= <<<CONTENT\n\n\t\t\t<div class=\"ipsBox ipsSpacer_bottom ipsClearfix\">\n\t\t\t\t<div class=\"ipsAreaBackground_light ipsClearfix ipsPad\">\n\t\t\t\t\t<div class=\"ipsPos_right\">\n\t\t\t\t\t\t<a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"core&module=system&controller=settings&area=apps&do=revokeApp&client_id={$app['client']->client_id}\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"settings_apps\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" class=\"ipsButton ipsButton_negative ipsButton_small\" data-confirm data-confirmSubMessage=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_app_revoke_confirm', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_app_revoke', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/a>\n\t\t\t\t\t<\/div>\n\t\t\t\t\t<div class=\"ipsPad_half\">\n\t\t\t\t\t\t<h2 class=\"ipsType_sectionHead\">\n\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $app['client']->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/h2>\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"ipsPad\">\n\t\t\t\t\t<ul class=\"ipsDataList\">\n\t\t\t\t\t\t<li class=\"ipsDataItem\">\n\t\t\t\t\t\t\t<span class=\"ipsDataItem_generic ipsDataItem_size6\">\n\t\t\t\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_app_issued', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t<span class=\"ipsDataItem_generic\">\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$val = ( $app['issued'] instanceof \\IPS\\DateTime ) ? $app['issued'] : \\IPS\\DateTime::ts( $app['issued'] );$return .= $val->html();\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $app['scopes'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li class=\"ipsDataItem\">\n\t\t\t\t\t\t\t\t<span class=\"ipsDataItem_generic ipsDataItem_size6\">\n\t\t\t\t\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_app_scopes', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t\t<div class=\"ipsDataItem_generic\">\n\t\t\t\t\t\t\t\t\t<ul class=\"ipsList_reset\">\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $app['scopes'] as $key => $scope ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-check\"><\/i> \nCONTENT;\n$return .= htmlspecialchars( $scope, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/ul>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t<div class=\"ipsPad ipsType_center ipsType_light\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_apps_empty', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settingsDevices( $devices, $ipAddresses ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsAreaBackground_light ipsPadding ipsBorder_bottom'>\n\t<h2 class=\"ipsType_pageTitle\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ucp_devices', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n<\/div>\n<div class='ipsPadding'>\n\t<p class=\"ipsType_normal ipsSpacer_bottom ipsSpacer_double\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'device_management_info', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n&nbsp; <a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&do=secureAccount\", null, \"settings_secure\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'device_list_secure_account', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/p>\n\t\nCONTENT;\n\nif ( \\count( $devices ) ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nforeach ( $devices as $device ):\n$return .= <<<CONTENT\n\n\t\t\t<div class=\"ipsBox ipsBox--child ipsSpacer_bottom ipsClearfix\">\n\t\t\t\t<div class=\"ipsBorder_bottom ipsClearfix ipsPad_half ipsFlex ipsFlex-ai:center ipsFlex-jc:between sm:ipsFlex-fd:column sm:ipsFlex-ai:stretch\">\n\t\t\t\t\t<div class='ipsFlex-flex:10'>\n\t\t\t\t\t\t<div class=\"ipsPos_left ipsMargin_right:half\">\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $device->userAgent()->platform === 'Macintosh' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<img src=\"\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->resource( \"logos\/devices\/mac.png\", \"\", 'interface', false );\n$return .= <<<CONTENT\n\" width=\"64\">\n\t\t\t\t\t\t\t\nCONTENT;\n\nelseif ( $device->userAgent()->platform === 'Android' or $device->userAgent()->platform === 'Windows Phone' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<img src=\"\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->resource( \"logos\/devices\/android.png\", \"\", 'interface', false );\n$return .= <<<CONTENT\n\" width=\"64\">\n\t\t\t\t\t\t\t\nCONTENT;\n\nelseif ( $device->userAgent()->platform === 'iPad' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<img src=\"\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->resource( \"logos\/devices\/ipad.png\", \"\", 'interface', false );\n$return .= <<<CONTENT\n\" width=\"64\">\n\t\t\t\t\t\t\t\nCONTENT;\n\nelseif ( $device->userAgent()->platform === 'iPhone' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<img src=\"\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->resource( \"logos\/devices\/iphone.png\", \"\", 'interface', false );\n$return .= <<<CONTENT\n\" width=\"64\">\n\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<img src=\"\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->resource( \"logos\/devices\/pc.png\", \"\", 'interface', false );\n$return .= <<<CONTENT\n\" width=\"64\">\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<h2 class=\"ipsType_sectionHead ipsMargin_top:half\">\n\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $device->userAgent()->platform, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/h2>\n\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( \\IPS\\Request::i()->cookie['device_key'] ) and \\IPS\\Request::i()->cookie['device_key'] === $device->device_key ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'current_device', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array(\\IPS\\DateTime::ts( $device->last_seen )->relative()); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'device_last_loggedin', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/div>\n\t\t\t\t\t\nCONTENT;\n\nif ( $device->login_key or isset( $apps[ $device->device_key ] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"=core&module=system&controller=settings&area=devices&do=disableAutomaticLogin&device={$device->device_key}\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"settings_devices\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" class=\"ipsButton ipsButton_link ipsButton_link--negative ipsButton_small\">\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( \\IPS\\Request::i()->cookie['device_key'] ) and \\IPS\\Request::i()->cookie['device_key'] === $device->device_key ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'disable_automatic_login', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_out', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\t\t\t\t\t\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"ipsPadding_horizontal:half\">\n\t\t\t\t\t<ul class=\"ipsDataList\">\n\t\t\t\t\t\t<li class=\"ipsDataItem\">\n\t\t\t\t\t\t\t<span class=\"ipsDataItem_generic ipsDataItem_size6\">\n\t\t\t\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'device_table_user_agent', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t<span class=\"ipsDataItem_generic\">\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\in_array( $device->userAgent()->browser, array( 'Android Browser', 'AppleWebKit', 'Camino', 'Chrome', 'Edge', 'Firefox', 'IEMobile', 'Midori', 'MSIE', 'Opera', 'Puffin', 'Safari', 'SamsungBrowser', 'Silk', 'UCBrowser', 'Vivaldi' ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$browser = str_replace( ' ', '', $device->userAgent()->browser );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<img src=\"\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->resource( \"logos\/browsers\/{$browser}.png\", \"\", 'interface', false );\n$return .= <<<CONTENT\n\" width=\"24\"> &nbsp; \n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $device->userAgent()->browser, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $device->userAgent()->browserVersion, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $loginMethod = $device->loginMethod() and $logo = $loginMethod->logoForDeviceInformation() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li class=\"ipsDataItem\">\n\t\t\t\t\t\t\t\t<span class=\"ipsDataItem_generic ipsDataItem_size6\">\n\t\t\t\t\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'device_table_login_handler', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t\t<span class=\"ipsDataItem_generic\">\n\t\t\t\t\t\t\t\t\t<img src=\"\nCONTENT;\n$return .= htmlspecialchars( $logo, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" width=\"24\"> &nbsp; \n\t\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $loginMethod->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $apps[ $device->device_key ] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li class=\"ipsDataItem\">\n\t\t\t\t\t\t\t\t<div class=\"ipsDataItem_generic ipsDataItem_size6\">\n\t\t\t\t\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_apps', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t<div class=\"ipsDataItem_generic\">\n\t\t\t\t\t\t\t\t\t<ul class=\"ipsDataList\">\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $apps[ $device->device_key ] as $clientId => $app ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<li class=\"ipsDataItem\">\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"ipsDataItem_generic\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $oauthClients[ $clientId ]->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class=\"ipsDataItem\">\n\t\t\t\t\t\t\t<div class=\"ipsDataItem_generic ipsDataItem_size6 ipsPos_top\">\n\t\t\t\t\t\t\t\t<strong>\nCONTENT;\n\nif ( \\IPS\\Settings::i()->ipsgeoip ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'device_last_locations', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n*\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'device_last_logins', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t<div class=\"ipsDataItem_generic\">\n\t\t\t\t\t\t\t\t<ul class=\"ipsList_reset\">\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $ipAddresses[ $device->device_key ] as $ipAddress => $details ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->ipsgeoip ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $details['location'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $ipAddress, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t&nbsp; <span class=\"ipsType_light\">\nCONTENT;\n\n$val = ( $details['date'] instanceof \\IPS\\DateTime ) ? $details['date'] : \\IPS\\DateTime::ts( $details['date'] );$return .= $val->html();\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t<\/ul>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->ipsgeoip ):\n$return .= <<<CONTENT\n\n\t\t\t<p class=\"ipsType_light ipsType_small\">* \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ip_geolocation_info', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\n$userAgent = \\IPS\\Http\\UserAgent::parse();\n$return .= <<<CONTENT\n\n\t\t<div class=\"ipsBox ipsSpacer_bottom ipsClearfix\">\n\t\t\t<div class=\"ipsAreaBackground_light ipsClearfix ipsPad_half\">\n\t\t\t\t<div class=\"ipsPos_left\">\n\t\t\t\t\t\nCONTENT;\n\nif ( $userAgent->platform === 'Macintosh' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<img src=\"\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->resource( \"logos\/devices\/mac.png\", \"\", 'interface', false );\n$return .= <<<CONTENT\n\" width=\"64\">\n\t\t\t\t\t\nCONTENT;\n\nelseif ( $userAgent->platform === 'Android' or $userAgent->platform === 'Windows Phone' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<img src=\"\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->resource( \"logos\/devices\/android.png\", \"\", 'interface', false );\n$return .= <<<CONTENT\n\" width=\"64\">\n\t\t\t\t\t\nCONTENT;\n\nelseif ( $userAgent->platform === 'iPad' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<img src=\"\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->resource( \"logos\/devices\/ipad.png\", \"\", 'interface', false );\n$return .= <<<CONTENT\n\" width=\"64\">\n\t\t\t\t\t\nCONTENT;\n\nelseif ( $userAgent->platform === 'iPhone' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<img src=\"\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->resource( \"logos\/devices\/iphone.png\", \"\", 'interface', false );\n$return .= <<<CONTENT\n\" width=\"64\">\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<img src=\"\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->resource( \"logos\/devices\/pc.png\", \"\", 'interface', false );\n$return .= <<<CONTENT\n\" width=\"64\">\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"ipsPad_half\">\n\t\t\t\t\t<h2 class=\"ipsType_sectionHead\">\n\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $userAgent->platform, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/h2>\n\t\t\t\t\t<br>\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'current_device', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<div class=\"ipsPad\">\n\t\t\t\t<ul class=\"ipsDataList\">\n\t\t\t\t\t<li class=\"ipsDataItem\">\n\t\t\t\t\t\t<span class=\"ipsDataItem_generic ipsDataItem_size6\">\n\t\t\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'device_table_user_agent', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t<span class=\"ipsDataItem_generic\">\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\in_array( $userAgent->browser, array( 'Android Browser', 'AppleWebKit', 'Camino', 'Chrome', 'Edge', 'Firefox', 'IEMobile', 'Midori', 'MSIE', 'Opera', 'Puffin', 'Safari', 'SamsungBrowser', 'Silk', 'UCBrowser', 'Vivaldi' ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$browser = str_replace( ' ', '', $userAgent->browser );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<img src=\"\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->resource( \"logos\/browsers\/{$browser}.png\", \"\", 'interface', false );\n$return .= <<<CONTENT\n\" width=\"24\">\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $userAgent->browser, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $userAgent->browserVersion, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/span>\n\t\t\t\t\t<\/li>\n\t\t\t\t<\/ul>\n\t\t\t<\/div>\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settingsEmail( $form=NULL, $login=NULL, $error=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsAreaBackground_light ipsPadding ipsBorder_bottom'>\n\t<h2 class='ipsType_pageTitle'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_email_address', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n<\/div>\n<div class='ipsPadding'>\n\t\nCONTENT;\n\nif ( $form ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->reg_auth_type == 'user' or \\IPS\\Settings::i()->reg_auth_type == 'admin_user' ):\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsType_textBlock ipsType_normal'>\n\t\t\t\t<ul class='ipsList_bullets'>\n\t\t\t\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_email_explain_1', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_email_explain_2', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/li>\n\t\t\t\t<\/ul>\n\t\t\t<\/div>\n\t\t\t<hr class='ipsHr'>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t{$form}\n\t\nCONTENT;\n\nelseif ( $login ):\n$return .= <<<CONTENT\n\n\t\t<br><hr class='ipsHr'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"system\", \\IPS\\Request::i()->app )->reauthenticate( $login, $error );\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t<div class='ipsType_normal'>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_email_admin_1', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\n\t\t<ol class='ipsList_bullets ipsList_numbers ipsSpacer_top ipsType_normal'>\n\t\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_email_admin_2', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t<li>\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::loggedIn()->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_email_admin_3', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_email_admin_4', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_email_admin_5', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t<\/ol>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settingsLinks( $form ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsAreaBackground_light ipsPadding ipsBorder_bottom'>\n    <h2 class='ipsType_pageTitle'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profile_settings_cvb', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n<\/div>\n<div class='ipsPadding'>\n    {$form}\n<\/div>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settingsLoginConnect( $method, $login, $error ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $error ):\n$return .= <<<CONTENT\n\n\t<div class=\"ipsMessage ipsMessage_error\">\nCONTENT;\n\n$val = \"{$error}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<form accept-charset='utf-8' method='post' action='\nCONTENT;\n$return .= htmlspecialchars( $login->url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t<input type=\"hidden\" name=\"csrfKey\" value=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Session::i()->csrfKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nif ( $method->type() === \\IPS\\Login::TYPE_USERNAME_PASSWORD ):\n$return .= <<<CONTENT\n\n\t\t<ul class='ipsForm'>\n\t\t\t<li class=\"ipsFieldRow ipsFieldRow_fullWidth ipsClearfix\">\n\t\t\t\t\nCONTENT;\n\n$authType = $method->authType();\n$return .= <<<CONTENT\n\n\t\t\t\t<label class=\"ipsFieldRow_label\" for=\"auth\">\n\t\t\t\t\t\nCONTENT;\n\nif ( $authType === \\IPS\\Login::AUTH_TYPE_USERNAME ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'username', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nelseif ( $authType === \\IPS\\Login::AUTH_TYPE_EMAIL ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'email_address', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'username_or_email', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<span class=\"ipsFieldRow_required\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'required', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t<\/label>\n\t\t\t\t<div class=\"ipsFieldRow_content\">\n\t\t\t\t\t\nCONTENT;\n\nif ( $authType === \\IPS\\Login::AUTH_TYPE_USERNAME ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'username', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" name=\"auth\" id=\"auth\" \nCONTENT;\n\nif ( isset( \\IPS\\Request::i()->auth ) ):\n$return .= <<<CONTENT\nvalue=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Request::i()->auth, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\nCONTENT;\n\nelseif ( $authType === \\IPS\\Login::AUTH_TYPE_EMAIL ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<input type=\"email\" placeholder=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'email_address', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" name=\"auth\" id=\"auth\" \nCONTENT;\n\nif ( isset( \\IPS\\Request::i()->auth ) ):\n$return .= <<<CONTENT\nvalue=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Request::i()->auth, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'username_or_email', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" name=\"auth\" id=\"auth\" \nCONTENT;\n\nif ( isset( \\IPS\\Request::i()->auth ) ):\n$return .= <<<CONTENT\nvalue=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Request::i()->auth, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/li>\n\t\t\t<li class=\"ipsFieldRow ipsFieldRow_fullWidth ipsClearfix\">\n\t\t\t\t<label class=\"ipsFieldRow_label\" for=\"password\">\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'password', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<span class=\"ipsFieldRow_required\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'required', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t<\/label>\n\t\t\t\t<div class=\"ipsFieldRow_content\">\n\t\t\t\t\t<input type=\"password\" placeholder=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'password', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" name=\"password\" id=\"password\" \nCONTENT;\n\nif ( isset( \\IPS\\Request::i()->password ) ):\n$return .= <<<CONTENT\nvalue=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Request::i()->password, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t<\/div>\n\t\t\t<\/li>\n\t\t\t<li class=\"ipsFieldRow ipsFieldRow_fullWidth\">\n\t\t\t\t<button type=\"submit\" name=\"_processLogin\" value=\"usernamepassword\" class=\"ipsButton ipsButton_primary ipsButton_small\" id=\"elSignIn_submit\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'login', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/button>\n\t\t\t\t\nCONTENT;\n\nif ( $forgotPasswordUrl = $method->forgotPasswordUrl() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<p class=\"ipsType_right ipsType_small\">\n\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $forgotPasswordUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' target=\"_blank\" rel=\"noopener\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'forgotten_password', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t<\/p>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/li>\n\t\t<\/ul>\t\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t{$method->button()}\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/form>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settingsLoginMethodOff( $method, $login, $error, $blurb, $canDisassociate=FALSE ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<div class='ipsAreaBackground_light ipsPadding ipsBorder_bottom'>\n\t\nCONTENT;\n\nif ( $canDisassociate ):\n$return .= <<<CONTENT\n\n\t\t<a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=login&service={$method->id}&disassociate=1\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"settings_login\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" class=\"ipsButton ipsButton_link ipsButton_link--negative ipsButton_small ipsPos_right\" data-confirm data-confirmSubMessage=\"\nCONTENT;\n\n$sprintf = array($method->_title); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profilesync_sign_out_confirm', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_out', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<h2 class='ipsType_pageTitle'>\nCONTENT;\n$return .= htmlspecialchars( $method->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/h2>\n<\/div>\n\n<div class='ipsPadding'>\n\t<p class=\"ipsType_normal ipsSpacer_bottom ipsSpacer_double\">\nCONTENT;\n\n$val = \"{$blurb}\"; $sprintf = array($method->_title); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/p>\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"system\", \\IPS\\Request::i()->app )->settingsLoginConnect( $method, $login, $error, $blurb );\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settingsLoginMethodOn( $method, $form, $canDisassociate, $photoUrl, $profileName, $extraPermissions, $login, $forceSync ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsPadding'>\n\t<div class='ipsClearfix'>\n\t\t\nCONTENT;\n\nif ( $canDisassociate ):\n$return .= <<<CONTENT\n\n\t\t\t<a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=login&service={$method->id}&disassociate=1\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"settings_login\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" class=\"ipsButton ipsButton_negative ipsButton_small ipsPos_right\" data-confirm data-confirmSubMessage=\"\nCONTENT;\n\n$sprintf = array($method->_title); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profilesync_sign_out_confirm', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_out', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<div class=\"ipsPhotoPanel \nCONTENT;\n\nif ( $photoUrl ):\n$return .= <<<CONTENT\nipsPhotoPanel_mini\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n ipsClearfix\">\n\t\t\t\nCONTENT;\n\nif ( $photoUrl ):\n$return .= <<<CONTENT\n\n\t\t\t\t<img src=\"\nCONTENT;\n$return .= htmlspecialchars( $photoUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" alt=\"\" class=\"ipsUserPhoto ipsUserPhoto_mini\">\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<div>\n        \t\t<h2 class='ipsType_sectionHead'>\nCONTENT;\n$return .= htmlspecialchars( $method->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/h2>                        \n\t\t\t\t<div>\n\t\t\t\t\t\nCONTENT;\n\nif ( $profileName ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array($profileName); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profilesync_headline', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profilesync_signed_in', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nif ( $login ):\n$return .= <<<CONTENT\n\n\t\t\t<br>\n\t\t\t<div>\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"system\", \\IPS\\Request::i()->app )->settingsLoginConnect( $method, $login, \\IPS\\Member::loggedIn()->language()->addToStack('profilesync_extra_permissions_required', true, array( 'sprintf' => array( $extraPermissions ) ) ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n\t\nCONTENT;\n\nif ( $forceSync ):\n$return .= <<<CONTENT\n\n\t\t<hr class=\"ipsHr\">\n\t\t<ul class=\"ipsList_reset\">\n\t\t\t\nCONTENT;\n\nforeach ( $forceSync as $details ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li class=\"ipsSpacer_bottom\">\n\t\t\t\t\t<p class=\"ipsType_normal ipsType_reset\">\nCONTENT;\n$return .= htmlspecialchars( $details['label'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\nCONTENT;\n\nif ( $details['error'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"system\", \\IPS\\Request::i()->app )->settingsLoginMethodSynError( $details['error'] );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $form or $forceSync ):\n$return .= <<<CONTENT\n\n\t\t<hr class=\"ipsHr\">\n\t\t{$form}\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settingsLoginMethodSynError( $error ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<span class=\"ipsType_warning\">\nCONTENT;\n\n$val = \"{$error}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settingsMfa( $handlers ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nif ( \\count( $handlers ) ):\n$return .= <<<CONTENT\n\n\t<div class='ipsAreaBackground_light ipsPadding ipsBorder_bottom'>\n\t\t<h2 class=\"ipsType_pageTitle\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'mfa_settings_title', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t<\/div>\n\t<div class='ipsPadding'>\n\t\t<p class='ipsType_normal ipsSpacer_bottom ipsSpacer_double'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'mfa_ucp_blurb', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\n\t\t\nCONTENT;\n\nforeach ( $handlers as $key => $handler ):\n$return .= <<<CONTENT\n\n\t\t\t<div class=\"ipsSpacer_bottom ipsPad ipsAreaBackground_light ipsClearfix\">\n\t\t\t\t<h2 class=\"ipsType_sectionHead ipsType_large\">\nCONTENT;\n$return .= htmlspecialchars( $handler->ucpTitle(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $handler->memberHasConfiguredHandler( \\IPS\\Member::loggedIn() ) ):\n$return .= <<<CONTENT\n&nbsp;&nbsp;<span class='ipsType_positive ipsType_medium'><i class='fa fa-check'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'enabled', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/h2>\n\t\t\t\t<p class='ipsType_medium'>\nCONTENT;\n$return .= htmlspecialchars( $handler->ucpDesc(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t<ul class=\"ipsList_inline\">\n\t\t\t\t\nCONTENT;\n\nif ( $handler->memberHasConfiguredHandler( \\IPS\\Member::loggedIn() ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li><a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=mfa&act=enable&type={$key}&_new=1\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"settings_mfa\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" class=\"ipsButton ipsButton_verySmall ipsButton_primary\">\nCONTENT;\n\n$val = \"mfa_{$key}_reauth\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t\t<li><a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=mfa&act=disable&type={$key}\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"settings_mfa\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" class=\"ipsType_negative\" data-confirm>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'mfa_disable', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li><a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=mfa&act=enable&type={$key}&_new=1\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"settings_mfa\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" class=\"ipsButton ipsButton_verySmall ipsButton_primary\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'enable', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/ul>\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nif ( !\\IPS\\Member::loggedIn()->group['g_hide_online_list'] ):\n$return .= <<<CONTENT\n\n<div class='ipsAreaBackground_light ipsPadding ipsBorder_bottom \nCONTENT;\n\nif ( \\count( $handlers ) ):\n$return .= <<<CONTENT\nipsBorder_top\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t<h2 class='ipsType_pageTitle'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'settings_privacy_title', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n<\/div>\n<div class='ipsPadding'>\n\t<div class='ipsClearfix'>\n\t\t<h2 class='ipsType_sectionHead ipsType_large'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'online_visibility', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n&nbsp;&nbsp;\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->members_bitoptions['is_anon'] ):\n$return .= <<<CONTENT\n<span class='ipsType_negative ipsType_medium'><i class='fa fa-times'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'online_status_hidden', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n<span class='ipsType_positive ipsType_medium'><i class='fa fa-check'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'online_status_visible', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/h2>\n\t\t<p class='ipsType_medium'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'online_visibility_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->members_bitoptions['is_anon'] ):\n$return .= <<<CONTENT\n\n\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&do=updateAnon&value=0\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"settings\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_verySmall ipsButton_primary'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'show_online_status', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&do=updateAnon&value=1\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"settings\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_verySmall ipsButton_primary'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'hide_online_status', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settingsMfaPassword( $login, $error ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<div class='ipsAreaBackground_light ipsPadding ipsBorder_bottom'>\n    <h2 class=\"ipsType_pageTitle\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ucp_mfa', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n<\/div>\n<div class='ipsPadding'>\n    \nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"system\", \\IPS\\Request::i()->app )->reauthenticate( $login, $error, 'mfa_ucp_blurb_password' );\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settingsMfaSetup( $configurationScreen, $url ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div id='elTwoFactorAuthentication' class='ipsModal' data-controller='core.global.core.2fa'>\n\t<div>\n\t\t<form action=\"\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" method=\"post\" accept-charset='utf-8' data-ipsForm class=\"ipsForm ipsForm_fullWidth\">\n\t\t\t<input type=\"hidden\" name=\"mfa_setup\" value=\"1\">\n\t\t\t<input type=\"hidden\" name=\"csrfKey\" value=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Session::i()->csrfKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\t{$configurationScreen}\n\t\t<\/form>\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settingsOverview( $loginMethods, $canChangePassword ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsPadding sm:ipsPadding:half'>\n\t<div class='ipsColumns ipsColumns_collapsePhone'>\n\t\t<div class='ipsColumn ipsColumn_fluid'>\n\t\t\t<ul class='ipsDataList'>\n\t\t\t\t<li class='ipsDataItem'>\n\t\t\t\t\t<div class='ipsDataItem_main'>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->group['g_dname_changes'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=username\", null, \"settings_username\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" class=\"ipsButton ipsButton_link ipsPos_right\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<h4 class='ipsDataItem_title'><strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'username', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/h4><br>\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Member::loggedIn()->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/li>\n\t\t\t\t<li class='ipsDataItem'>\n\t\t\t\t\t<div class='ipsDataItem_main'>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->allow_email_changes != 'disabled' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->allow_email_changes == 'redirect' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Settings::i()->allow_email_changes_target, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' target=\"_blank\" rel=\"noopener\" class=\"ipsButton ipsButton_link ipsPos_right\">\n\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=email\", null, \"settings_email\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' class=\"ipsButton ipsButton_link ipsPos_right\">\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<h4 class='ipsDataItem_title'><strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'email_address', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/h4><br>\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Member::loggedIn()->email, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/li>\n\t\t\t\t\nCONTENT;\n\nif ( $canChangePassword ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li class='ipsDataItem'>\n\t\t\t\t\t\t<div class='ipsDataItem_main'>\n\t\t\t\t\t\t\t<a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=password\", null, \"settings_password\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" class=\"ipsButton ipsButton_link ipsPos_right\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t<h4 class='ipsDataItem_title'><strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'password', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/h4><br>\n\t\t\t\t\t\t\t********\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/li>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<li class='ipsDataItem'>\n\t\t\t\t\t<div class='ipsDataItem_main'>\n\t\t\t\t\t\t<h4 class='ipsDataItem_title'><strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profile_completion_status', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/h4><br>\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->profileNextStep( \\IPS\\Member::loggedIn()->nextProfileStep(), false, false );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/li>\n\t\t\t\t\nCONTENT;\n\nforeach ( $loginMethods as $id => $details ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li class='ipsDataItem ipsClearfix'>\n\t\t\t\t\t\t<div class=\"ipsDataItem_icon\">\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $details['icon'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<img src=\"\nCONTENT;\n$return .= htmlspecialchars( $details['icon'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsUserPhoto ipsUserPhoto_mini\">\n\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<img src=\"\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->resource( \"default_photo.png\", \"core\", 'global', false );\n$return .= <<<CONTENT\n\" class=\"ipsUserPhoto ipsUserPhoto_mini\">\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<div class='ipsDataItem_main'>\n\t\t\t\t\t\t\t<a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=login&service={$id}\", null, \"settings_login\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" class=\"ipsButton ipsButton_link ipsPos_right\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profilesync_configure', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t<h4 class='ipsDataItem_title'><strong>\nCONTENT;\n$return .= htmlspecialchars( $details['title'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/strong><\/h4><br>\n\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $details['blurb'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/li>\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t<\/ul>\n\t\t<\/div>\n\t\t<div class='ipsColumn ipsColumn_wide'>\n\t\t\t<div class='ipsBox ipsBox--child'>\n\t\t\t\t\nCONTENT;\n\n$thisMemberID = \\IPS\\Member::loggedIn()->member_id;\n$return .= <<<CONTENT\n\n\t\t\t\t<h3 class='ipsType_sectionTitle'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'other_settings', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t\t\t<ul class='ipsSideMenu_list ipsPadding:half'>\n\t\t\t\t\t<li class='ipsSideMenu_item'><a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=notifications&do=options\", null, \"notifications_options\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'notification_options', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->canAccessModule( \\IPS\\Application\\Module::get( 'core', 'members', 'front' ) ) AND \\IPS\\Member::loggedIn()->group['g_edit_profile'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class='ipsSideMenu_item'><a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Member::loggedIn()->url()->setQueryString( 'do', 'edit' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-modal='true' data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profile_edit', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profile_edit', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->ignore_system_on ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class='ipsSideMenu_item'><a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=ignore\", null, \"ignore\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'menu_manage_ignore', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/ul>\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settingsPassword( $form=null ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsAreaBackground_light ipsPadding ipsBorder_bottom'>\n\t<h2 class='ipsType_pageTitle'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_password', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n<\/div>\n\n<div class='ipsPadding'>\n\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->passwordResetForced() ):\n$return .= <<<CONTENT\n\n\t\t<p class='ipsMessage ipsMessage_warning'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'password_reset_required', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $form ):\n$return .= <<<CONTENT\n\n\t\t{$form}\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t<div class='ipsType_normal'>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_password_admin_1', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\n\t\t<ol class='ipsList_bullets ipsList_numbers ipsSpacer_top ipsType_normal'>\n\t\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_password_admin_2', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t<li>\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::loggedIn()->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_password_admin_3', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_password_admin_4', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_password_admin_5', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t<\/ol>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settingsProfileSyncLogin( $method, $login, $error ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class=\"ipsPadding\">\n\t<div class=\"ipsType_normal ipsSpacer_bottom\">\nCONTENT;\n\n$sprintf = array($method->_title); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profilesync_blurb', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/div>\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"system\", \\IPS\\Request::i()->app )->settingsLoginConnect( $method, $login, $error );\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settingsReferrals( $table, $url, $rules ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsAreaBackground_light ipsPadding ipsBorder_bottom'>\n\t<h2 class=\"ipsType_pageTitle\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'referrals', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n<\/div>\n\n<div class='ipsPadding'>\n\t<div class='ipsBox ipsBox--child ipsSpacer_bottom cReferralLinks' data-controller='core.front.system.referrals'>\n\t\t<div class='ipsPad cReferrals_directLink'>\n\t\t\t<h3 class='ipsType_sectionHead'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'referral_directlink', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t\t<span class='cReferrals_directLink_link'>\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t<input class='cReferrals_directLink_input ipsHide' type=\"text\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\t<button class=\"cReferrer_copy cReferrer_copy_link ipsButton ipsButton_alternate ipsButton_veryVerySmall\" data-clipboard-text=\"\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'copy', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/button>\n\t\t<\/div>\n\t\t\nCONTENT;\n\nif ( \\count( \\IPS\\core\\ReferralBanner::roots() ) ):\n$return .= <<<CONTENT\n\n\t\t<div class='cReferrals_grid ipsPad_half'>\n\t\t\nCONTENT;\n\n$count = 0;\n$return .= <<<CONTENT\n\n\t\t<div class='cReferrals_grid_row ipsSpacer_top'>\n\t\t\t\nCONTENT;\n\nforeach ( \\IPS\\core\\ReferralBanner::roots() as $banner ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div class='cReferrals_grid_item ipsClear ipsClearfix ipsBox'>\n\t\t\t\t\t<div class='cReferrals_grid_item__image' style='background-image: url(\"\nCONTENT;\n\n$return .= \\IPS\\File::get( \"core_ReferralBanners\", $banner->url )->url;\n$return .= <<<CONTENT\n\")'>\n\t\t\t\t\t\t{$banner->_title}\n\t\t\t\t\t<\/div>\n\t\t\t\t\t<div class='cReferrals_grid_item__body ipsPad'>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div class='ipsSpacer_bottom'>\n\t\t\t\t\t\t\t\t<h3 class='ipsType_minorHeading'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'referral_html_banner', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t\t\t\t\t\t\t<input type='text' class='ipsField_fullWidth' id=\"bannerValue_\nCONTENT;\n$return .= htmlspecialchars( $banner->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"&lt;a href='\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'&gt;&lt;img src='\nCONTENT;\n\n$return .= \\IPS\\File::get( \"core_ReferralBanners\", $banner->url )->url;\n$return .= <<<CONTENT\n' alt='\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->board_name;\n$return .= <<<CONTENT\n'&gt;&lt;\/a&gt;\">\n\t\t\t\t\t\t\t\t<button class=\"cReferrer_copy ipsButton ipsButton_light ipsButton_small ipsButton_fullWidth ipsSpacer_top ipsSpacer_half\" data-clipboard-target=\"#bannerValue_\nCONTENT;\n$return .= htmlspecialchars( $banner->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'copy', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/button>\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t\nCONTENT;\n\n$count++;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $count % 3 == 0 and $count !== \\count( \\IPS\\core\\ReferralBanner::roots() ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/div>\n\t\t\t\t\t<div class='cBlog_grid_row ipsSpacer_top'>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t<\/div>\n\n\t<div class=\"ipsBox ipsBox--child ipsSpacer_bottom ipsClearfix\">\n\t\t<div class=\"ipsAreaBackground_light ipsClearfix ipsPad\">\n\t\t\t<strong><i class=\"fa fa-users\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'referrals_yours', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t<\/div>\n\t\t<div class=\"ipsPad\">\n\t\t\t{$table}\n\t\t<\/div>\n\t<\/div>\n\n\t\nCONTENT;\n\nif ( $rules ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"nexus\", 'front' )->referralRulesCommission( $rules );\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settingsSecureAccount( $canChangePassword, $canConfigureMfa, $hasConfiguredMfa, $loginMethods, $oauthApps=0 ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('secure_account'), \\IPS\\Member::loggedIn()->language()->addToStack('secure_account_blurb') );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $canChangePassword ):\n$return .= <<<CONTENT\n\n\t<div class=\"ipsBox ipsBox--child ipsSpacer_bottom\">\n\t\t<h2 class=\"ipsType_sectionTitle ipsType_reset\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_password', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t<div class=\"ipsPad ipsType_normal\">\n\t\t\t<p class=\"ipsType_reset\">\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'secure_account_change_password', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t\t<div class=\"ipsSpacer_top\">\n\t\t\t\t<a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=password\", null, \"settings_password\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" target=\"_blank\" rel=\"noopener\" class=\"ipsButton ipsButton_primary ipsButton_small\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_password', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $canConfigureMfa ):\n$return .= <<<CONTENT\n\n\t<div class=\"ipsBox ipsBox--child ipsSpacer_bottom\">\n\t\t<h2 class=\"ipsType_sectionTitle ipsType_reset\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'mfa_settings_title', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t<div class=\"ipsPad ipsType_normal\">\n\t\t\t<p class=\"ipsType_reset\">\n\t\t\t\t\nCONTENT;\n\nif ( $hasConfiguredMfa ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'secure_account_mfa_revise', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'secure_account_mfa_setup', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t\t<div class=\"ipsSpacer_top\">\n\t\t\t\t<a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=mfa\", null, \"settings_mfa\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" target=\"_blank\" rel=\"noopener\" class=\"ipsButton ipsButton_primary ipsButton_small\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'mfa_settings_title', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( \\count( $loginMethods ) ):\n$return .= <<<CONTENT\n\n\t<div class=\"ipsBox ipsBox--child ipsSpacer_bottom\">\n\t\t<h2 class=\"ipsType_sectionTitle ipsType_reset\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'secure_account_login_title', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t<div class=\"ipsPad ipsType_normal\">\n\t\t\t<p class=\"ipsType_reset ipsSpacer_bottom\">\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'secure_account_login_info', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t\t<ul class=\"ipsDataList\">\n\t\t\t\t\nCONTENT;\n\nforeach ( $loginMethods as $id => $details ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li class='ipsDataItem ipsClearfix'>\n\t\t\t\t\t\t<div class=\"ipsDataItem_icon ipsPos_top\">\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $details['icon'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<img src=\"\nCONTENT;\n$return .= htmlspecialchars( $details['icon'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsUserPhoto ipsUserPhoto_mini\">\n\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<img src=\"\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->resource( \"default_photo.png\", \"core\", 'global', false );\n$return .= <<<CONTENT\n\" class=\"ipsUserPhoto ipsUserPhoto_mini\">\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<div class='ipsDataItem_main'>\n\t\t\t\t\t\t\t<h4 class='ipsDataItem_title'><strong>\nCONTENT;\n$return .= htmlspecialchars( $details['title'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/strong><\/h4><br>\n\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $details['blurb'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<br>\n\t\t\t\t\t\t\t<a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=login&service={$id}\", null, \"settings_login\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" class=\"ipsButton ipsButton_primary ipsButton_small\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profilesync_configure', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t<\/div>\t\t\t\t\t\t\t\n\t\t\t\t\t<\/li>\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t<\/ul>\n\t\t<\/div>\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $oauthApps ):\n$return .= <<<CONTENT\n\n\t<div class=\"ipsBox ipsBox--child ipsSpacer_bottom\">\n\t\t<h2 class=\"ipsType_sectionTitle ipsType_reset\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'oauth_apps', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t<div class=\"ipsPad ipsType_normal\">\n\t\t\t<p class=\"ipsType_reset\">\n\t\t\t\t\nCONTENT;\n\n$pluralize = array( $oauthApps ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'secure_account_apps', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t\t<div class=\"ipsSpacer_top\">\n\t\t\t\t<a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=settings&area=apps\", null, \"settings_apps\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" target=\"_blank\" rel=\"noopener\" class=\"ipsButton ipsButton_primary ipsButton_small\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'review_oauth_apps', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settingsSignature( $form, $sigLimits ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsPadding'>\n\nCONTENT;\n\nif ( $sigLimits[1] != \"\" or $sigLimits[2] or $sigLimits[3] or $sigLimits[4] or $sigLimits[5] ):\n$return .= <<<CONTENT\n\n\t\t<h2 class='ipsType_sectionHead'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'signature_restrictions', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t<p class='ipsType_medium ipsType_reset'>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ensure_signature_restrictions', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n:\n\t\t<\/p>\n\n\t\t<div class='ipsType_textBlock ipsType_normal'>\n\t\t\t<br>\n\t\t\t<ul class='ipsList_inline'>\n\t\t\t\t\nCONTENT;\n\nif ( $sigLimits[1] != \"\" ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li>\nCONTENT;\n\nif ( $sigLimits[1] ):\n$return .= <<<CONTENT\n<i class='fa fa-check'><\/i> \nCONTENT;\n\n$pluralize = array( $sigLimits[1] ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sig_max_imagesr', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n<i class='fa fa-close'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sig_max_imagesr_none', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $sigLimits[2] or $sigLimits[3] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li><i class='fa fa-check'><\/i> \nCONTENT;\n\n$sprintf = array($sigLimits[2], $sigLimits[3]); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sig_max_imgsize', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $sigLimits[4] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li><i class='fa fa-check'><\/i> \nCONTENT;\n\n$pluralize = array( $sigLimits[4] ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sig_max_urls', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $sigLimits[5] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li><i class='fa fa-check'><\/i> \nCONTENT;\n\n$pluralize = array( $sigLimits[5] ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sig_max_lines', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/ul>\n\t\t<\/div>\n\t\t<hr class='ipsHr'><br>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t{$form}\n\t<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settingsUsername( $form, $made, $allowed, $since, $days ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsAreaBackground_light ipsPadding ipsBorder_bottom'>\n\t<h2 class='ipsType_pageTitle'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_username', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n<\/div>\n<div class='ipsPadding'>\n\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->group['g_dname_changes'] != -1 ):\n$return .= <<<CONTENT\n\n\t\t<div class='ipsType_textBlock ipsType_normal'>\n\t\t\t<ul class='ipsList_bullets'>\n\t\t\t\t<li>\nCONTENT;\n\n$sprintf = array($made, $allowed, $since->localeDate(), $days); $pluralize = array( $allowed ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_username_explain', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf, 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t<\/ul>\n\t\t<\/div>\n\t\t<br>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\n\t{$form}\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction settingsUsernameLimitReached( $message ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsAreaBackground_light ipsPadding ipsBorder_bottom'>\n    <h2 class='ipsType_pageTitle'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_username', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n<\/div>\n<div class='ipsPadding'>\n    {$message}\n<\/div>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction terms(  ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( !\\IPS\\Request::i()->isAjax() ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('reg_terms') );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<div class='ipsBox_alt ipsType_normal ipsType_richText ipsPad'>\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\", 'global' )->richText( \\IPS\\Member::loggedIn()->language()->addToStack('reg_rules_value'), array('ipsType_normal') );\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction unfollowFromEmail( $title, $member, $form, $choice ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $choice ):\n$return .= <<<CONTENT\n\n<div class='ipsBox_alt'>\n\t<p class='ipsType_reset ipsType_center ipsType_huge'>\n\t\t<i class='fa fa-envelope'><\/i>\n\t<\/p>\n\n\t<h1 class='ipsType_veryLarge ipsType_center'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'follow_guest_unfollow_title', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\n\t<div class='ipsType_large ipsType_center ipsType_richText'>\n\t\t\nCONTENT;\n\nif ( $choice == 'single' ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$sprintf = array($title); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'follow_guest_unfollowed_thing', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nelseif ( $choice == 'all' ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'follow_guest_unfollowed_all', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n\t<br>\n\t<p class='ipsType_center'>\n\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"\/\", null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_normal ipsButton_small'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'go_community_home', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t<\/p>\n<\/div>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n<div class='ipsPadding'>\n\t<h2 class='ipsType_sectionHead'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'follow_guest_unfollow_title', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t<p class='ipsType_light'>\nCONTENT;\n\n$sprintf = array($member->name, $member->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'follow_guest_followed_by', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/p>\n\t{$form}\n<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction unsubscribed(  ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->pageHeader( \\IPS\\Member::loggedIn()->language()->addToStack('unsubscribed') );\n$return .= <<<CONTENT\n\n<div class='ipsLayout_contentSection ipsBox ipsPadding'>\n\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unsubscribed_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction warningRow( $table, $headers, $rows ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nforeach ( $rows as $row ):\n$return .= <<<CONTENT\n\n\t<li class=\"ipsDataItem \nCONTENT;\n\nif ( method_exists( $row, 'tableClass' ) && $row->tableClass() ):\n$return .= <<<CONTENT\nipsDataItem_\nCONTENT;\n$return .= htmlspecialchars( $row->tableClass(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \">\n\t\t<div class='ipsDataItem_icon ipsPos_top'>\n\t\t\t<a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=warnings&do=view&id={$row->member}&w={$row->id}\", null, \"warn_view\", array( \\IPS\\Member::load( $row->member )->members_seo_name ), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" data-ipsDialog data-ipsDialog-size='narrow' class=\"ipsType_blendLinks\" data-ipsTooltip title='\nCONTENT;\n\n$pluralize = array( $row->points ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'wan_action_points', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n'>\n                <span class=\"ipsPoints \nCONTENT;\n\nif ( $row->expire_date == 0 ):\n$return .= <<<CONTENT\nipsPoints_removed\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= htmlspecialchars( $row->points, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t<\/a>\n\t\t<\/div>\n\t\t<div class='ipsDataItem_main'>\n\t\t\t<h4 class='ipsDataItem_title'>\t\t\t\t\n\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $row->url(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'view_announcement', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( $row->tableHoverUrl ):\n$return .= <<<CONTENT\ndata-ipsHover\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\nCONTENT;\n\nif ( $row->mapped('title') ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $row->mapped('title'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n<em class=\"ipsType_light\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'content_deleted', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/em>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/a>\n\t\t\t<\/h4>\n            \nCONTENT;\n\nif ( $row->note_member ):\n$return .= <<<CONTENT\n\n                <div class='ipsDataItem_meta ipsType_richText ipsType_medium' data-ipsTruncate data-ipsTruncate-size='1 lines' data-ipsTruncate-type='remove'>\n                    \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'warn_member_note', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n: {$row->note_member}\n                <\/div>\n            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n            \nCONTENT;\n\nif ( $row->note_mods and \\IPS\\Member::loggedIn()->modPermission('mod_see_warn') ):\n$return .= <<<CONTENT\n\n                <div class='ipsDataItem_meta ipsType_richText ipsType_medium' data-ipsTruncate data-ipsTruncate-size='1 lines' data-ipsTruncate-type='remove'>\n                    \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'warn_mod_note', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n: {$row->note_mods}\n                <\/div>\n            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n            <ul class='ipsList_inline ipsSpacer_top ipsSpacer_half'>\n            \nCONTENT;\n\nif ( \\IPS\\Settings::i()->warnings_acknowledge ):\n$return .= <<<CONTENT\n\n            \t<li>\n\t\t\t\t\t\nCONTENT;\n\nif ( $row->acknowledged ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<strong class='ipsType_success'><i class='fa fa-check-circle'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'warning_acknowledged', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<strong class='ipsType_light'><i class='fa fa-circle-o'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'warning_not_acknowledged', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<li class='ipsType_light'>\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::load( $row->moderator )->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'warned_by', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\n$val = ( $row->__get( $row::$databaseColumnMap['date'] ) instanceof \\IPS\\DateTime ) ? $row->__get( $row::$databaseColumnMap['date'] ) : \\IPS\\DateTime::ts( $row->__get( $row::$databaseColumnMap['date'] ) );$return .= $val->html();\n$return .= <<<CONTENT\n\n                \nCONTENT;\n\nif ( $row->expire_date > 0 ):\n$return .= <<<CONTENT\n<em><strong>(\nCONTENT;\n\n$sprintf = array(\\IPS\\DateTime::ts( $row->expire_date )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'warning_expires', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n)<\/em><\/strong>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                \nCONTENT;\n\nif ( $row->expire_date == 0 ):\n$return .= <<<CONTENT\n\n                <em><strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'warning_no_longer_active', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( $row->removed_on ):\n$return .= <<<CONTENT\n \nCONTENT;\n\n$sprintf = array(\\IPS\\DateTime::ts( $row->removed_on )->relative()); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'warning_expired_on', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/em><\/strong>\n                \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n            <\/li>\n\t\t<\/div>\n\t\t\nCONTENT;\n\nif ( $row->canDelete() ):\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsDataItem_generic ipsDataItem_size3'>\n\t\t\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $row->url('delete')->csrf(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'revoke_this_warning', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-action=\"revoke\" class='ipsPos_right ipsButton ipsButton_verySmall ipsButton_light' data-ipsDialog data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'revoke_this_warning', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsDialog-size='medium'><i class=\"fa fa-undo\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'revoke_this_warning', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $table->canModerate() ):\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsDataItem_modCheck ipsType_noBreak ipsPos_center'>\n\t\t\t\t<span class='ipsCustomInput'>\n\t\t\t\t\t<input type='checkbox' data-role='moderation' name=\"moderate[\nCONTENT;\n$return .= htmlspecialchars( $row->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]\" data-actions=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ' ', $table->multimodActions( $row ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-state='\nCONTENT;\n\nif ( !$row->active ):\n$return .= <<<CONTENT\nhidden\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t<span><\/span>\n\t\t\t\t<\/span>\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/li>\n\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}}"
VALUE;
