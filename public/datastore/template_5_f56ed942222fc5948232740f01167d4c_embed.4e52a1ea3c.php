<?php

return <<<'VALUE'
"namespace IPS\\Theme;\nclass class_core_front_embed extends \\IPS\\Theme\\Template\n{\n\tpublic $cache_key = '09b1a41bbf9d26c23c910cbce97da48f';\n\tfunction embedHeader( $content, $lang, $date, $url ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<div class='ipsRichEmbed_header ipsAreaBackground_light ipsClearfix'>\n\t<a href='\nCONTENT;\n\nif ( $url ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $content->url( \"getPrefComment\" ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' class='ipsRichEmbed_openItem'><i class='fa fa-external-link-square'><\/i><\/a>\n\t<div class='ipsPhotoPanel ipsPhotoPanel_tiny ipsType_blendLinks'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $content->author(), 'tiny', $content->warningRef() );\n$return .= <<<CONTENT\n\n\t\t<div>\n\t\t\t<p class='ipsRichEmbed_title ipsType_reset ipsTruncate ipsTruncate_line'>\n\t\t\t\t<a href='\nCONTENT;\n\nif ( $url ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $content->url( \"getPrefComment\" ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $lang, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t<\/p>\n\t\t\t<p class='ipsRichEmbed_author ipsType_reset ipsType_light ipsTruncate ipsTruncate_line'>\n\t\t\t\t<a href='\nCONTENT;\n\nif ( $url ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $content->url( \"getPrefComment\" ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$val = ( $date instanceof \\IPS\\DateTime ) ? $date : \\IPS\\DateTime::ts( $date );$return .= $val->html();\n$return .= <<<CONTENT\n<\/a>\n\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction embedItemStats( $content, $commentsEnabled=TRUE ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n\nCONTENT;\n\n$reactionItem = $content;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $content::$firstCommentRequired ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$reactionItem = $content->firstComment();\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nif ( ( $content instanceof \\IPS\\Content\\Ratings and $content->averageRating() ) || ( isset( $content::$reviewClass ) AND $content->averageReviewRating() ) || $content::$commentClass || ( \\IPS\\Settings::i()->reputation_enabled and \\IPS\\IPS::classUsesTrait( $reactionItem, 'IPS\\Content\\Reactable' ) and \\count( $reactionItem->reactions() ) ) ):\n$return .= <<<CONTENT\n\n\t<ul class='ipsList_inline ipsRichEmbed_stats ipsType_normal ipsType_blendLinks ipsSpacer_top ipsSpacer_half'>\n\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->reputation_enabled and \\IPS\\IPS::classUsesTrait( $reactionItem, 'IPS\\Content\\Reactable' ) and \\count( $reactionItem->reactions() ) ):\n$return .= <<<CONTENT\n\n\t\t\t<li>\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->reactionOverview( $reactionItem, TRUE, 'small' );\n$return .= <<<CONTENT\n\n\t\t\t<\/li>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $content instanceof \\IPS\\Content\\Ratings and $rating = $content->averageRating() ):\n$return .= <<<CONTENT\n\n\t\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->rating( 'large', $rating, 5 );\n$return .= <<<CONTENT\n<\/li>\n\t\t\nCONTENT;\n\nelseif ( isset( $content::$reviewClass ) AND $rating = $content->averageReviewRating() ):\n$return .= <<<CONTENT\n\n\t\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->rating( 'large', $rating, \\IPS\\Settings::i()->reviews_rating_out_of );\n$return .= <<<CONTENT\n<span class='ipsType_light'>\nCONTENT;\n\nif ( $content->mapped('num_reviews') ):\n$return .= <<<CONTENT\n(\nCONTENT;\n\n$pluralize = array( $content->mapped('num_reviews') ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'from_num_reviews', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n)\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_reviews_yet', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/span><\/li>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $content::$commentClass AND $commentsEnabled ):\n$return .= <<<CONTENT\n\n\t\t\t<li>\n\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $content->url( \"getPrefComment\" )->setQueryString('tab', 'comments'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t<i class='fa fa-comment'><\/i> \n\t\t\t\t\t\nCONTENT;\n\nif ( $content::$firstCommentRequired ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$pluralize = array( $content->mapped('num_comments') - 1 ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'num_replies', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$pluralize = array( $content->mapped('num_comments') ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'num_comments', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/a>\n\t\t\t<\/li>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/ul>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction embedOriginalItem( $item, $showContent=FALSE, $otherInfo=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<h3 class='ipsRichEmbed_itemTitle ipsTruncate ipsTruncate_line ipsType_blendLinks'>\n\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $item->url( \"getPrefComment\" ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n$return .= htmlspecialchars( $item->mapped('title'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= htmlspecialchars( $item->mapped('title'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n<\/h3>\n\nCONTENT;\n\nif ( $showContent ):\n$return .= <<<CONTENT\n\n\t<div class='ipsType_richText ipsType_medium' data-truncate='1'>\n\t\t{$item->truncated(TRUE)}\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $otherInfo ):\n$return .= <<<CONTENT\n\n\t{$otherInfo}\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<ul class='ipsList_inline ipsType_medium ipsType_light ipsSpacer_top ipsSpacer_half'>\n\t<li class='ipsRichEmbed_commentPhoto'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $item->author(), 'tinier' );\n$return .= <<<CONTENT\n\n\t<\/li>\n\t<li>\n\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $item->url()->setQueryString( 'do', 'getFirstComment' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\nCONTENT;\n\n$sprintf = array($item->author()->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'byline', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n \nCONTENT;\n\n$val = ( $item->mapped('date') instanceof \\IPS\\DateTime ) ? $item->mapped('date') : \\IPS\\DateTime::ts( $item->mapped('date') );$return .= $val->html();\n$return .= <<<CONTENT\n\n\t\t<\/a>\n\t<\/li>\n\t\nCONTENT;\n\nif ( $item::$commentClass ):\n$return .= <<<CONTENT\n\n\t\t<li>\n\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $item->url()->setQueryString( 'do', 'getLastComment' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\nCONTENT;\n\nif ( $item::$firstCommentRequired ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<i class='fa fa-comment'><\/i> \nCONTENT;\n\n$pluralize = array( $item->mapped('num_comments') - 1 ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'num_replies', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t<i class='fa fa-comment'><\/i> \nCONTENT;\n\n$pluralize = array( $item->mapped('num_comments') ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'num_comments', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/a>\n\t\t<\/li>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/ul>\nCONTENT;\n\n\t\treturn $return;\n}}"
VALUE;
